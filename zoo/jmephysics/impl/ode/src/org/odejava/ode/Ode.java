package org.odejava.ode;

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version: 1.3.20
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class Ode implements OdeConstants {
    public static SWIGTYPE_p_float new_floatArray( int nelements ) {
        long cPtr = OdeJNI.new_floatArray( nelements );
        return ( cPtr == 0 ) ? null : new SWIGTYPE_p_float( cPtr, false );
    }

    public static void delete_floatArray( SWIGTYPE_p_float ary ) {
        OdeJNI.delete_floatArray( SWIGTYPE_p_float.getCPtr( ary ) );
    }

    public static float floatArray_getitem( SWIGTYPE_p_float ary, int index ) {
        return OdeJNI.floatArray_getitem( SWIGTYPE_p_float.getCPtr( ary ), index );
    }

    public static void floatArray_setitem( SWIGTYPE_p_float ary, int index, float value ) {
        OdeJNI.floatArray_setitem( SWIGTYPE_p_float.getCPtr( ary ), index, value );
    }

    public static SWIGTYPE_p_int new_intArray( int nelements ) {
        long cPtr = OdeJNI.new_intArray( nelements );
        return ( cPtr == 0 ) ? null : new SWIGTYPE_p_int( cPtr, false );
    }

    public static void delete_intArray( SWIGTYPE_p_int ary ) {
        OdeJNI.delete_intArray( SWIGTYPE_p_int.getCPtr( ary ) );
    }

    public static int intArray_getitem( SWIGTYPE_p_int ary, int index ) {
        return OdeJNI.intArray_getitem( SWIGTYPE_p_int.getCPtr( ary ), index );
    }

    public static void intArray_setitem( SWIGTYPE_p_int ary, int index, int value ) {
        OdeJNI.intArray_setitem( SWIGTYPE_p_int.getCPtr( ary ), index, value );
    }

    public static SWIGTYPE_p_dGeomID new_geomIDArray( int nelements ) {
        long cPtr = OdeJNI.new_geomIDArray( nelements );
        return ( cPtr == 0 ) ? null : new SWIGTYPE_p_dGeomID( cPtr, false );
    }

    public static void delete_geomIDArray( SWIGTYPE_p_dGeomID ary ) {
        OdeJNI.delete_geomIDArray( SWIGTYPE_p_dGeomID.getCPtr( ary ) );
    }

    public static SWIGTYPE_p_dGeomID geomIDArray_getitem( SWIGTYPE_p_dGeomID ary, int index ) {
        return new SWIGTYPE_p_dGeomID( OdeJNI.geomIDArray_getitem( SWIGTYPE_p_dGeomID.getCPtr( ary ), index ), true );
    }

    public static void geomIDArray_setitem( SWIGTYPE_p_dGeomID ary, int index, SWIGTYPE_p_dGeomID value ) {
        OdeJNI.geomIDArray_setitem( SWIGTYPE_p_dGeomID.getCPtr( ary ), index, SWIGTYPE_p_dGeomID.getCPtr( value ) );
    }

    public static SWIGTYPE_p_dBodyID getBODYID_ZERO() {
        return new SWIGTYPE_p_dBodyID( OdeJNI.get_BODYID_ZERO(), true );
    }

    public static SWIGTYPE_p_dJointGroupID getJOINTGROUPID_ZERO() {
        return new SWIGTYPE_p_dJointGroupID( OdeJNI.get_JOINTGROUPID_ZERO(), true );
    }

    public static SWIGTYPE_p_dSpaceID getPARENTSPACEID_ZERO() {
        return new SWIGTYPE_p_dSpaceID( OdeJNI.get_PARENTSPACEID_ZERO(), true );
    }

    public static void setWorldID( SWIGTYPE_p_dWorldID id ) {
        OdeJNI.setWorldID( SWIGTYPE_p_dWorldID.getCPtr( id ) );
    }

    public static void setContactGroupID( SWIGTYPE_p_dJointGroupID id ) {
        OdeJNI.setContactGroupID( SWIGTYPE_p_dJointGroupID.getCPtr( id ) );
    }

    public static void setSurfaceMode( int mode ) {
        OdeJNI.setSurfaceMode( mode );
    }

    public static void setSurfaceMu( float mu ) {
        OdeJNI.setSurfaceMu( mu );
    }

    public static void setSurfaceMu2( float mu2 ) {
        OdeJNI.setSurfaceMu2( mu2 );
    }

    public static void setSurfaceBounce( float bounce ) {
        OdeJNI.setSurfaceBounce( bounce );
    }

    public static void setSurfaceBounceVel( float bounceVel ) {
        OdeJNI.setSurfaceBounceVel( bounceVel );
    }

    public static void setSurfaceMotion1( float motion1 ) {
        OdeJNI.setSurfaceMotion1( motion1 );
    }

    public static void setSurfaceMotion2( float motion2 ) {
        OdeJNI.setSurfaceMotion2( motion2 );
    }

    public static void setSurfaceSlip1( float slip1 ) {
        OdeJNI.setSurfaceSlip1( slip1 );
    }

    public static void setSurfaceSlip2( float slip2 ) {
        OdeJNI.setSurfaceSlip2( slip2 );
    }

    public static void setSurfaceSoftErp( float softErp ) {
        OdeJNI.setSurfaceSoftErp( softErp );
    }

    public static void setSurfaceSoftCfm( float softCfm ) {
        OdeJNI.setSurfaceSoftCfm( softCfm );
    }

    public static void dGeomDestroy( SWIGTYPE_p_dGeomID arg0 ) {
        OdeJNI.dGeomDestroy( SWIGTYPE_p_dGeomID.getCPtr( arg0 ) );
    }

    public static void dGeomSetData( SWIGTYPE_p_dGeomID arg0, SWIGTYPE_p_void arg1 ) {
        OdeJNI.dGeomSetData( SWIGTYPE_p_dGeomID.getCPtr( arg0 ), SWIGTYPE_p_void.getCPtr( arg1 ) );
    }

    public static SWIGTYPE_p_void dGeomGetData( SWIGTYPE_p_dGeomID arg0 ) {
        long cPtr = OdeJNI.dGeomGetData( SWIGTYPE_p_dGeomID.getCPtr( arg0 ) );
        return ( cPtr == 0 ) ? null : new SWIGTYPE_p_void( cPtr, false );
    }

    public static void dGeomSetBody( SWIGTYPE_p_dGeomID arg0, SWIGTYPE_p_dBodyID arg1 ) {
        OdeJNI.dGeomSetBody( SWIGTYPE_p_dGeomID.getCPtr( arg0 ), SWIGTYPE_p_dBodyID.getCPtr( arg1 ) );
    }

    public static SWIGTYPE_p_dBodyID dGeomGetBody( SWIGTYPE_p_dGeomID arg0 ) {
        return new SWIGTYPE_p_dBodyID( OdeJNI.dGeomGetBody( SWIGTYPE_p_dGeomID.getCPtr( arg0 ) ), true );
    }

    public static void dGeomSetPosition( SWIGTYPE_p_dGeomID arg0, float x, float y, float z ) {
        OdeJNI.dGeomSetPosition( SWIGTYPE_p_dGeomID.getCPtr( arg0 ), x, y, z );
    }

    public static void dGeomSetRotation( SWIGTYPE_p_dGeomID arg0, SWIGTYPE_p_float R ) {
        OdeJNI.dGeomSetRotation( SWIGTYPE_p_dGeomID.getCPtr( arg0 ), SWIGTYPE_p_float.getCPtr( R ) );
    }

    public static void dGeomSetQuaternion( SWIGTYPE_p_dGeomID arg0, SWIGTYPE_p_float arg1 ) {
        OdeJNI.dGeomSetQuaternion( SWIGTYPE_p_dGeomID.getCPtr( arg0 ), SWIGTYPE_p_float.getCPtr( arg1 ) );
    }

    public static SWIGTYPE_p_float dGeomGetPosition( SWIGTYPE_p_dGeomID arg0 ) {
        long cPtr = OdeJNI.dGeomGetPosition( SWIGTYPE_p_dGeomID.getCPtr( arg0 ) );
        return ( cPtr == 0 ) ? null : new SWIGTYPE_p_float( cPtr, false );
    }

    public static SWIGTYPE_p_float dGeomGetRotation( SWIGTYPE_p_dGeomID arg0 ) {
        long cPtr = OdeJNI.dGeomGetRotation( SWIGTYPE_p_dGeomID.getCPtr( arg0 ) );
        return ( cPtr == 0 ) ? null : new SWIGTYPE_p_float( cPtr, false );
    }

    public static void dGeomGetQuaternion( SWIGTYPE_p_dGeomID arg0, SWIGTYPE_p_float result ) {
        OdeJNI.dGeomGetQuaternion( SWIGTYPE_p_dGeomID.getCPtr( arg0 ), SWIGTYPE_p_float.getCPtr( result ) );
    }

    public static void dGeomGetAABB( SWIGTYPE_p_dGeomID arg0, SWIGTYPE_p_float aabb ) {
        OdeJNI.dGeomGetAABB( SWIGTYPE_p_dGeomID.getCPtr( arg0 ), SWIGTYPE_p_float.getCPtr( aabb ) );
    }

    public static int dGeomIsSpace( SWIGTYPE_p_dGeomID arg0 ) {
        return OdeJNI.dGeomIsSpace( SWIGTYPE_p_dGeomID.getCPtr( arg0 ) );
    }

    public static SWIGTYPE_p_dSpaceID dGeomGetSpace( SWIGTYPE_p_dGeomID arg0 ) {
        return new SWIGTYPE_p_dSpaceID( OdeJNI.dGeomGetSpace( SWIGTYPE_p_dGeomID.getCPtr( arg0 ) ), true );
    }

    public static int dGeomGetClass( SWIGTYPE_p_dGeomID arg0 ) {
        return OdeJNI.dGeomGetClass( SWIGTYPE_p_dGeomID.getCPtr( arg0 ) );
    }

    public static void dGeomSetCategoryBits( SWIGTYPE_p_dGeomID arg0, long bits ) {
        OdeJNI.dGeomSetCategoryBits( SWIGTYPE_p_dGeomID.getCPtr( arg0 ), bits );
    }

    public static void dGeomSetCollideBits( SWIGTYPE_p_dGeomID arg0, long bits ) {
        OdeJNI.dGeomSetCollideBits( SWIGTYPE_p_dGeomID.getCPtr( arg0 ), bits );
    }

    public static long dGeomGetCategoryBits( SWIGTYPE_p_dGeomID arg0 ) {
        return OdeJNI.dGeomGetCategoryBits( SWIGTYPE_p_dGeomID.getCPtr( arg0 ) );
    }

    public static long dGeomGetCollideBits( SWIGTYPE_p_dGeomID arg0 ) {
        return OdeJNI.dGeomGetCollideBits( SWIGTYPE_p_dGeomID.getCPtr( arg0 ) );
    }

    public static void dGeomEnable( SWIGTYPE_p_dGeomID arg0 ) {
        OdeJNI.dGeomEnable( SWIGTYPE_p_dGeomID.getCPtr( arg0 ) );
    }

    public static void dGeomDisable( SWIGTYPE_p_dGeomID arg0 ) {
        OdeJNI.dGeomDisable( SWIGTYPE_p_dGeomID.getCPtr( arg0 ) );
    }

    public static int dGeomIsEnabled( SWIGTYPE_p_dGeomID arg0 ) {
        return OdeJNI.dGeomIsEnabled( SWIGTYPE_p_dGeomID.getCPtr( arg0 ) );
    }

    public static int dCollide( SWIGTYPE_p_dGeomID o1, SWIGTYPE_p_dGeomID o2, int flags, dContactGeom contact, int skip ) {
        return OdeJNI.dCollide( SWIGTYPE_p_dGeomID.getCPtr( o1 ), SWIGTYPE_p_dGeomID.getCPtr( o2 ), flags, dContactGeom.getCPtr( contact ), skip );
    }

    public static void dSpaceCollide( SWIGTYPE_p_dSpaceID space, SWIGTYPE_p_void data, SWIGTYPE_p_f_p_void_dGeomID_dGeomID__void callback ) {
        OdeJNI.dSpaceCollide( SWIGTYPE_p_dSpaceID.getCPtr( space ), SWIGTYPE_p_void.getCPtr( data ), SWIGTYPE_p_f_p_void_dGeomID_dGeomID__void.getCPtr( callback ) );
    }

    public static SWIGTYPE_p_dGeomID dCreateSphere( SWIGTYPE_p_dSpaceID space, float radius ) {
        return new SWIGTYPE_p_dGeomID( OdeJNI.dCreateSphere( SWIGTYPE_p_dSpaceID.getCPtr( space ), radius ), true );
    }

    public static void dGeomSphereSetRadius( SWIGTYPE_p_dGeomID sphere, float radius ) {
        OdeJNI.dGeomSphereSetRadius( SWIGTYPE_p_dGeomID.getCPtr( sphere ), radius );
    }

    public static float dGeomSphereGetRadius( SWIGTYPE_p_dGeomID sphere ) {
        return OdeJNI.dGeomSphereGetRadius( SWIGTYPE_p_dGeomID.getCPtr( sphere ) );
    }

    public static float dGeomSpherePointDepth( SWIGTYPE_p_dGeomID sphere, float x, float y, float z ) {
        return OdeJNI.dGeomSpherePointDepth( SWIGTYPE_p_dGeomID.getCPtr( sphere ), x, y, z );
    }

    public static SWIGTYPE_p_dGeomID dCreateBox( SWIGTYPE_p_dSpaceID space, float lx, float ly, float lz ) {
        return new SWIGTYPE_p_dGeomID( OdeJNI.dCreateBox( SWIGTYPE_p_dSpaceID.getCPtr( space ), lx, ly, lz ), true );
    }

    public static void dGeomBoxSetLengths( SWIGTYPE_p_dGeomID box, float lx, float ly, float lz ) {
        OdeJNI.dGeomBoxSetLengths( SWIGTYPE_p_dGeomID.getCPtr( box ), lx, ly, lz );
    }

    public static void dGeomBoxGetLengths( SWIGTYPE_p_dGeomID box, SWIGTYPE_p_float result ) {
        OdeJNI.dGeomBoxGetLengths( SWIGTYPE_p_dGeomID.getCPtr( box ), SWIGTYPE_p_float.getCPtr( result ) );
    }

    public static float dGeomBoxPointDepth( SWIGTYPE_p_dGeomID box, float x, float y, float z ) {
        return OdeJNI.dGeomBoxPointDepth( SWIGTYPE_p_dGeomID.getCPtr( box ), x, y, z );
    }

    public static SWIGTYPE_p_dGeomID dCreatePlane( SWIGTYPE_p_dSpaceID space, float a, float b, float c, float d ) {
        return new SWIGTYPE_p_dGeomID( OdeJNI.dCreatePlane( SWIGTYPE_p_dSpaceID.getCPtr( space ), a, b, c, d ), true );
    }

    public static void dGeomPlaneSetParams( SWIGTYPE_p_dGeomID plane, float a, float b, float c, float d ) {
        OdeJNI.dGeomPlaneSetParams( SWIGTYPE_p_dGeomID.getCPtr( plane ), a, b, c, d );
    }

    public static void dGeomPlaneGetParams( SWIGTYPE_p_dGeomID plane, SWIGTYPE_p_float result ) {
        OdeJNI.dGeomPlaneGetParams( SWIGTYPE_p_dGeomID.getCPtr( plane ), SWIGTYPE_p_float.getCPtr( result ) );
    }

    public static float dGeomPlanePointDepth( SWIGTYPE_p_dGeomID plane, float x, float y, float z ) {
        return OdeJNI.dGeomPlanePointDepth( SWIGTYPE_p_dGeomID.getCPtr( plane ), x, y, z );
    }

    public static SWIGTYPE_p_dGeomID dCreateCapsule( SWIGTYPE_p_dSpaceID space, float radius, float length ) {
        return new SWIGTYPE_p_dGeomID( OdeJNI.dCreateCapsule( SWIGTYPE_p_dSpaceID.getCPtr( space ), radius, length ), true );
    }

    public static void dGeomCapsuleSetParams( SWIGTYPE_p_dGeomID Capsule, float radius, float length ) {
        OdeJNI.dGeomCapsuleSetParams( SWIGTYPE_p_dGeomID.getCPtr( Capsule ), radius, length );
    }

    public static void dGeomCapsuleGetParams( SWIGTYPE_p_dGeomID Capsule, SWIGTYPE_p_float radius, SWIGTYPE_p_float length ) {
        OdeJNI.dGeomCapsuleGetParams( SWIGTYPE_p_dGeomID.getCPtr( Capsule ), SWIGTYPE_p_float.getCPtr( radius ), SWIGTYPE_p_float.getCPtr( length ) );
    }

    public static float dGeomCapsulePointDepth( SWIGTYPE_p_dGeomID Capsule, float x, float y, float z ) {
        return OdeJNI.dGeomCapsulePointDepth( SWIGTYPE_p_dGeomID.getCPtr( Capsule ), x, y, z );
    }

    public static SWIGTYPE_p_dGeomID dCreateRay( SWIGTYPE_p_dSpaceID space, float length ) {
        return new SWIGTYPE_p_dGeomID( OdeJNI.dCreateRay( SWIGTYPE_p_dSpaceID.getCPtr( space ), length ), true );
    }

    public static void dGeomRaySetLength( SWIGTYPE_p_dGeomID ray, float length ) {
        OdeJNI.dGeomRaySetLength( SWIGTYPE_p_dGeomID.getCPtr( ray ), length );
    }

    public static float dGeomRayGetLength( SWIGTYPE_p_dGeomID ray ) {
        return OdeJNI.dGeomRayGetLength( SWIGTYPE_p_dGeomID.getCPtr( ray ) );
    }

    public static void dGeomRaySet( SWIGTYPE_p_dGeomID ray, float px, float py, float pz, float dx, float dy, float dz ) {
        OdeJNI.dGeomRaySet( SWIGTYPE_p_dGeomID.getCPtr( ray ), px, py, pz, dx, dy, dz );
    }

    public static void dGeomRayGet( SWIGTYPE_p_dGeomID ray, SWIGTYPE_p_float start, SWIGTYPE_p_float dir ) {
        OdeJNI.dGeomRayGet( SWIGTYPE_p_dGeomID.getCPtr( ray ), SWIGTYPE_p_float.getCPtr( start ), SWIGTYPE_p_float.getCPtr( dir ) );
    }

    public static void dGeomRaySetParams( SWIGTYPE_p_dGeomID g, int FirstContact, int BackfaceCull ) {
        OdeJNI.dGeomRaySetParams( SWIGTYPE_p_dGeomID.getCPtr( g ), FirstContact, BackfaceCull );
    }

    public static void dGeomRayGetParams( SWIGTYPE_p_dGeomID g, SWIGTYPE_p_int FirstContact, SWIGTYPE_p_int BackfaceCull ) {
        OdeJNI.dGeomRayGetParams( SWIGTYPE_p_dGeomID.getCPtr( g ), SWIGTYPE_p_int.getCPtr( FirstContact ), SWIGTYPE_p_int.getCPtr( BackfaceCull ) );
    }

    public static SWIGTYPE_p_dGeomID dCreateGeomTransform( SWIGTYPE_p_dSpaceID space ) {
        return new SWIGTYPE_p_dGeomID( OdeJNI.dCreateGeomTransform( SWIGTYPE_p_dSpaceID.getCPtr( space ) ), true );
    }

    public static void dGeomTransformSetGeom( SWIGTYPE_p_dGeomID g, SWIGTYPE_p_dGeomID obj ) {
        OdeJNI.dGeomTransformSetGeom( SWIGTYPE_p_dGeomID.getCPtr( g ), SWIGTYPE_p_dGeomID.getCPtr( obj ) );
    }

    public static SWIGTYPE_p_dGeomID dGeomTransformGetGeom( SWIGTYPE_p_dGeomID g ) {
        return new SWIGTYPE_p_dGeomID( OdeJNI.dGeomTransformGetGeom( SWIGTYPE_p_dGeomID.getCPtr( g ) ), true );
    }

    public static void dGeomTransformSetCleanup( SWIGTYPE_p_dGeomID g, int mode ) {
        OdeJNI.dGeomTransformSetCleanup( SWIGTYPE_p_dGeomID.getCPtr( g ), mode );
    }

    public static int dGeomTransformGetCleanup( SWIGTYPE_p_dGeomID g ) {
        return OdeJNI.dGeomTransformGetCleanup( SWIGTYPE_p_dGeomID.getCPtr( g ) );
    }

    public static void dGeomTransformSetInfo( SWIGTYPE_p_dGeomID g, int mode ) {
        OdeJNI.dGeomTransformSetInfo( SWIGTYPE_p_dGeomID.getCPtr( g ), mode );
    }

    public static int dGeomTransformGetInfo( SWIGTYPE_p_dGeomID g ) {
        return OdeJNI.dGeomTransformGetInfo( SWIGTYPE_p_dGeomID.getCPtr( g ) );
    }

    public static void dClosestLineSegmentPoints( SWIGTYPE_p_float a1, SWIGTYPE_p_float a2, SWIGTYPE_p_float b1, SWIGTYPE_p_float b2, SWIGTYPE_p_float cp1, SWIGTYPE_p_float cp2 ) {
        OdeJNI.dClosestLineSegmentPoints( SWIGTYPE_p_float.getCPtr( a1 ), SWIGTYPE_p_float.getCPtr( a2 ), SWIGTYPE_p_float.getCPtr( b1 ), SWIGTYPE_p_float.getCPtr( b2 ), SWIGTYPE_p_float.getCPtr( cp1 ), SWIGTYPE_p_float.getCPtr( cp2 ) );
    }

    public static int dBoxTouchesBox( SWIGTYPE_p_float _p1, SWIGTYPE_p_float R1, SWIGTYPE_p_float side1, SWIGTYPE_p_float _p2, SWIGTYPE_p_float R2, SWIGTYPE_p_float side2 ) {
        return OdeJNI.dBoxTouchesBox( SWIGTYPE_p_float.getCPtr( _p1 ), SWIGTYPE_p_float.getCPtr( R1 ), SWIGTYPE_p_float.getCPtr( side1 ), SWIGTYPE_p_float.getCPtr( _p2 ), SWIGTYPE_p_float.getCPtr( R2 ), SWIGTYPE_p_float.getCPtr( side2 ) );
    }

    public static void dInfiniteAABB( SWIGTYPE_p_dGeomID geom, SWIGTYPE_p_float aabb ) {
        OdeJNI.dInfiniteAABB( SWIGTYPE_p_dGeomID.getCPtr( geom ), SWIGTYPE_p_float.getCPtr( aabb ) );
    }

    public static void dCloseODE() {
        OdeJNI.dCloseODE();
    }

    public static int dCreateGeomClass( dGeomClass classptr ) {
        return OdeJNI.dCreateGeomClass( dGeomClass.getCPtr( classptr ) );
    }

    public static SWIGTYPE_p_void dGeomGetClassData( SWIGTYPE_p_dGeomID arg0 ) {
        long cPtr = OdeJNI.dGeomGetClassData( SWIGTYPE_p_dGeomID.getCPtr( arg0 ) );
        return ( cPtr == 0 ) ? null : new SWIGTYPE_p_void( cPtr, false );
    }

    public static SWIGTYPE_p_dGeomID dCreateGeom( int classnum ) {
        return new SWIGTYPE_p_dGeomID( OdeJNI.dCreateGeom( classnum ), true );
    }

    public static SWIGTYPE_p_dSpaceID dSimpleSpaceCreate( SWIGTYPE_p_dSpaceID space ) {
        return new SWIGTYPE_p_dSpaceID( OdeJNI.dSimpleSpaceCreate( SWIGTYPE_p_dSpaceID.getCPtr( space ) ), true );
    }

    public static SWIGTYPE_p_dSpaceID dHashSpaceCreate( SWIGTYPE_p_dSpaceID space ) {
        return new SWIGTYPE_p_dSpaceID( OdeJNI.dHashSpaceCreate( SWIGTYPE_p_dSpaceID.getCPtr( space ) ), true );
    }

    public static SWIGTYPE_p_dSpaceID dQuadTreeSpaceCreate( SWIGTYPE_p_dSpaceID space, SWIGTYPE_p_float Center, SWIGTYPE_p_float Extents, int Depth ) {
        return new SWIGTYPE_p_dSpaceID( OdeJNI.dQuadTreeSpaceCreate( SWIGTYPE_p_dSpaceID.getCPtr( space ), SWIGTYPE_p_float.getCPtr( Center ), SWIGTYPE_p_float.getCPtr( Extents ), Depth ), true );
    }

    public static void dSpaceDestroy( SWIGTYPE_p_dSpaceID arg0 ) {
        OdeJNI.dSpaceDestroy( SWIGTYPE_p_dSpaceID.getCPtr( arg0 ) );
    }

    public static void dHashSpaceSetLevels( SWIGTYPE_p_dSpaceID space, int minlevel, int maxlevel ) {
        OdeJNI.dHashSpaceSetLevels( SWIGTYPE_p_dSpaceID.getCPtr( space ), minlevel, maxlevel );
    }

    public static void dSpaceSetCleanup( SWIGTYPE_p_dSpaceID space, int mode ) {
        OdeJNI.dSpaceSetCleanup( SWIGTYPE_p_dSpaceID.getCPtr( space ), mode );
    }

    public static int dSpaceGetCleanup( SWIGTYPE_p_dSpaceID space ) {
        return OdeJNI.dSpaceGetCleanup( SWIGTYPE_p_dSpaceID.getCPtr( space ) );
    }

    public static void dSpaceAdd( SWIGTYPE_p_dSpaceID arg0, SWIGTYPE_p_dGeomID arg1 ) {
        OdeJNI.dSpaceAdd( SWIGTYPE_p_dSpaceID.getCPtr( arg0 ), SWIGTYPE_p_dGeomID.getCPtr( arg1 ) );
    }

    public static void dSpaceRemove( SWIGTYPE_p_dSpaceID arg0, SWIGTYPE_p_dGeomID arg1 ) {
        OdeJNI.dSpaceRemove( SWIGTYPE_p_dSpaceID.getCPtr( arg0 ), SWIGTYPE_p_dGeomID.getCPtr( arg1 ) );
    }

    public static int dSpaceQuery( SWIGTYPE_p_dSpaceID arg0, SWIGTYPE_p_dGeomID arg1 ) {
        return OdeJNI.dSpaceQuery( SWIGTYPE_p_dSpaceID.getCPtr( arg0 ), SWIGTYPE_p_dGeomID.getCPtr( arg1 ) );
    }

    public static int dSpaceGetNumGeoms( SWIGTYPE_p_dSpaceID arg0 ) {
        return OdeJNI.dSpaceGetNumGeoms( SWIGTYPE_p_dSpaceID.getCPtr( arg0 ) );
    }

    public static SWIGTYPE_p_dGeomID dSpaceGetGeom( SWIGTYPE_p_dSpaceID arg0, int i ) {
        return new SWIGTYPE_p_dGeomID( OdeJNI.dSpaceGetGeom( SWIGTYPE_p_dSpaceID.getCPtr( arg0 ), i ), true );
    }

    public static SWIGTYPE_p_dxTriMeshData dGeomTriMeshDataCreate() {
        long cPtr = OdeJNI.dGeomTriMeshDataCreate();
        return ( cPtr == 0 ) ? null : new SWIGTYPE_p_dxTriMeshData( cPtr, false );
    }

    public static void dGeomTriMeshDataDestroy( SWIGTYPE_p_dxTriMeshData g ) {
        OdeJNI.dGeomTriMeshDataDestroy( SWIGTYPE_p_dxTriMeshData.getCPtr( g ) );
    }

    public static void dGeomTriMeshDataSet( SWIGTYPE_p_dxTriMeshData g, int data_id, SWIGTYPE_p_void in_data ) {
        OdeJNI.dGeomTriMeshDataSet( SWIGTYPE_p_dxTriMeshData.getCPtr( g ), data_id, SWIGTYPE_p_void.getCPtr( in_data ) );
    }

    public static SWIGTYPE_p_void dGeomTriMeshDataGet( SWIGTYPE_p_dxTriMeshData g, int data_id ) {
        long cPtr = OdeJNI.dGeomTriMeshDataGet( SWIGTYPE_p_dxTriMeshData.getCPtr( g ), data_id );
        return ( cPtr == 0 ) ? null : new SWIGTYPE_p_void( cPtr, false );
    }

    public static void dGeomTriMeshDataBuildSingle( SWIGTYPE_p_dxTriMeshData g, SWIGTYPE_p_float Vertices, int VertexStride, int VertexCount, SWIGTYPE_p_int Indices, int IndexCount, int TriStride ) {
        OdeJNI.dGeomTriMeshDataBuildSingle( SWIGTYPE_p_dxTriMeshData.getCPtr( g ), SWIGTYPE_p_float.getCPtr( Vertices ), VertexStride, VertexCount, SWIGTYPE_p_int.getCPtr( Indices ), IndexCount, TriStride );
    }

    public static void dGeomTriMeshDataBuildSingle1( SWIGTYPE_p_dxTriMeshData g, SWIGTYPE_p_float Vertices, int VertexStride, int VertexCount, SWIGTYPE_p_int Indices, int IndexCount, int TriStride, SWIGTYPE_p_float Normals ) {
        OdeJNI.dGeomTriMeshDataBuildSingle1( SWIGTYPE_p_dxTriMeshData.getCPtr( g ), SWIGTYPE_p_float.getCPtr( Vertices ), VertexStride, VertexCount, SWIGTYPE_p_int.getCPtr( Indices ), IndexCount, TriStride, SWIGTYPE_p_float.getCPtr( Normals ) );
    }

    public static void dGeomTriMeshDataBuildSimple( SWIGTYPE_p_dxTriMeshData g, SWIGTYPE_p_float Vertices, int VertexCount, SWIGTYPE_p_int Indices, int IndexCount ) {
        OdeJNI.dGeomTriMeshDataBuildSimple( SWIGTYPE_p_dxTriMeshData.getCPtr( g ), SWIGTYPE_p_float.getCPtr( Vertices ), VertexCount, SWIGTYPE_p_int.getCPtr( Indices ), IndexCount );
    }

    public static void dGeomTriMeshDataBuildSimple1( SWIGTYPE_p_dxTriMeshData g, SWIGTYPE_p_float Vertices, int VertexCount, SWIGTYPE_p_int Indices, int IndexCount, SWIGTYPE_p_int Normals ) {
        OdeJNI.dGeomTriMeshDataBuildSimple1( SWIGTYPE_p_dxTriMeshData.getCPtr( g ), SWIGTYPE_p_float.getCPtr( Vertices ), VertexCount, SWIGTYPE_p_int.getCPtr( Indices ), IndexCount, SWIGTYPE_p_int.getCPtr( Normals ) );
    }

    public static SWIGTYPE_p_dGeomID dCreateTriMesh( SWIGTYPE_p_dSpaceID space, SWIGTYPE_p_dxTriMeshData Data, SWIGTYPE_p_f_dGeomID_dGeomID_int__int Callback, SWIGTYPE_p_dTriArrayCallback ArrayCallback, SWIGTYPE_p_dTriRayCallback RayCallback ) {
        return new SWIGTYPE_p_dGeomID( OdeJNI.dCreateTriMesh( SWIGTYPE_p_dSpaceID.getCPtr( space ), SWIGTYPE_p_dxTriMeshData.getCPtr( Data ), SWIGTYPE_p_f_dGeomID_dGeomID_int__int.getCPtr( Callback ), SWIGTYPE_p_dTriArrayCallback.getCPtr( ArrayCallback ), SWIGTYPE_p_dTriRayCallback.getCPtr( RayCallback ) ), true );
    }

    public static void dGeomTriMeshSetData( SWIGTYPE_p_dGeomID g, SWIGTYPE_p_dxTriMeshData Data ) {
        OdeJNI.dGeomTriMeshSetData( SWIGTYPE_p_dGeomID.getCPtr( g ), SWIGTYPE_p_dxTriMeshData.getCPtr( Data ) );
    }

    public static void dGeomTriMeshEnableTC( SWIGTYPE_p_dGeomID g, int geomClass, int enable ) {
        OdeJNI.dGeomTriMeshEnableTC( SWIGTYPE_p_dGeomID.getCPtr( g ), geomClass, enable );
    }

    public static int dGeomTriMeshIsTCEnabled( SWIGTYPE_p_dGeomID g, int geomClass ) {
        return OdeJNI.dGeomTriMeshIsTCEnabled( SWIGTYPE_p_dGeomID.getCPtr( g ), geomClass );
    }

    public static void dGeomTriMeshClearTCCache( SWIGTYPE_p_dGeomID g ) {
        OdeJNI.dGeomTriMeshClearTCCache( SWIGTYPE_p_dGeomID.getCPtr( g ) );
    }

    public static void dGeomTriMeshGetTriangle( SWIGTYPE_p_dGeomID g, int Index, SWIGTYPE_p_a_4__float v0, SWIGTYPE_p_a_4__float v1, SWIGTYPE_p_a_4__float v2 ) {
        OdeJNI.dGeomTriMeshGetTriangle( SWIGTYPE_p_dGeomID.getCPtr( g ), Index, SWIGTYPE_p_a_4__float.getCPtr( v0 ), SWIGTYPE_p_a_4__float.getCPtr( v1 ), SWIGTYPE_p_a_4__float.getCPtr( v2 ) );
    }

    public static void dGeomTriMeshGetPoint( SWIGTYPE_p_dGeomID g, int Index, float u, float v, SWIGTYPE_p_float Out ) {
        OdeJNI.dGeomTriMeshGetPoint( SWIGTYPE_p_dGeomID.getCPtr( g ), Index, u, v, SWIGTYPE_p_float.getCPtr( Out ) );
    }

    public static void dMassSetZero( SWIGTYPE_p_dMass arg0 ) {
        OdeJNI.dMassSetZero( SWIGTYPE_p_dMass.getCPtr( arg0 ) );
    }

    public static void dMassSetParameters( SWIGTYPE_p_dMass arg0, float themass, float cgx, float cgy, float cgz, float I11, float I22, float I33, float I12, float I13, float I23 ) {
        OdeJNI.dMassSetParameters( SWIGTYPE_p_dMass.getCPtr( arg0 ), themass, cgx, cgy, cgz, I11, I22, I33, I12, I13, I23 );
    }

    public static void dMassSetSphere( SWIGTYPE_p_dMass arg0, float density, float radius ) {
        OdeJNI.dMassSetSphere( SWIGTYPE_p_dMass.getCPtr( arg0 ), density, radius );
    }

    public static void dMassSetSphereTotal( SWIGTYPE_p_dMass arg0, float total_mass, float radius ) {
        OdeJNI.dMassSetSphereTotal( SWIGTYPE_p_dMass.getCPtr( arg0 ), total_mass, radius );
    }

    public static void dMassSetCapsule( SWIGTYPE_p_dMass arg0, float density, int direction, float radius, float length ) {
        OdeJNI.dMassSetCapsule( SWIGTYPE_p_dMass.getCPtr( arg0 ), density, direction, radius, length );
    }

    public static void dMassSetCapsuleTotal( SWIGTYPE_p_dMass arg0, float total_mass, int direction, float radius, float length ) {
        OdeJNI.dMassSetCapsuleTotal( SWIGTYPE_p_dMass.getCPtr( arg0 ), total_mass, direction, radius, length );
    }

    public static void dMassSetCylinder( SWIGTYPE_p_dMass arg0, float density, int direction, float radius, float length ) {
        OdeJNI.dMassSetCylinder( SWIGTYPE_p_dMass.getCPtr( arg0 ), density, direction, radius, length );
    }

    public static void dMassSetCylinderTotal( SWIGTYPE_p_dMass arg0, float total_mass, int direction, float radius, float length ) {
        OdeJNI.dMassSetCylinderTotal( SWIGTYPE_p_dMass.getCPtr( arg0 ), total_mass, direction, radius, length );
    }

    public static void dMassSetBox( SWIGTYPE_p_dMass arg0, float density, float lx, float ly, float lz ) {
        OdeJNI.dMassSetBox( SWIGTYPE_p_dMass.getCPtr( arg0 ), density, lx, ly, lz );
    }

    public static void dMassSetBoxTotal( SWIGTYPE_p_dMass arg0, float total_mass, float lx, float ly, float lz ) {
        OdeJNI.dMassSetBoxTotal( SWIGTYPE_p_dMass.getCPtr( arg0 ), total_mass, lx, ly, lz );
    }

    public static void dMassAdjust( SWIGTYPE_p_dMass arg0, float newmass ) {
        OdeJNI.dMassAdjust( SWIGTYPE_p_dMass.getCPtr( arg0 ), newmass );
    }

    public static void dMassTranslate( SWIGTYPE_p_dMass arg0, float x, float y, float z ) {
        OdeJNI.dMassTranslate( SWIGTYPE_p_dMass.getCPtr( arg0 ), x, y, z );
    }

    public static void dMassRotate( SWIGTYPE_p_dMass arg0, SWIGTYPE_p_float R ) {
        OdeJNI.dMassRotate( SWIGTYPE_p_dMass.getCPtr( arg0 ), SWIGTYPE_p_float.getCPtr( R ) );
    }

    public static void dMassAdd( SWIGTYPE_p_dMass a, SWIGTYPE_p_dMass b ) {
        OdeJNI.dMassAdd( SWIGTYPE_p_dMass.getCPtr( a ), SWIGTYPE_p_dMass.getCPtr( b ) );
    }

    public static SWIGTYPE_p_dWorldID dWorldCreate() {
        return new SWIGTYPE_p_dWorldID( OdeJNI.dWorldCreate(), true );
    }

    public static void dWorldDestroy( SWIGTYPE_p_dWorldID arg0 ) {
        OdeJNI.dWorldDestroy( SWIGTYPE_p_dWorldID.getCPtr( arg0 ) );
    }

    public static void dWorldSetGravity( SWIGTYPE_p_dWorldID arg0, float x, float y, float z ) {
        OdeJNI.dWorldSetGravity( SWIGTYPE_p_dWorldID.getCPtr( arg0 ), x, y, z );
    }

    public static void dWorldGetGravity( SWIGTYPE_p_dWorldID arg0, SWIGTYPE_p_float gravity ) {
        OdeJNI.dWorldGetGravity( SWIGTYPE_p_dWorldID.getCPtr( arg0 ), SWIGTYPE_p_float.getCPtr( gravity ) );
    }

    public static void dWorldSetERP( SWIGTYPE_p_dWorldID arg0, float erp ) {
        OdeJNI.dWorldSetERP( SWIGTYPE_p_dWorldID.getCPtr( arg0 ), erp );
    }

    public static float dWorldGetERP( SWIGTYPE_p_dWorldID arg0 ) {
        return OdeJNI.dWorldGetERP( SWIGTYPE_p_dWorldID.getCPtr( arg0 ) );
    }

    public static void dWorldSetCFM( SWIGTYPE_p_dWorldID arg0, float cfm ) {
        OdeJNI.dWorldSetCFM( SWIGTYPE_p_dWorldID.getCPtr( arg0 ), cfm );
    }

    public static float dWorldGetCFM( SWIGTYPE_p_dWorldID arg0 ) {
        return OdeJNI.dWorldGetCFM( SWIGTYPE_p_dWorldID.getCPtr( arg0 ) );
    }

    public static void dWorldStep( SWIGTYPE_p_dWorldID arg0, float stepsize ) {
        OdeJNI.dWorldStep( SWIGTYPE_p_dWorldID.getCPtr( arg0 ), stepsize );
    }

    public static void dWorldImpulseToForce( SWIGTYPE_p_dWorldID arg0, float stepsize, float ix, float iy, float iz, SWIGTYPE_p_float force ) {
        OdeJNI.dWorldImpulseToForce( SWIGTYPE_p_dWorldID.getCPtr( arg0 ), stepsize, ix, iy, iz, SWIGTYPE_p_float.getCPtr( force ) );
    }

    public static void dWorldSetAutoDisableFlag( SWIGTYPE_p_dWorldID arg0, int do_auto_disable ) {
        OdeJNI.dWorldSetAutoDisableFlag( SWIGTYPE_p_dWorldID.getCPtr( arg0 ), do_auto_disable );
    }

    public static int dWorldGetAutoDisableFlag( SWIGTYPE_p_dWorldID arg0 ) {
        return OdeJNI.dWorldGetAutoDisableFlag( SWIGTYPE_p_dWorldID.getCPtr( arg0 ) );
    }

    public static void dWorldSetAutoDisableLinearThreshold( SWIGTYPE_p_dWorldID arg0, float linear_threshold ) {
        OdeJNI.dWorldSetAutoDisableLinearThreshold( SWIGTYPE_p_dWorldID.getCPtr( arg0 ), linear_threshold );
    }

    public static float dWorldGetAutoDisableLinearThreshold( SWIGTYPE_p_dWorldID arg0 ) {
        return OdeJNI.dWorldGetAutoDisableLinearThreshold( SWIGTYPE_p_dWorldID.getCPtr( arg0 ) );
    }

    public static void dWorldSetAutoDisableAngularThreshold( SWIGTYPE_p_dWorldID arg0, float angular_threshold ) {
        OdeJNI.dWorldSetAutoDisableAngularThreshold( SWIGTYPE_p_dWorldID.getCPtr( arg0 ), angular_threshold );
    }

    public static float dWorldGetAutoDisableAngularThreshold( SWIGTYPE_p_dWorldID arg0 ) {
        return OdeJNI.dWorldGetAutoDisableAngularThreshold( SWIGTYPE_p_dWorldID.getCPtr( arg0 ) );
    }

    public static void dWorldSetAutoDisableSteps( SWIGTYPE_p_dWorldID arg0, int steps ) {
        OdeJNI.dWorldSetAutoDisableSteps( SWIGTYPE_p_dWorldID.getCPtr( arg0 ), steps );
    }

    public static int dWorldGetAutoDisableSteps( SWIGTYPE_p_dWorldID arg0 ) {
        return OdeJNI.dWorldGetAutoDisableSteps( SWIGTYPE_p_dWorldID.getCPtr( arg0 ) );
    }

    public static void dWorldSetAutoDisableTime( SWIGTYPE_p_dWorldID arg0, float time ) {
        OdeJNI.dWorldSetAutoDisableTime( SWIGTYPE_p_dWorldID.getCPtr( arg0 ), time );
    }

    public static float dWorldGetAutoDisableTime( SWIGTYPE_p_dWorldID arg0 ) {
        return OdeJNI.dWorldGetAutoDisableTime( SWIGTYPE_p_dWorldID.getCPtr( arg0 ) );
    }

    public static void dWorldSetContactMaxCorrectingVel( SWIGTYPE_p_dWorldID arg0, float vel ) {
        OdeJNI.dWorldSetContactMaxCorrectingVel( SWIGTYPE_p_dWorldID.getCPtr( arg0 ), vel );
    }

    public static float dWorldGetContactMaxCorrectingVel( SWIGTYPE_p_dWorldID arg0 ) {
        return OdeJNI.dWorldGetContactMaxCorrectingVel( SWIGTYPE_p_dWorldID.getCPtr( arg0 ) );
    }

    public static void dWorldSetContactSurfaceLayer( SWIGTYPE_p_dWorldID arg0, float depth ) {
        OdeJNI.dWorldSetContactSurfaceLayer( SWIGTYPE_p_dWorldID.getCPtr( arg0 ), depth );
    }

    public static float dWorldGetContactSurfaceLayer( SWIGTYPE_p_dWorldID arg0 ) {
        return OdeJNI.dWorldGetContactSurfaceLayer( SWIGTYPE_p_dWorldID.getCPtr( arg0 ) );
    }

    public static void dWorldStepFast1( SWIGTYPE_p_dWorldID arg0, float stepsize, int maxiterations ) {
        OdeJNI.dWorldStepFast1( SWIGTYPE_p_dWorldID.getCPtr( arg0 ), stepsize, maxiterations );
    }

    public static void dWorldSetAutoEnableDepthSF1( SWIGTYPE_p_dWorldID arg0, int autoEnableDepth ) {
        OdeJNI.dWorldSetAutoEnableDepthSF1( SWIGTYPE_p_dWorldID.getCPtr( arg0 ), autoEnableDepth );
    }

    public static int dWorldGetAutoEnableDepthSF1( SWIGTYPE_p_dWorldID arg0 ) {
        return OdeJNI.dWorldGetAutoEnableDepthSF1( SWIGTYPE_p_dWorldID.getCPtr( arg0 ) );
    }

    public static void dWorldQuickStep( SWIGTYPE_p_dWorldID arg0, float stepsize ) {
        OdeJNI.dWorldQuickStep( SWIGTYPE_p_dWorldID.getCPtr( arg0 ), stepsize );
    }

    public static void dWorldSetQuickStepNumIterations( SWIGTYPE_p_dWorldID arg0, int num ) {
        OdeJNI.dWorldSetQuickStepNumIterations( SWIGTYPE_p_dWorldID.getCPtr( arg0 ), num );
    }

    public static int dWorldGetQuickStepNumIterations( SWIGTYPE_p_dWorldID arg0 ) {
        return OdeJNI.dWorldGetQuickStepNumIterations( SWIGTYPE_p_dWorldID.getCPtr( arg0 ) );
    }

    public static SWIGTYPE_p_dBodyID dBodyCreate( SWIGTYPE_p_dWorldID arg0 ) {
        return new SWIGTYPE_p_dBodyID( OdeJNI.dBodyCreate( SWIGTYPE_p_dWorldID.getCPtr( arg0 ) ), true );
    }

    public static void dBodyDestroy( SWIGTYPE_p_dBodyID arg0 ) {
        OdeJNI.dBodyDestroy( SWIGTYPE_p_dBodyID.getCPtr( arg0 ) );
    }

    public static void dBodySetData( SWIGTYPE_p_dBodyID arg0, SWIGTYPE_p_void data ) {
        OdeJNI.dBodySetData( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), SWIGTYPE_p_void.getCPtr( data ) );
    }

    public static SWIGTYPE_p_void dBodyGetData( SWIGTYPE_p_dBodyID arg0 ) {
        long cPtr = OdeJNI.dBodyGetData( SWIGTYPE_p_dBodyID.getCPtr( arg0 ) );
        return ( cPtr == 0 ) ? null : new SWIGTYPE_p_void( cPtr, false );
    }

    public static void dBodySetPosition( SWIGTYPE_p_dBodyID arg0, float x, float y, float z ) {
        OdeJNI.dBodySetPosition( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), x, y, z );
    }

    public static void dBodySetRotation( SWIGTYPE_p_dBodyID arg0, SWIGTYPE_p_float R ) {
        OdeJNI.dBodySetRotation( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), SWIGTYPE_p_float.getCPtr( R ) );
    }

    public static void dBodySetQuaternion( SWIGTYPE_p_dBodyID arg0, SWIGTYPE_p_float q ) {
        OdeJNI.dBodySetQuaternion( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), SWIGTYPE_p_float.getCPtr( q ) );
    }

    public static void dBodySetLinearVel( SWIGTYPE_p_dBodyID arg0, float x, float y, float z ) {
        OdeJNI.dBodySetLinearVel( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), x, y, z );
    }

    public static void dBodySetAngularVel( SWIGTYPE_p_dBodyID arg0, float x, float y, float z ) {
        OdeJNI.dBodySetAngularVel( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), x, y, z );
    }

    public static SWIGTYPE_p_float dBodyGetPosition( SWIGTYPE_p_dBodyID arg0 ) {
        long cPtr = OdeJNI.dBodyGetPosition( SWIGTYPE_p_dBodyID.getCPtr( arg0 ) );
        return ( cPtr == 0 ) ? null : new SWIGTYPE_p_float( cPtr, false );
    }

    public static SWIGTYPE_p_float dBodyGetRotation( SWIGTYPE_p_dBodyID arg0 ) {
        long cPtr = OdeJNI.dBodyGetRotation( SWIGTYPE_p_dBodyID.getCPtr( arg0 ) );
        return ( cPtr == 0 ) ? null : new SWIGTYPE_p_float( cPtr, false );
    }

    public static SWIGTYPE_p_float dBodyGetQuaternion( SWIGTYPE_p_dBodyID arg0 ) {
        long cPtr = OdeJNI.dBodyGetQuaternion( SWIGTYPE_p_dBodyID.getCPtr( arg0 ) );
        return ( cPtr == 0 ) ? null : new SWIGTYPE_p_float( cPtr, false );
    }

    public static SWIGTYPE_p_float dBodyGetLinearVel( SWIGTYPE_p_dBodyID arg0 ) {
        long cPtr = OdeJNI.dBodyGetLinearVel( SWIGTYPE_p_dBodyID.getCPtr( arg0 ) );
        return ( cPtr == 0 ) ? null : new SWIGTYPE_p_float( cPtr, false );
    }

    public static SWIGTYPE_p_float dBodyGetAngularVel( SWIGTYPE_p_dBodyID arg0 ) {
        long cPtr = OdeJNI.dBodyGetAngularVel( SWIGTYPE_p_dBodyID.getCPtr( arg0 ) );
        return ( cPtr == 0 ) ? null : new SWIGTYPE_p_float( cPtr, false );
    }

    public static void dBodySetMass( SWIGTYPE_p_dBodyID arg0, SWIGTYPE_p_dMass mass ) {
        OdeJNI.dBodySetMass( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), SWIGTYPE_p_dMass.getCPtr( mass ) );
    }

    public static void dBodyGetMass( SWIGTYPE_p_dBodyID arg0, SWIGTYPE_p_dMass mass ) {
        OdeJNI.dBodyGetMass( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), SWIGTYPE_p_dMass.getCPtr( mass ) );
    }

    public static void dBodyAddForce( SWIGTYPE_p_dBodyID arg0, float fx, float fy, float fz ) {
        OdeJNI.dBodyAddForce( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), fx, fy, fz );
    }

    public static void dBodyAddTorque( SWIGTYPE_p_dBodyID arg0, float fx, float fy, float fz ) {
        OdeJNI.dBodyAddTorque( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), fx, fy, fz );
    }

    public static void dBodyAddRelForce( SWIGTYPE_p_dBodyID arg0, float fx, float fy, float fz ) {
        OdeJNI.dBodyAddRelForce( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), fx, fy, fz );
    }

    public static void dBodyAddRelTorque( SWIGTYPE_p_dBodyID arg0, float fx, float fy, float fz ) {
        OdeJNI.dBodyAddRelTorque( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), fx, fy, fz );
    }

    public static void dBodyAddForceAtPos( SWIGTYPE_p_dBodyID arg0, float fx, float fy, float fz, float px, float py, float pz ) {
        OdeJNI.dBodyAddForceAtPos( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), fx, fy, fz, px, py, pz );
    }

    public static void dBodyAddForceAtRelPos( SWIGTYPE_p_dBodyID arg0, float fx, float fy, float fz, float px, float py, float pz ) {
        OdeJNI.dBodyAddForceAtRelPos( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), fx, fy, fz, px, py, pz );
    }

    public static void dBodyAddRelForceAtPos( SWIGTYPE_p_dBodyID arg0, float fx, float fy, float fz, float px, float py, float pz ) {
        OdeJNI.dBodyAddRelForceAtPos( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), fx, fy, fz, px, py, pz );
    }

    public static void dBodyAddRelForceAtRelPos( SWIGTYPE_p_dBodyID arg0, float fx, float fy, float fz, float px, float py, float pz ) {
        OdeJNI.dBodyAddRelForceAtRelPos( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), fx, fy, fz, px, py, pz );
    }

    public static SWIGTYPE_p_float dBodyGetForce( SWIGTYPE_p_dBodyID arg0 ) {
        long cPtr = OdeJNI.dBodyGetForce( SWIGTYPE_p_dBodyID.getCPtr( arg0 ) );
        return ( cPtr == 0 ) ? null : new SWIGTYPE_p_float( cPtr, false );
    }

    public static SWIGTYPE_p_float dBodyGetTorque( SWIGTYPE_p_dBodyID arg0 ) {
        long cPtr = OdeJNI.dBodyGetTorque( SWIGTYPE_p_dBodyID.getCPtr( arg0 ) );
        return ( cPtr == 0 ) ? null : new SWIGTYPE_p_float( cPtr, false );
    }

    public static void dBodySetForce( SWIGTYPE_p_dBodyID b, float x, float y, float z ) {
        OdeJNI.dBodySetForce( SWIGTYPE_p_dBodyID.getCPtr( b ), x, y, z );
    }

    public static void dBodySetTorque( SWIGTYPE_p_dBodyID b, float x, float y, float z ) {
        OdeJNI.dBodySetTorque( SWIGTYPE_p_dBodyID.getCPtr( b ), x, y, z );
    }

    public static void dBodyGetRelPointPos( SWIGTYPE_p_dBodyID arg0, float px, float py, float pz, SWIGTYPE_p_float result ) {
        OdeJNI.dBodyGetRelPointPos( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), px, py, pz, SWIGTYPE_p_float.getCPtr( result ) );
    }

    public static void dBodyGetRelPointVel( SWIGTYPE_p_dBodyID arg0, float px, float py, float pz, SWIGTYPE_p_float result ) {
        OdeJNI.dBodyGetRelPointVel( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), px, py, pz, SWIGTYPE_p_float.getCPtr( result ) );
    }

    public static void dBodyGetPointVel( SWIGTYPE_p_dBodyID arg0, float px, float py, float pz, SWIGTYPE_p_float result ) {
        OdeJNI.dBodyGetPointVel( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), px, py, pz, SWIGTYPE_p_float.getCPtr( result ) );
    }

    public static void dBodyGetPosRelPoint( SWIGTYPE_p_dBodyID arg0, float px, float py, float pz, SWIGTYPE_p_float result ) {
        OdeJNI.dBodyGetPosRelPoint( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), px, py, pz, SWIGTYPE_p_float.getCPtr( result ) );
    }

    public static void dBodyVectorToWorld( SWIGTYPE_p_dBodyID arg0, float px, float py, float pz, SWIGTYPE_p_float result ) {
        OdeJNI.dBodyVectorToWorld( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), px, py, pz, SWIGTYPE_p_float.getCPtr( result ) );
    }

    public static void dBodyVectorFromWorld( SWIGTYPE_p_dBodyID arg0, float px, float py, float pz, SWIGTYPE_p_float result ) {
        OdeJNI.dBodyVectorFromWorld( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), px, py, pz, SWIGTYPE_p_float.getCPtr( result ) );
    }

    public static void dBodySetFiniteRotationMode( SWIGTYPE_p_dBodyID arg0, int mode ) {
        OdeJNI.dBodySetFiniteRotationMode( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), mode );
    }

    public static void dBodySetFiniteRotationAxis( SWIGTYPE_p_dBodyID arg0, float x, float y, float z ) {
        OdeJNI.dBodySetFiniteRotationAxis( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), x, y, z );
    }

    public static int dBodyGetFiniteRotationMode( SWIGTYPE_p_dBodyID arg0 ) {
        return OdeJNI.dBodyGetFiniteRotationMode( SWIGTYPE_p_dBodyID.getCPtr( arg0 ) );
    }

    public static void dBodyGetFiniteRotationAxis( SWIGTYPE_p_dBodyID arg0, SWIGTYPE_p_float result ) {
        OdeJNI.dBodyGetFiniteRotationAxis( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), SWIGTYPE_p_float.getCPtr( result ) );
    }

    public static int dBodyGetNumJoints( SWIGTYPE_p_dBodyID b ) {
        return OdeJNI.dBodyGetNumJoints( SWIGTYPE_p_dBodyID.getCPtr( b ) );
    }

    public static SWIGTYPE_p_dJointID dBodyGetJoint( SWIGTYPE_p_dBodyID arg0, int index ) {
        return new SWIGTYPE_p_dJointID( OdeJNI.dBodyGetJoint( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), index ), true );
    }

    public static void dBodyEnable( SWIGTYPE_p_dBodyID arg0 ) {
        OdeJNI.dBodyEnable( SWIGTYPE_p_dBodyID.getCPtr( arg0 ) );
    }

    public static void dBodyDisable( SWIGTYPE_p_dBodyID arg0 ) {
        OdeJNI.dBodyDisable( SWIGTYPE_p_dBodyID.getCPtr( arg0 ) );
    }

    public static int dBodyIsEnabled( SWIGTYPE_p_dBodyID arg0 ) {
        return OdeJNI.dBodyIsEnabled( SWIGTYPE_p_dBodyID.getCPtr( arg0 ) );
    }

    public static void dBodySetGravityMode( SWIGTYPE_p_dBodyID b, int mode ) {
        OdeJNI.dBodySetGravityMode( SWIGTYPE_p_dBodyID.getCPtr( b ), mode );
    }

    public static int dBodyGetGravityMode( SWIGTYPE_p_dBodyID b ) {
        return OdeJNI.dBodyGetGravityMode( SWIGTYPE_p_dBodyID.getCPtr( b ) );
    }

    public static void dBodySetAutoDisableDefaults( SWIGTYPE_p_dBodyID arg0 ) {
        OdeJNI.dBodySetAutoDisableDefaults( SWIGTYPE_p_dBodyID.getCPtr( arg0 ) );
    }

    public static void dBodySetAutoDisableFlag( SWIGTYPE_p_dBodyID arg0, int do_auto_disable ) {
        OdeJNI.dBodySetAutoDisableFlag( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), do_auto_disable );
    }

    public static int dBodyGetAutoDisableFlag( SWIGTYPE_p_dBodyID arg0 ) {
        return OdeJNI.dBodyGetAutoDisableFlag( SWIGTYPE_p_dBodyID.getCPtr( arg0 ) );
    }

    public static void dBodySetAutoDisableLinearThreshold( SWIGTYPE_p_dBodyID arg0, float linear_threshold ) {
        OdeJNI.dBodySetAutoDisableLinearThreshold( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), linear_threshold );
    }

    public static float dBodyGetAutoDisableLinearThreshold( SWIGTYPE_p_dBodyID arg0 ) {
        return OdeJNI.dBodyGetAutoDisableLinearThreshold( SWIGTYPE_p_dBodyID.getCPtr( arg0 ) );
    }

    public static void dBodySetAutoDisableAngularThreshold( SWIGTYPE_p_dBodyID arg0, float angular_threshold ) {
        OdeJNI.dBodySetAutoDisableAngularThreshold( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), angular_threshold );
    }

    public static float dBodyGetAutoDisableAngularThreshold( SWIGTYPE_p_dBodyID arg0 ) {
        return OdeJNI.dBodyGetAutoDisableAngularThreshold( SWIGTYPE_p_dBodyID.getCPtr( arg0 ) );
    }

    public static void dBodySetAutoDisableSteps( SWIGTYPE_p_dBodyID arg0, int steps ) {
        OdeJNI.dBodySetAutoDisableSteps( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), steps );
    }

    public static int dBodyGetAutoDisableSteps( SWIGTYPE_p_dBodyID arg0 ) {
        return OdeJNI.dBodyGetAutoDisableSteps( SWIGTYPE_p_dBodyID.getCPtr( arg0 ) );
    }

    public static void dBodySetAutoDisableTime( SWIGTYPE_p_dBodyID arg0, float time ) {
        OdeJNI.dBodySetAutoDisableTime( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), time );
    }

    public static float dBodyGetAutoDisableTime( SWIGTYPE_p_dBodyID arg0 ) {
        return OdeJNI.dBodyGetAutoDisableTime( SWIGTYPE_p_dBodyID.getCPtr( arg0 ) );
    }

    public static SWIGTYPE_p_dJointID dJointCreateBall( SWIGTYPE_p_dWorldID arg0, SWIGTYPE_p_dJointGroupID arg1 ) {
        return new SWIGTYPE_p_dJointID( OdeJNI.dJointCreateBall( SWIGTYPE_p_dWorldID.getCPtr( arg0 ), SWIGTYPE_p_dJointGroupID.getCPtr( arg1 ) ), true );
    }

    public static SWIGTYPE_p_dJointID dJointCreateHinge( SWIGTYPE_p_dWorldID arg0, SWIGTYPE_p_dJointGroupID arg1 ) {
        return new SWIGTYPE_p_dJointID( OdeJNI.dJointCreateHinge( SWIGTYPE_p_dWorldID.getCPtr( arg0 ), SWIGTYPE_p_dJointGroupID.getCPtr( arg1 ) ), true );
    }

    public static SWIGTYPE_p_dJointID dJointCreateSlider( SWIGTYPE_p_dWorldID arg0, SWIGTYPE_p_dJointGroupID arg1 ) {
        return new SWIGTYPE_p_dJointID( OdeJNI.dJointCreateSlider( SWIGTYPE_p_dWorldID.getCPtr( arg0 ), SWIGTYPE_p_dJointGroupID.getCPtr( arg1 ) ), true );
    }

    public static SWIGTYPE_p_dJointID dJointCreateContact( SWIGTYPE_p_dWorldID arg0, SWIGTYPE_p_dJointGroupID arg1, dContact arg2 ) {
        return new SWIGTYPE_p_dJointID( OdeJNI.dJointCreateContact( SWIGTYPE_p_dWorldID.getCPtr( arg0 ), SWIGTYPE_p_dJointGroupID.getCPtr( arg1 ), dContact.getCPtr( arg2 ) ), true );
    }

    public static SWIGTYPE_p_dJointID dJointCreateHinge2( SWIGTYPE_p_dWorldID arg0, SWIGTYPE_p_dJointGroupID arg1 ) {
        return new SWIGTYPE_p_dJointID( OdeJNI.dJointCreateHinge2( SWIGTYPE_p_dWorldID.getCPtr( arg0 ), SWIGTYPE_p_dJointGroupID.getCPtr( arg1 ) ), true );
    }

    public static SWIGTYPE_p_dJointID dJointCreateUniversal( SWIGTYPE_p_dWorldID arg0, SWIGTYPE_p_dJointGroupID arg1 ) {
        return new SWIGTYPE_p_dJointID( OdeJNI.dJointCreateUniversal( SWIGTYPE_p_dWorldID.getCPtr( arg0 ), SWIGTYPE_p_dJointGroupID.getCPtr( arg1 ) ), true );
    }

    public static SWIGTYPE_p_dJointID dJointCreateFixed( SWIGTYPE_p_dWorldID arg0, SWIGTYPE_p_dJointGroupID arg1 ) {
        return new SWIGTYPE_p_dJointID( OdeJNI.dJointCreateFixed( SWIGTYPE_p_dWorldID.getCPtr( arg0 ), SWIGTYPE_p_dJointGroupID.getCPtr( arg1 ) ), true );
    }

    public static SWIGTYPE_p_dJointID dJointCreateNull( SWIGTYPE_p_dWorldID arg0, SWIGTYPE_p_dJointGroupID arg1 ) {
        return new SWIGTYPE_p_dJointID( OdeJNI.dJointCreateNull( SWIGTYPE_p_dWorldID.getCPtr( arg0 ), SWIGTYPE_p_dJointGroupID.getCPtr( arg1 ) ), true );
    }

    public static SWIGTYPE_p_dJointID dJointCreateAMotor( SWIGTYPE_p_dWorldID arg0, SWIGTYPE_p_dJointGroupID arg1 ) {
        return new SWIGTYPE_p_dJointID( OdeJNI.dJointCreateAMotor( SWIGTYPE_p_dWorldID.getCPtr( arg0 ), SWIGTYPE_p_dJointGroupID.getCPtr( arg1 ) ), true );
    }

    public static void dJointDestroy( SWIGTYPE_p_dJointID arg0 ) {
        OdeJNI.dJointDestroy( SWIGTYPE_p_dJointID.getCPtr( arg0 ) );
    }

    public static SWIGTYPE_p_dJointGroupID dJointGroupCreate( int max_size ) {
        return new SWIGTYPE_p_dJointGroupID( OdeJNI.dJointGroupCreate( max_size ), true );
    }

    public static void dJointGroupDestroy( SWIGTYPE_p_dJointGroupID arg0 ) {
        OdeJNI.dJointGroupDestroy( SWIGTYPE_p_dJointGroupID.getCPtr( arg0 ) );
    }

    public static void dJointGroupEmpty( SWIGTYPE_p_dJointGroupID arg0 ) {
        OdeJNI.dJointGroupEmpty( SWIGTYPE_p_dJointGroupID.getCPtr( arg0 ) );
    }

    public static void dJointAttach( SWIGTYPE_p_dJointID arg0, SWIGTYPE_p_dBodyID body1, SWIGTYPE_p_dBodyID body2 ) {
        OdeJNI.dJointAttach( SWIGTYPE_p_dJointID.getCPtr( arg0 ), SWIGTYPE_p_dBodyID.getCPtr( body1 ), SWIGTYPE_p_dBodyID.getCPtr( body2 ) );
    }

    public static void dJointSetData( SWIGTYPE_p_dJointID arg0, SWIGTYPE_p_void data ) {
        OdeJNI.dJointSetData( SWIGTYPE_p_dJointID.getCPtr( arg0 ), SWIGTYPE_p_void.getCPtr( data ) );
    }

    public static SWIGTYPE_p_void dJointGetData( SWIGTYPE_p_dJointID arg0 ) {
        long cPtr = OdeJNI.dJointGetData( SWIGTYPE_p_dJointID.getCPtr( arg0 ) );
        return ( cPtr == 0 ) ? null : new SWIGTYPE_p_void( cPtr, false );
    }

    public static int dJointGetType( SWIGTYPE_p_dJointID arg0 ) {
        return OdeJNI.dJointGetType( SWIGTYPE_p_dJointID.getCPtr( arg0 ) );
    }

    public static SWIGTYPE_p_dBodyID dJointGetBody( SWIGTYPE_p_dJointID arg0, int index ) {
        return new SWIGTYPE_p_dBodyID( OdeJNI.dJointGetBody( SWIGTYPE_p_dJointID.getCPtr( arg0 ), index ), true );
    }

    public static void dJointSetFeedback( SWIGTYPE_p_dJointID arg0, dJointFeedback arg1 ) {
        OdeJNI.dJointSetFeedback( SWIGTYPE_p_dJointID.getCPtr( arg0 ), dJointFeedback.getCPtr( arg1 ) );
    }

    public static dJointFeedback dJointGetFeedback( SWIGTYPE_p_dJointID arg0 ) {
        long cPtr = OdeJNI.dJointGetFeedback( SWIGTYPE_p_dJointID.getCPtr( arg0 ) );
        return ( cPtr == 0 ) ? null : new dJointFeedback( cPtr, false );
    }

    public static void dJointSetBallAnchor( SWIGTYPE_p_dJointID arg0, float x, float y, float z ) {
        OdeJNI.dJointSetBallAnchor( SWIGTYPE_p_dJointID.getCPtr( arg0 ), x, y, z );
    }

    public static void dJointSetBallParam( SWIGTYPE_p_dJointID arg0, int parameter, float value ) {
        OdeJNI.dJointSetBallParam( SWIGTYPE_p_dJointID.getCPtr( arg0 ), parameter, value );
    }

    public static float dJointGetBallParam( SWIGTYPE_p_dJointID arg0, int parameter ) {
        return OdeJNI.dJointGetBallParam( SWIGTYPE_p_dJointID.getCPtr( arg0 ), parameter );
    }

    public static void dJointSetHingeAnchor( SWIGTYPE_p_dJointID arg0, float x, float y, float z ) {
        OdeJNI.dJointSetHingeAnchor( SWIGTYPE_p_dJointID.getCPtr( arg0 ), x, y, z );
    }

    public static void dJointSetHingeAxis( SWIGTYPE_p_dJointID arg0, float x, float y, float z ) {
        OdeJNI.dJointSetHingeAxis( SWIGTYPE_p_dJointID.getCPtr( arg0 ), x, y, z );
    }

    public static void dJointSetHingeParam( SWIGTYPE_p_dJointID arg0, int parameter, float value ) {
        OdeJNI.dJointSetHingeParam( SWIGTYPE_p_dJointID.getCPtr( arg0 ), parameter, value );
    }

    public static void dJointSetSliderAxis( SWIGTYPE_p_dJointID arg0, float x, float y, float z ) {
        OdeJNI.dJointSetSliderAxis( SWIGTYPE_p_dJointID.getCPtr( arg0 ), x, y, z );
    }

    public static void dJointSetSliderParam( SWIGTYPE_p_dJointID arg0, int parameter, float value ) {
        OdeJNI.dJointSetSliderParam( SWIGTYPE_p_dJointID.getCPtr( arg0 ), parameter, value );
    }

    public static void dJointSetHinge2Anchor( SWIGTYPE_p_dJointID arg0, float x, float y, float z ) {
        OdeJNI.dJointSetHinge2Anchor( SWIGTYPE_p_dJointID.getCPtr( arg0 ), x, y, z );
    }

    public static void dJointSetHinge2Axis1( SWIGTYPE_p_dJointID arg0, float x, float y, float z ) {
        OdeJNI.dJointSetHinge2Axis1( SWIGTYPE_p_dJointID.getCPtr( arg0 ), x, y, z );
    }

    public static void dJointSetHinge2Axis2( SWIGTYPE_p_dJointID arg0, float x, float y, float z ) {
        OdeJNI.dJointSetHinge2Axis2( SWIGTYPE_p_dJointID.getCPtr( arg0 ), x, y, z );
    }

    public static void dJointSetHinge2Param( SWIGTYPE_p_dJointID arg0, int parameter, float value ) {
        OdeJNI.dJointSetHinge2Param( SWIGTYPE_p_dJointID.getCPtr( arg0 ), parameter, value );
    }

    public static void dJointSetUniversalAnchor( SWIGTYPE_p_dJointID arg0, float x, float y, float z ) {
        OdeJNI.dJointSetUniversalAnchor( SWIGTYPE_p_dJointID.getCPtr( arg0 ), x, y, z );
    }

    public static void dJointSetUniversalAxis1( SWIGTYPE_p_dJointID arg0, float x, float y, float z ) {
        OdeJNI.dJointSetUniversalAxis1( SWIGTYPE_p_dJointID.getCPtr( arg0 ), x, y, z );
    }

    public static void dJointSetUniversalAxis2( SWIGTYPE_p_dJointID arg0, float x, float y, float z ) {
        OdeJNI.dJointSetUniversalAxis2( SWIGTYPE_p_dJointID.getCPtr( arg0 ), x, y, z );
    }

    public static void dJointSetUniversalParam( SWIGTYPE_p_dJointID arg0, int parameter, float value ) {
        OdeJNI.dJointSetUniversalParam( SWIGTYPE_p_dJointID.getCPtr( arg0 ), parameter, value );
    }

    public static void dJointSetFixed( SWIGTYPE_p_dJointID arg0 ) {
        OdeJNI.dJointSetFixed( SWIGTYPE_p_dJointID.getCPtr( arg0 ) );
    }

    public static void dJointSetFixedParam( SWIGTYPE_p_dJointID arg0, int parameter, float value ) {
        OdeJNI.dJointSetFixedParam( SWIGTYPE_p_dJointID.getCPtr( arg0 ), parameter, value );
    }

    public static float dJointGetFixedParam( SWIGTYPE_p_dJointID arg0, int parameter ) {
        return OdeJNI.dJointGetFixedParam( SWIGTYPE_p_dJointID.getCPtr( arg0 ), parameter );
    }

    public static void dJointSetAMotorNumAxes( SWIGTYPE_p_dJointID arg0, int num ) {
        OdeJNI.dJointSetAMotorNumAxes( SWIGTYPE_p_dJointID.getCPtr( arg0 ), num );
    }

    public static void dJointSetAMotorAxis( SWIGTYPE_p_dJointID arg0, int anum, int rel, float x, float y, float z ) {
        OdeJNI.dJointSetAMotorAxis( SWIGTYPE_p_dJointID.getCPtr( arg0 ), anum, rel, x, y, z );
    }

    public static void dJointSetAMotorAngle( SWIGTYPE_p_dJointID arg0, int anum, float angle ) {
        OdeJNI.dJointSetAMotorAngle( SWIGTYPE_p_dJointID.getCPtr( arg0 ), anum, angle );
    }

    public static void dJointSetAMotorParam( SWIGTYPE_p_dJointID arg0, int parameter, float value ) {
        OdeJNI.dJointSetAMotorParam( SWIGTYPE_p_dJointID.getCPtr( arg0 ), parameter, value );
    }

    public static void dJointSetAMotorMode( SWIGTYPE_p_dJointID arg0, int mode ) {
        OdeJNI.dJointSetAMotorMode( SWIGTYPE_p_dJointID.getCPtr( arg0 ), mode );
    }

    public static void dJointGetBallAnchor( SWIGTYPE_p_dJointID arg0, SWIGTYPE_p_float result ) {
        OdeJNI.dJointGetBallAnchor( SWIGTYPE_p_dJointID.getCPtr( arg0 ), SWIGTYPE_p_float.getCPtr( result ) );
    }

    public static void dJointGetBallAnchor2( SWIGTYPE_p_dJointID arg0, SWIGTYPE_p_float result ) {
        OdeJNI.dJointGetBallAnchor2( SWIGTYPE_p_dJointID.getCPtr( arg0 ), SWIGTYPE_p_float.getCPtr( result ) );
    }

    public static void dJointGetHingeAnchor( SWIGTYPE_p_dJointID arg0, SWIGTYPE_p_float result ) {
        OdeJNI.dJointGetHingeAnchor( SWIGTYPE_p_dJointID.getCPtr( arg0 ), SWIGTYPE_p_float.getCPtr( result ) );
    }

    public static void dJointGetHingeAnchor2( SWIGTYPE_p_dJointID arg0, SWIGTYPE_p_float result ) {
        OdeJNI.dJointGetHingeAnchor2( SWIGTYPE_p_dJointID.getCPtr( arg0 ), SWIGTYPE_p_float.getCPtr( result ) );
    }

    public static void dJointGetHingeAxis( SWIGTYPE_p_dJointID arg0, SWIGTYPE_p_float result ) {
        OdeJNI.dJointGetHingeAxis( SWIGTYPE_p_dJointID.getCPtr( arg0 ), SWIGTYPE_p_float.getCPtr( result ) );
    }

    public static float dJointGetHingeParam( SWIGTYPE_p_dJointID arg0, int parameter ) {
        return OdeJNI.dJointGetHingeParam( SWIGTYPE_p_dJointID.getCPtr( arg0 ), parameter );
    }

    public static float dJointGetHingeAngle( SWIGTYPE_p_dJointID arg0 ) {
        return OdeJNI.dJointGetHingeAngle( SWIGTYPE_p_dJointID.getCPtr( arg0 ) );
    }

    public static float dJointGetHingeAngleRate( SWIGTYPE_p_dJointID arg0 ) {
        return OdeJNI.dJointGetHingeAngleRate( SWIGTYPE_p_dJointID.getCPtr( arg0 ) );
    }

    public static float dJointGetSliderPosition( SWIGTYPE_p_dJointID arg0 ) {
        return OdeJNI.dJointGetSliderPosition( SWIGTYPE_p_dJointID.getCPtr( arg0 ) );
    }

    public static float dJointGetSliderPositionRate( SWIGTYPE_p_dJointID arg0 ) {
        return OdeJNI.dJointGetSliderPositionRate( SWIGTYPE_p_dJointID.getCPtr( arg0 ) );
    }

    public static void dJointGetSliderAxis( SWIGTYPE_p_dJointID arg0, SWIGTYPE_p_float result ) {
        OdeJNI.dJointGetSliderAxis( SWIGTYPE_p_dJointID.getCPtr( arg0 ), SWIGTYPE_p_float.getCPtr( result ) );
    }

    public static float dJointGetSliderParam( SWIGTYPE_p_dJointID arg0, int parameter ) {
        return OdeJNI.dJointGetSliderParam( SWIGTYPE_p_dJointID.getCPtr( arg0 ), parameter );
    }

    public static void dJointGetHinge2Anchor( SWIGTYPE_p_dJointID arg0, SWIGTYPE_p_float result ) {
        OdeJNI.dJointGetHinge2Anchor( SWIGTYPE_p_dJointID.getCPtr( arg0 ), SWIGTYPE_p_float.getCPtr( result ) );
    }

    public static void dJointGetHinge2Anchor2( SWIGTYPE_p_dJointID arg0, SWIGTYPE_p_float result ) {
        OdeJNI.dJointGetHinge2Anchor2( SWIGTYPE_p_dJointID.getCPtr( arg0 ), SWIGTYPE_p_float.getCPtr( result ) );
    }

    public static void dJointGetHinge2Axis1( SWIGTYPE_p_dJointID arg0, SWIGTYPE_p_float result ) {
        OdeJNI.dJointGetHinge2Axis1( SWIGTYPE_p_dJointID.getCPtr( arg0 ), SWIGTYPE_p_float.getCPtr( result ) );
    }

    public static void dJointGetHinge2Axis2( SWIGTYPE_p_dJointID arg0, SWIGTYPE_p_float result ) {
        OdeJNI.dJointGetHinge2Axis2( SWIGTYPE_p_dJointID.getCPtr( arg0 ), SWIGTYPE_p_float.getCPtr( result ) );
    }

    public static float dJointGetHinge2Param( SWIGTYPE_p_dJointID arg0, int parameter ) {
        return OdeJNI.dJointGetHinge2Param( SWIGTYPE_p_dJointID.getCPtr( arg0 ), parameter );
    }

    public static float dJointGetHinge2Angle1( SWIGTYPE_p_dJointID arg0 ) {
        return OdeJNI.dJointGetHinge2Angle1( SWIGTYPE_p_dJointID.getCPtr( arg0 ) );
    }

    public static float dJointGetHinge2Angle1Rate( SWIGTYPE_p_dJointID arg0 ) {
        return OdeJNI.dJointGetHinge2Angle1Rate( SWIGTYPE_p_dJointID.getCPtr( arg0 ) );
    }

    public static float dJointGetHinge2Angle2Rate( SWIGTYPE_p_dJointID arg0 ) {
        return OdeJNI.dJointGetHinge2Angle2Rate( SWIGTYPE_p_dJointID.getCPtr( arg0 ) );
    }

    public static void dJointGetUniversalAnchor( SWIGTYPE_p_dJointID arg0, SWIGTYPE_p_float result ) {
        OdeJNI.dJointGetUniversalAnchor( SWIGTYPE_p_dJointID.getCPtr( arg0 ), SWIGTYPE_p_float.getCPtr( result ) );
    }

    public static void dJointGetUniversalAnchor2( SWIGTYPE_p_dJointID arg0, SWIGTYPE_p_float result ) {
        OdeJNI.dJointGetUniversalAnchor2( SWIGTYPE_p_dJointID.getCPtr( arg0 ), SWIGTYPE_p_float.getCPtr( result ) );
    }

    public static void dJointGetUniversalAxis1( SWIGTYPE_p_dJointID arg0, SWIGTYPE_p_float result ) {
        OdeJNI.dJointGetUniversalAxis1( SWIGTYPE_p_dJointID.getCPtr( arg0 ), SWIGTYPE_p_float.getCPtr( result ) );
    }

    public static void dJointGetUniversalAxis2( SWIGTYPE_p_dJointID arg0, SWIGTYPE_p_float result ) {
        OdeJNI.dJointGetUniversalAxis2( SWIGTYPE_p_dJointID.getCPtr( arg0 ), SWIGTYPE_p_float.getCPtr( result ) );
    }

    public static float dJointGetUniversalParam( SWIGTYPE_p_dJointID arg0, int parameter ) {
        return OdeJNI.dJointGetUniversalParam( SWIGTYPE_p_dJointID.getCPtr( arg0 ), parameter );
    }

    public static float dJointGetUniversalAngle1( SWIGTYPE_p_dJointID arg0 ) {
        return OdeJNI.dJointGetUniversalAngle1( SWIGTYPE_p_dJointID.getCPtr( arg0 ) );
    }

    public static float dJointGetUniversalAngle2( SWIGTYPE_p_dJointID arg0 ) {
        return OdeJNI.dJointGetUniversalAngle2( SWIGTYPE_p_dJointID.getCPtr( arg0 ) );
    }

    public static float dJointGetUniversalAngle1Rate( SWIGTYPE_p_dJointID arg0 ) {
        return OdeJNI.dJointGetUniversalAngle1Rate( SWIGTYPE_p_dJointID.getCPtr( arg0 ) );
    }

    public static float dJointGetUniversalAngle2Rate( SWIGTYPE_p_dJointID arg0 ) {
        return OdeJNI.dJointGetUniversalAngle2Rate( SWIGTYPE_p_dJointID.getCPtr( arg0 ) );
    }

    public static int dJointGetAMotorNumAxes( SWIGTYPE_p_dJointID arg0 ) {
        return OdeJNI.dJointGetAMotorNumAxes( SWIGTYPE_p_dJointID.getCPtr( arg0 ) );
    }

    public static void dJointGetAMotorAxis( SWIGTYPE_p_dJointID arg0, int anum, SWIGTYPE_p_float result ) {
        OdeJNI.dJointGetAMotorAxis( SWIGTYPE_p_dJointID.getCPtr( arg0 ), anum, SWIGTYPE_p_float.getCPtr( result ) );
    }

    public static int dJointGetAMotorAxisRel( SWIGTYPE_p_dJointID arg0, int anum ) {
        return OdeJNI.dJointGetAMotorAxisRel( SWIGTYPE_p_dJointID.getCPtr( arg0 ), anum );
    }

    public static float dJointGetAMotorAngle( SWIGTYPE_p_dJointID arg0, int anum ) {
        return OdeJNI.dJointGetAMotorAngle( SWIGTYPE_p_dJointID.getCPtr( arg0 ), anum );
    }

    public static float dJointGetAMotorAngleRate( SWIGTYPE_p_dJointID arg0, int anum ) {
        return OdeJNI.dJointGetAMotorAngleRate( SWIGTYPE_p_dJointID.getCPtr( arg0 ), anum );
    }

    public static float dJointGetAMotorParam( SWIGTYPE_p_dJointID arg0, int parameter ) {
        return OdeJNI.dJointGetAMotorParam( SWIGTYPE_p_dJointID.getCPtr( arg0 ), parameter );
    }

    public static int dJointGetAMotorMode( SWIGTYPE_p_dJointID arg0 ) {
        return OdeJNI.dJointGetAMotorMode( SWIGTYPE_p_dJointID.getCPtr( arg0 ) );
    }

    public static int dAreConnected( SWIGTYPE_p_dBodyID arg0, SWIGTYPE_p_dBodyID arg1 ) {
        return OdeJNI.dAreConnected( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), SWIGTYPE_p_dBodyID.getCPtr( arg1 ) );
    }

    public static int dAreConnectedExcluding( SWIGTYPE_p_dBodyID arg0, SWIGTYPE_p_dBodyID arg1, int joint_type ) {
        return OdeJNI.dAreConnectedExcluding( SWIGTYPE_p_dBodyID.getCPtr( arg0 ), SWIGTYPE_p_dBodyID.getCPtr( arg1 ), joint_type );
    }

    public static void dRandSetSeed( int seed ) {
        OdeJNI.dRandSetSeed( seed );
    }

    public static void dRSetIdentity( SWIGTYPE_p_float R ) {
        OdeJNI.dRSetIdentity( SWIGTYPE_p_float.getCPtr( R ) );
    }

    public static void dRFromAxisAndAngle( SWIGTYPE_p_float R, float ax, float ay, float az, float angle ) {
        OdeJNI.dRFromAxisAndAngle( SWIGTYPE_p_float.getCPtr( R ), ax, ay, az, angle );
    }

    public static void dRFromEulerAngles( SWIGTYPE_p_float R, float phi, float theta, float psi ) {
        OdeJNI.dRFromEulerAngles( SWIGTYPE_p_float.getCPtr( R ), phi, theta, psi );
    }

    public static void dRFrom2Axes( SWIGTYPE_p_float R, float ax, float ay, float az, float bx, float by, float bz ) {
        OdeJNI.dRFrom2Axes( SWIGTYPE_p_float.getCPtr( R ), ax, ay, az, bx, by, bz );
    }

    public static void dRFromZAxis( SWIGTYPE_p_float R, float ax, float ay, float az ) {
        OdeJNI.dRFromZAxis( SWIGTYPE_p_float.getCPtr( R ), ax, ay, az );
    }

    public static void dQSetIdentity( SWIGTYPE_p_float q ) {
        OdeJNI.dQSetIdentity( SWIGTYPE_p_float.getCPtr( q ) );
    }

    public static void dQFromAxisAndAngle( SWIGTYPE_p_float q, float ax, float ay, float az, float angle ) {
        OdeJNI.dQFromAxisAndAngle( SWIGTYPE_p_float.getCPtr( q ), ax, ay, az, angle );
    }

    public static void dQMultiply0( SWIGTYPE_p_float qa, SWIGTYPE_p_float qb, SWIGTYPE_p_float qc ) {
        OdeJNI.dQMultiply0( SWIGTYPE_p_float.getCPtr( qa ), SWIGTYPE_p_float.getCPtr( qb ), SWIGTYPE_p_float.getCPtr( qc ) );
    }

    public static void dQMultiply1( SWIGTYPE_p_float qa, SWIGTYPE_p_float qb, SWIGTYPE_p_float qc ) {
        OdeJNI.dQMultiply1( SWIGTYPE_p_float.getCPtr( qa ), SWIGTYPE_p_float.getCPtr( qb ), SWIGTYPE_p_float.getCPtr( qc ) );
    }

    public static void dQMultiply2( SWIGTYPE_p_float qa, SWIGTYPE_p_float qb, SWIGTYPE_p_float qc ) {
        OdeJNI.dQMultiply2( SWIGTYPE_p_float.getCPtr( qa ), SWIGTYPE_p_float.getCPtr( qb ), SWIGTYPE_p_float.getCPtr( qc ) );
    }

    public static void dQMultiply3( SWIGTYPE_p_float qa, SWIGTYPE_p_float qb, SWIGTYPE_p_float qc ) {
        OdeJNI.dQMultiply3( SWIGTYPE_p_float.getCPtr( qa ), SWIGTYPE_p_float.getCPtr( qb ), SWIGTYPE_p_float.getCPtr( qc ) );
    }

    public static void dQtoR( SWIGTYPE_p_float q, SWIGTYPE_p_float R ) {
        OdeJNI.dQtoR( SWIGTYPE_p_float.getCPtr( q ), SWIGTYPE_p_float.getCPtr( R ) );
    }

    public static void dRtoQ( SWIGTYPE_p_float R, SWIGTYPE_p_float q ) {
        OdeJNI.dRtoQ( SWIGTYPE_p_float.getCPtr( R ), SWIGTYPE_p_float.getCPtr( q ) );
    }

    public static void dWtoDQ( SWIGTYPE_p_float w, SWIGTYPE_p_float q, SWIGTYPE_p_float dq ) {
        OdeJNI.dWtoDQ( SWIGTYPE_p_float.getCPtr( w ), SWIGTYPE_p_float.getCPtr( q ), SWIGTYPE_p_float.getCPtr( dq ) );
    }

    public static SWIGTYPE_p_dGeomID dCreateCylinder( SWIGTYPE_p_dSpaceID space, float r, float lz ) {
        return new SWIGTYPE_p_dGeomID( OdeJNI.dCreateCylinder( SWIGTYPE_p_dSpaceID.getCPtr( space ), r, lz ), true );
    }

    public static void dGeomCylinderSetParams( SWIGTYPE_p_dGeomID g, float radius, float length ) {
        OdeJNI.dGeomCylinderSetParams( SWIGTYPE_p_dGeomID.getCPtr( g ), radius, length );
    }

    public static void dGeomCylinderGetParams( SWIGTYPE_p_dGeomID g, SWIGTYPE_p_float radius, SWIGTYPE_p_float length ) {
        OdeJNI.dGeomCylinderGetParams( SWIGTYPE_p_dGeomID.getCPtr( g ), SWIGTYPE_p_float.getCPtr( radius ), SWIGTYPE_p_float.getCPtr( length ) );
    }

}
