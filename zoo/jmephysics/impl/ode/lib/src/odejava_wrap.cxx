/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.20
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */


#ifdef __cplusplus
template<class T> class SwigValueWrapper {
    T *tt;
public:
    SwigValueWrapper() : tt(0) { }
    SwigValueWrapper(const SwigValueWrapper<T>& rhs) : tt(new T(*rhs.tt)) { }
    SwigValueWrapper(const T& t) : tt(new T(t)) { }
    ~SwigValueWrapper() { delete tt; } 
    SwigValueWrapper& operator=(const T& t) { delete tt; tt = new T(t); return *this; }
    operator T&() const { return *tt; }
    T *operator&() { return tt; }
private:
    SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
};                                                    
#endif


#if defined(__GNUC__)
    typedef long long __int64; /*For gcc on Windows */
#endif
#include <jni.h>
#include <stdlib.h>
#include <string.h>


/* Support for throwing Java exceptions */
typedef enum {
  SWIG_JavaOutOfMemoryError = 1, 
  SWIG_JavaIOException, 
  SWIG_JavaRuntimeException, 
  SWIG_JavaIndexOutOfBoundsException,
  SWIG_JavaArithmeticException,
  SWIG_JavaIllegalArgumentException,
  SWIG_JavaNullPointerException,
  SWIG_JavaDirectorPureVirtual,
  SWIG_JavaUnknownError
} SWIG_JavaExceptionCodes;

typedef struct {
  SWIG_JavaExceptionCodes code;
  const char *java_exception;
} SWIG_JavaExceptions_t;


static void SWIG_JavaThrowException(JNIEnv *jenv, SWIG_JavaExceptionCodes code, const char *msg) {
  jclass excep;
  static const SWIG_JavaExceptions_t java_exceptions[] = {
    { SWIG_JavaOutOfMemoryError, "java/lang/OutOfMemoryError" },
    { SWIG_JavaIOException, "java/io/IOException" },
    { SWIG_JavaRuntimeException, "java/lang/RuntimeException" },
    { SWIG_JavaIndexOutOfBoundsException, "java/lang/IndexOutOfBoundsException" },
    { SWIG_JavaArithmeticException, "java/lang/ArithmeticException" },
    { SWIG_JavaIllegalArgumentException, "java/lang/IllegalArgumentException" },
    { SWIG_JavaNullPointerException, "java/lang/NullPointerException" },
    { SWIG_JavaDirectorPureVirtual, "java/lang/RuntimeException" },
    { SWIG_JavaUnknownError,  "java/lang/UnknownError" },
    { (SWIG_JavaExceptionCodes)0,  "java/lang/UnknownError" } };
  const SWIG_JavaExceptions_t *except_ptr = java_exceptions;

  while (except_ptr->code != code && except_ptr->code)
    except_ptr++;

  jenv->ExceptionClear();
  excep = jenv->FindClass(except_ptr->java_exception);
  if (excep)
    jenv->ThrowNew(excep, msg);
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_JavaThrowException(jenv, SWIG_JavaIllegalArgumentException, msg); return nullreturn; } else


 #include <ode/ode.h>
// #include <ode/GeomTransformGroup.h>
// #include <../ode/src/dCylinder.h>
 #include <../ode/src/joint.h>
 #include "odejava.hpp"


static float *new_floatArray(int nelements) { 
  return new float[nelements]; 
}

static void delete_floatArray(float *ary) { 
  delete [] ary; 
}

static float floatArray_getitem(float *ary, int index) {
    return ary[index];
}
static void floatArray_setitem(float *ary, int index, float value) {
    ary[index] = value;
}


static int *new_intArray(int nelements) { 
  return new int[nelements]; 
}

static void delete_intArray(int *ary) { 
  delete [] ary; 
}

static int intArray_getitem(int *ary, int index) {
    return ary[index];
}
static void intArray_setitem(int *ary, int index, int value) {
    ary[index] = value;
}


static dGeomID *new_geomIDArray(int nelements) { 
  return new dGeomID[nelements]; 
}

static void delete_geomIDArray(dGeomID *ary) { 
  delete [] ary; 
}

static dGeomID geomIDArray_getitem(dGeomID *ary, int index) {
    return ary[index];
}
static void geomIDArray_setitem(dGeomID *ary, int index, dGeomID value) {
    ary[index] = value;
}


// Odejava version identifier
#define ODEJAVA_VERSION "0.2.4"

// Zero body id
const dBodyID BODYID_ZERO = 0;

// Zero joint group
const dJointGroupID JOINTGROUPID_ZERO = 0;

// Zero parent space id
const dSpaceID PARENTSPACEID_ZERO = 0;

dMass *dMass_getCPtr(dMass *self){
    return self;
  }

#ifdef __cplusplus
extern "C" {
#endif

JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_new_1floatArray(JNIEnv *jenv, jclass jcls, jint jarg1) {
    jlong jresult = 0 ;
    int arg1 ;
    float *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = (int)jarg1; 
    result = (float *)new_floatArray(arg1);
    
    *(float **)&jresult = result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_delete_1floatArray(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    float *arg1 = (float *) 0 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(float **)&jarg1; 
    delete_floatArray(arg1);
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_floatArray_1getitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jfloat jresult = 0 ;
    float *arg1 = (float *) 0 ;
    int arg2 ;
    float result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(float **)&jarg1; 
    arg2 = (int)jarg2; 
    result = (float)floatArray_getitem(arg1,arg2);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_floatArray_1setitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jfloat jarg3) {
    float *arg1 = (float *) 0 ;
    int arg2 ;
    float arg3 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(float **)&jarg1; 
    arg2 = (int)jarg2; 
    arg3 = (float)jarg3; 
    floatArray_setitem(arg1,arg2,arg3);
    
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_new_1intArray(JNIEnv *jenv, jclass jcls, jint jarg1) {
    jlong jresult = 0 ;
    int arg1 ;
    int *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = (int)jarg1; 
    result = (int *)new_intArray(arg1);
    
    *(int **)&jresult = result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_delete_1intArray(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    int *arg1 = (int *) 0 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(int **)&jarg1; 
    delete_intArray(arg1);
    
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_intArray_1getitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jint jresult = 0 ;
    int *arg1 = (int *) 0 ;
    int arg2 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(int **)&jarg1; 
    arg2 = (int)jarg2; 
    result = (int)intArray_getitem(arg1,arg2);
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_intArray_1setitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jint jarg3) {
    int *arg1 = (int *) 0 ;
    int arg2 ;
    int arg3 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(int **)&jarg1; 
    arg2 = (int)jarg2; 
    arg3 = (int)jarg3; 
    intArray_setitem(arg1,arg2,arg3);
    
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_new_1geomIDArray(JNIEnv *jenv, jclass jcls, jint jarg1) {
    jlong jresult = 0 ;
    int arg1 ;
    dGeomID *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = (int)jarg1; 
    result = (dGeomID *)new_geomIDArray(arg1);
    
    *(dGeomID **)&jresult = result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_delete_1geomIDArray(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    dGeomID *arg1 = (dGeomID *) 0 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dGeomID **)&jarg1; 
    delete_geomIDArray(arg1);
    
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_geomIDArray_1getitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jlong jresult = 0 ;
    dGeomID *arg1 = (dGeomID *) 0 ;
    int arg2 ;
    dGeomID result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dGeomID **)&jarg1; 
    arg2 = (int)jarg2; 
    result = geomIDArray_getitem(arg1,arg2);
    
    *(dGeomID **)&jresult = new dGeomID((dGeomID &)result); 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_geomIDArray_1setitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3) {
    dGeomID *arg1 = (dGeomID *) 0 ;
    int arg2 ;
    dGeomID arg3 ;
    dGeomID *argp3 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dGeomID **)&jarg1; 
    arg2 = (int)jarg2; 
    argp3 = *(dGeomID **)&jarg3; 
    if (!argp3) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg3 = *argp3; 
    geomIDArray_setitem(arg1,arg2,arg3);
    
}


JNIEXPORT jstring JNICALL Java_org_odejava_ode_OdeJNI_get_1ODEJAVA_1VERSION(JNIEnv *jenv, jclass jcls) {
    jstring jresult = 0 ;
    char *result;
    
    (void)jenv;
    (void)jcls;
    result = (char *) "0.2.4";
    
    {
        if(result) jresult = jenv->NewStringUTF(result); 
    }
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_get_1BODYID_1ZERO(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    dBodyID result;
    
    (void)jenv;
    (void)jcls;
    result = (dBodyID)BODYID_ZERO;
    
    *(dBodyID **)&jresult = new dBodyID((dBodyID &)result); 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_get_1JOINTGROUPID_1ZERO(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    dJointGroupID result;
    
    (void)jenv;
    (void)jcls;
    result = (dJointGroupID)JOINTGROUPID_ZERO;
    
    *(dJointGroupID **)&jresult = new dJointGroupID((dJointGroupID &)result); 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_get_1PARENTSPACEID_1ZERO(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    dSpaceID result;
    
    (void)jenv;
    (void)jcls;
    result = (dSpaceID)PARENTSPACEID_ZERO;
    
    *(dSpaceID **)&jresult = new dSpaceID((dSpaceID &)result); 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_setWorldID(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    dWorldID arg1 ;
    dWorldID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return ;
    }
    arg1 = *argp1; 
    setWorldID(arg1);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_setContactGroupID(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    dJointGroupID arg1 ;
    dJointGroupID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointGroupID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointGroupID");
        return ;
    }
    arg1 = *argp1; 
    setContactGroupID(arg1);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_setSurfaceMode(JNIEnv *jenv, jclass jcls, jint jarg1) {
    int arg1 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = (int)jarg1; 
    setSurfaceMode(arg1);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_setSurfaceMu(JNIEnv *jenv, jclass jcls, jfloat jarg1) {
    float arg1 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = (float)jarg1; 
    setSurfaceMu(arg1);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_setSurfaceMu2(JNIEnv *jenv, jclass jcls, jfloat jarg1) {
    float arg1 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = (float)jarg1; 
    setSurfaceMu2(arg1);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_setSurfaceBounce(JNIEnv *jenv, jclass jcls, jfloat jarg1) {
    float arg1 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = (float)jarg1; 
    setSurfaceBounce(arg1);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_setSurfaceBounceVel(JNIEnv *jenv, jclass jcls, jfloat jarg1) {
    float arg1 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = (float)jarg1; 
    setSurfaceBounceVel(arg1);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_setSurfaceMotion1(JNIEnv *jenv, jclass jcls, jfloat jarg1) {
    float arg1 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = (float)jarg1; 
    setSurfaceMotion1(arg1);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_setSurfaceMotion2(JNIEnv *jenv, jclass jcls, jfloat jarg1) {
    float arg1 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = (float)jarg1; 
    setSurfaceMotion2(arg1);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_setSurfaceSlip1(JNIEnv *jenv, jclass jcls, jfloat jarg1) {
    float arg1 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = (float)jarg1; 
    setSurfaceSlip1(arg1);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_setSurfaceSlip2(JNIEnv *jenv, jclass jcls, jfloat jarg1) {
    float arg1 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = (float)jarg1; 
    setSurfaceSlip2(arg1);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_setSurfaceSoftErp(JNIEnv *jenv, jclass jcls, jfloat jarg1) {
    float arg1 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = (float)jarg1; 
    setSurfaceSoftErp(arg1);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_setSurfaceSoftCfm(JNIEnv *jenv, jclass jcls, jfloat jarg1) {
    float arg1 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = (float)jarg1; 
    setSurfaceSoftCfm(arg1);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    dGeomID arg1 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    dGeomDestroy(arg1);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomSetData(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dGeomID arg1 ;
    void *arg2 = (void *) 0 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(void **)&jarg2; 
    dGeomSetData(arg1,arg2);
    
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dGeomGetData(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dGeomID arg1 ;
    void *result;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return 0;
    }
    arg1 = *argp1; 
    result = (void *)dGeomGetData(arg1);
    
    *(void **)&jresult = result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomSetBody(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dGeomID arg1 ;
    dBodyID arg2 ;
    dGeomID *argp1 ;
    dBodyID *argp2 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    argp2 = *(dBodyID **)&jarg2; 
    if (!argp2) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg2 = *argp2; 
    dGeomSetBody(arg1,arg2);
    
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dGeomGetBody(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dGeomID arg1 ;
    dBodyID result;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return 0;
    }
    arg1 = *argp1; 
    result = dGeomGetBody(arg1);
    
    *(dBodyID **)&jresult = new dBodyID((dBodyID &)result); 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomSetPosition(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
    dGeomID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    dGeomSetPosition(arg1,arg2,arg3,arg4);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomSetRotation(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dGeomID arg1 ;
    dReal *arg2 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(dReal **)&jarg2; 
    dGeomSetRotation(arg1,arg2);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomSetQuaternion(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dGeomID arg1 ;
    dReal *arg2 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(dReal **)&jarg2; 
    dGeomSetQuaternion(arg1,arg2);
    
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dGeomGetPosition(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dGeomID arg1 ;
    dReal *result;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dReal *)dGeomGetPosition(arg1);
    
    *(dReal **)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dGeomGetRotation(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dGeomID arg1 ;
    dReal *result;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dReal *)dGeomGetRotation(arg1);
    
    *(dReal **)&jresult = result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomGetQuaternion(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dGeomID arg1 ;
    dReal *arg2 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(dReal **)&jarg2; 
    dGeomGetQuaternion(arg1,arg2);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomGetAABB(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dGeomID arg1 ;
    dReal *arg2 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(dReal **)&jarg2; 
    dGeomGetAABB(arg1,arg2);
    
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_dGeomIsSpace(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    dGeomID arg1 ;
    int result;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return 0;
    }
    arg1 = *argp1; 
    result = (int)dGeomIsSpace(arg1);
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dGeomGetSpace(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dGeomID arg1 ;
    dSpaceID result;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return 0;
    }
    arg1 = *argp1; 
    result = dGeomGetSpace(arg1);
    
    *(dSpaceID **)&jresult = new dSpaceID((dSpaceID &)result); 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_dGeomGetClass(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    dGeomID arg1 ;
    int result;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return 0;
    }
    arg1 = *argp1; 
    result = (int)dGeomGetClass(arg1);
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomSetCategoryBits(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dGeomID arg1 ;
    unsigned long arg2 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (unsigned long)jarg2; 
    dGeomSetCategoryBits(arg1,arg2);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomSetCollideBits(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dGeomID arg1 ;
    unsigned long arg2 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (unsigned long)jarg2; 
    dGeomSetCollideBits(arg1,arg2);
    
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dGeomGetCategoryBits(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dGeomID arg1 ;
    unsigned long result;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return 0;
    }
    arg1 = *argp1; 
    result = (unsigned long)dGeomGetCategoryBits(arg1);
    
    jresult = (jlong)result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dGeomGetCollideBits(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dGeomID arg1 ;
    unsigned long result;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return 0;
    }
    arg1 = *argp1; 
    result = (unsigned long)dGeomGetCollideBits(arg1);
    
    jresult = (jlong)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomEnable(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    dGeomID arg1 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    dGeomEnable(arg1);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomDisable(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    dGeomID arg1 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    dGeomDisable(arg1);
    
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_dGeomIsEnabled(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    dGeomID arg1 ;
    int result;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return 0;
    }
    arg1 = *argp1; 
    result = (int)dGeomIsEnabled(arg1);
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_dCollide(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
    jint jresult = 0 ;
    dGeomID arg1 ;
    dGeomID arg2 ;
    int arg3 ;
    dContactGeom *arg4 = (dContactGeom *) 0 ;
    int arg5 ;
    int result;
    dGeomID *argp1 ;
    dGeomID *argp2 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return 0;
    }
    arg1 = *argp1; 
    argp2 = *(dGeomID **)&jarg2; 
    if (!argp2) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return 0;
    }
    arg2 = *argp2; 
    arg3 = (int)jarg3; 
    arg4 = *(dContactGeom **)&jarg4; 
    arg5 = (int)jarg5; 
    result = (int)dCollide(arg1,arg2,arg3,arg4,arg5);
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dSpaceCollide(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
    dSpaceID arg1 ;
    void *arg2 = (void *) 0 ;
    dNearCallback *arg3 = (dNearCallback *) 0 ;
    dSpaceID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dSpaceID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dSpaceID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(void **)&jarg2; 
    arg3 = *(dNearCallback **)&jarg3; 
    dSpaceCollide(arg1,arg2,arg3);
    
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dMaxUserClasses(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dMaxUserClasses;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dSphereClass(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dSphereClass;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dBoxClass(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dBoxClass;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dCapsuleClass(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dCapsuleClass;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dCylinderClass(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dCylinderClass;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dPlaneClass(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dPlaneClass;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dRayClass(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dRayClass;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dGeomTransformClass(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dGeomTransformClass;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dTriMeshClass(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dTriMeshClass;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dFirstSpaceClass(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dFirstSpaceClass;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dSimpleSpaceClass(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dSimpleSpaceClass;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dHashSpaceClass(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dHashSpaceClass;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dQuadTreeSpaceClass(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dQuadTreeSpaceClass;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dLastSpaceClass(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dLastSpaceClass;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dFirstUserClass(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dFirstUserClass;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dLastUserClass(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dLastUserClass;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dGeomNumClasses(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dGeomNumClasses;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dCreateSphere(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2) {
    jlong jresult = 0 ;
    dSpaceID arg1 ;
    dReal arg2 ;
    dGeomID result;
    dSpaceID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dSpaceID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dSpaceID");
        return 0;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    result = dCreateSphere(arg1,arg2);
    
    *(dGeomID **)&jresult = new dGeomID((dGeomID &)result); 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomSphereSetRadius(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2) {
    dGeomID arg1 ;
    dReal arg2 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    dGeomSphereSetRadius(arg1,arg2);
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dGeomSphereGetRadius(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dGeomID arg1 ;
    dReal result;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dReal)dGeomSphereGetRadius(arg1);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dGeomSpherePointDepth(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
    jfloat jresult = 0 ;
    dGeomID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dReal result;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return 0;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    result = (dReal)dGeomSpherePointDepth(arg1,arg2,arg3,arg4);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dCreateBox(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
    jlong jresult = 0 ;
    dSpaceID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dGeomID result;
    dSpaceID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dSpaceID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dSpaceID");
        return 0;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    result = dCreateBox(arg1,arg2,arg3,arg4);
    
    *(dGeomID **)&jresult = new dGeomID((dGeomID &)result); 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomBoxSetLengths(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
    dGeomID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    dGeomBoxSetLengths(arg1,arg2,arg3,arg4);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomBoxGetLengths(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dGeomID arg1 ;
    dReal *arg2 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(dReal **)&jarg2; 
    dGeomBoxGetLengths(arg1,arg2);
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dGeomBoxPointDepth(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
    jfloat jresult = 0 ;
    dGeomID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dReal result;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return 0;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    result = (dReal)dGeomBoxPointDepth(arg1,arg2,arg3,arg4);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dCreatePlane(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4, jfloat jarg5) {
    jlong jresult = 0 ;
    dSpaceID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dReal arg5 ;
    dGeomID result;
    dSpaceID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dSpaceID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dSpaceID");
        return 0;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    arg5 = (dReal)jarg5; 
    result = dCreatePlane(arg1,arg2,arg3,arg4,arg5);
    
    *(dGeomID **)&jresult = new dGeomID((dGeomID &)result); 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomPlaneSetParams(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4, jfloat jarg5) {
    dGeomID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dReal arg5 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    arg5 = (dReal)jarg5; 
    dGeomPlaneSetParams(arg1,arg2,arg3,arg4,arg5);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomPlaneGetParams(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dGeomID arg1 ;
    dReal *arg2 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(dReal **)&jarg2; 
    dGeomPlaneGetParams(arg1,arg2);
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dGeomPlanePointDepth(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
    jfloat jresult = 0 ;
    dGeomID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dReal result;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return 0;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    result = (dReal)dGeomPlanePointDepth(arg1,arg2,arg3,arg4);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dCreateCapsule(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3) {
    jlong jresult = 0 ;
    dSpaceID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dGeomID result;
    dSpaceID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dSpaceID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dSpaceID");
        return 0;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    result = dCreateCapsule(arg1,arg2,arg3);
    
    *(dGeomID **)&jresult = new dGeomID((dGeomID &)result); 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomCapsuleSetParams(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3) {
    dGeomID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    dGeomCapsuleSetParams(arg1,arg2,arg3);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomCapsuleGetParams(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
    dGeomID arg1 ;
    dReal *arg2 = (dReal *) 0 ;
    dReal *arg3 = (dReal *) 0 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(dReal **)&jarg2; 
    arg3 = *(dReal **)&jarg3; 
    dGeomCapsuleGetParams(arg1,arg2,arg3);
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dGeomCapsulePointDepth(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
    jfloat jresult = 0 ;
    dGeomID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dReal result;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return 0;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    result = (dReal)dGeomCapsulePointDepth(arg1,arg2,arg3,arg4);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dCreateRay(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2) {
    jlong jresult = 0 ;
    dSpaceID arg1 ;
    dReal arg2 ;
    dGeomID result;
    dSpaceID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dSpaceID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dSpaceID");
        return 0;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    result = dCreateRay(arg1,arg2);
    
    *(dGeomID **)&jresult = new dGeomID((dGeomID &)result); 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomRaySetLength(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2) {
    dGeomID arg1 ;
    dReal arg2 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    dGeomRaySetLength(arg1,arg2);
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dGeomRayGetLength(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dGeomID arg1 ;
    dReal result;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dReal)dGeomRayGetLength(arg1);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomRaySet(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4, jfloat jarg5, jfloat jarg6, jfloat jarg7) {
    dGeomID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dReal arg5 ;
    dReal arg6 ;
    dReal arg7 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    arg5 = (dReal)jarg5; 
    arg6 = (dReal)jarg6; 
    arg7 = (dReal)jarg7; 
    dGeomRaySet(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomRayGet(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
    dGeomID arg1 ;
    dReal *arg2 ;
    dReal *arg3 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(dReal **)&jarg2; 
    arg3 = *(dReal **)&jarg3; 
    dGeomRayGet(arg1,arg2,arg3);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomRaySetParams(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jint jarg3) {
    dGeomID arg1 ;
    int arg2 ;
    int arg3 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    arg3 = (int)jarg3; 
    dGeomRaySetParams(arg1,arg2,arg3);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomRayGetParams(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
    dGeomID arg1 ;
    int *arg2 = (int *) 0 ;
    int *arg3 = (int *) 0 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(int **)&jarg2; 
    arg3 = *(int **)&jarg3; 
    dGeomRayGetParams(arg1,arg2,arg3);
    
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dCreateGeomTransform(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dSpaceID arg1 ;
    dGeomID result;
    dSpaceID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dSpaceID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dSpaceID");
        return 0;
    }
    arg1 = *argp1; 
    result = dCreateGeomTransform(arg1);
    
    *(dGeomID **)&jresult = new dGeomID((dGeomID &)result); 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomTransformSetGeom(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dGeomID arg1 ;
    dGeomID arg2 ;
    dGeomID *argp1 ;
    dGeomID *argp2 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    argp2 = *(dGeomID **)&jarg2; 
    if (!argp2) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg2 = *argp2; 
    dGeomTransformSetGeom(arg1,arg2);
    
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dGeomTransformGetGeom(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dGeomID arg1 ;
    dGeomID result;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return 0;
    }
    arg1 = *argp1; 
    result = dGeomTransformGetGeom(arg1);
    
    *(dGeomID **)&jresult = new dGeomID((dGeomID &)result); 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomTransformSetCleanup(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    dGeomID arg1 ;
    int arg2 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    dGeomTransformSetCleanup(arg1,arg2);
    
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_dGeomTransformGetCleanup(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    dGeomID arg1 ;
    int result;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return 0;
    }
    arg1 = *argp1; 
    result = (int)dGeomTransformGetCleanup(arg1);
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomTransformSetInfo(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    dGeomID arg1 ;
    int arg2 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    dGeomTransformSetInfo(arg1,arg2);
    
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_dGeomTransformGetInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    dGeomID arg1 ;
    int result;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return 0;
    }
    arg1 = *argp1; 
    result = (int)dGeomTransformGetInfo(arg1);
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dClosestLineSegmentPoints(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6) {
    dReal *arg1 ;
    dReal *arg2 ;
    dReal *arg3 ;
    dReal *arg4 ;
    dReal *arg5 ;
    dReal *arg6 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dReal **)&jarg1; 
    arg2 = *(dReal **)&jarg2; 
    arg3 = *(dReal **)&jarg3; 
    arg4 = *(dReal **)&jarg4; 
    arg5 = *(dReal **)&jarg5; 
    arg6 = *(dReal **)&jarg6; 
    dClosestLineSegmentPoints(arg1,arg2,arg3,arg4,arg5,arg6);
    
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_dBoxTouchesBox(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6) {
    jint jresult = 0 ;
    dReal *arg1 ;
    dReal *arg2 ;
    dReal *arg3 ;
    dReal *arg4 ;
    dReal *arg5 ;
    dReal *arg6 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dReal **)&jarg1; 
    arg2 = *(dReal **)&jarg2; 
    arg3 = *(dReal **)&jarg3; 
    arg4 = *(dReal **)&jarg4; 
    arg5 = *(dReal **)&jarg5; 
    arg6 = *(dReal **)&jarg6; 
    result = (int)dBoxTouchesBox(arg1,arg2,arg3,arg4,arg5,arg6);
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dInfiniteAABB(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dGeomID arg1 ;
    dReal *arg2 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(dReal **)&jarg2; 
    dInfiniteAABB(arg1,arg2);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dCloseODE(JNIEnv *jenv, jclass jcls) {
    (void)jenv;
    (void)jcls;
    dCloseODE();
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_set_1dGeomClass_1bytes(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    dGeomClass *arg1 = (dGeomClass *) 0 ;
    int arg2 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dGeomClass **)&jarg1; 
    arg2 = (int)jarg2; 
    if (arg1) (arg1)->bytes = arg2;
    
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dGeomClass_1bytes(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    dGeomClass *arg1 = (dGeomClass *) 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dGeomClass **)&jarg1; 
    result = (int) ((arg1)->bytes);
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_set_1dGeomClass_1collider(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dGeomClass *arg1 = (dGeomClass *) 0 ;
    dGetColliderFnFn *arg2 = (dGetColliderFnFn *) 0 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dGeomClass **)&jarg1; 
    arg2 = *(dGetColliderFnFn **)&jarg2; 
    if (arg1) (arg1)->collider = arg2;
    
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_get_1dGeomClass_1collider(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dGeomClass *arg1 = (dGeomClass *) 0 ;
    dGetColliderFnFn *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dGeomClass **)&jarg1; 
    result = (dGetColliderFnFn *) ((arg1)->collider);
    
    *(dGetColliderFnFn **)&jresult = result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_set_1dGeomClass_1aabb(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dGeomClass *arg1 = (dGeomClass *) 0 ;
    dGetAABBFn *arg2 = (dGetAABBFn *) 0 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dGeomClass **)&jarg1; 
    arg2 = *(dGetAABBFn **)&jarg2; 
    if (arg1) (arg1)->aabb = arg2;
    
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_get_1dGeomClass_1aabb(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dGeomClass *arg1 = (dGeomClass *) 0 ;
    dGetAABBFn *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dGeomClass **)&jarg1; 
    result = (dGetAABBFn *) ((arg1)->aabb);
    
    *(dGetAABBFn **)&jresult = result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_set_1dGeomClass_1aabb_1test(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dGeomClass *arg1 = (dGeomClass *) 0 ;
    dAABBTestFn *arg2 = (dAABBTestFn *) 0 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dGeomClass **)&jarg1; 
    arg2 = *(dAABBTestFn **)&jarg2; 
    if (arg1) (arg1)->aabb_test = arg2;
    
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_get_1dGeomClass_1aabb_1test(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dGeomClass *arg1 = (dGeomClass *) 0 ;
    dAABBTestFn *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dGeomClass **)&jarg1; 
    result = (dAABBTestFn *) ((arg1)->aabb_test);
    
    *(dAABBTestFn **)&jresult = result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_set_1dGeomClass_1dtor(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dGeomClass *arg1 = (dGeomClass *) 0 ;
    dGeomDtorFn *arg2 = (dGeomDtorFn *) 0 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dGeomClass **)&jarg1; 
    arg2 = *(dGeomDtorFn **)&jarg2; 
    if (arg1) (arg1)->dtor = arg2;
    
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_get_1dGeomClass_1dtor(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dGeomClass *arg1 = (dGeomClass *) 0 ;
    dGeomDtorFn *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dGeomClass **)&jarg1; 
    result = (dGeomDtorFn *) ((arg1)->dtor);
    
    *(dGeomDtorFn **)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_new_1dGeomClass(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    dGeomClass *result;
    
    (void)jenv;
    (void)jcls;
    result = (dGeomClass *)new dGeomClass();
    
    *(dGeomClass **)&jresult = result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_delete_1dGeomClass(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    dGeomClass *arg1 = (dGeomClass *) 0 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dGeomClass **)&jarg1; 
    delete arg1;
    
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_dCreateGeomClass(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    dGeomClass *arg1 = (dGeomClass *) 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dGeomClass **)&jarg1; 
    result = (int)dCreateGeomClass((dGeomClass const *)arg1);
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dGeomGetClassData(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dGeomID arg1 ;
    void *result;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return 0;
    }
    arg1 = *argp1; 
    result = (void *)dGeomGetClassData(arg1);
    
    *(void **)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dCreateGeom(JNIEnv *jenv, jclass jcls, jint jarg1) {
    jlong jresult = 0 ;
    int arg1 ;
    dGeomID result;
    
    (void)jenv;
    (void)jcls;
    arg1 = (int)jarg1; 
    result = dCreateGeom(arg1);
    
    *(dGeomID **)&jresult = new dGeomID((dGeomID &)result); 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dSimpleSpaceCreate(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dSpaceID arg1 ;
    dSpaceID result;
    dSpaceID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dSpaceID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dSpaceID");
        return 0;
    }
    arg1 = *argp1; 
    result = dSimpleSpaceCreate(arg1);
    
    *(dSpaceID **)&jresult = new dSpaceID((dSpaceID &)result); 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dHashSpaceCreate(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dSpaceID arg1 ;
    dSpaceID result;
    dSpaceID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dSpaceID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dSpaceID");
        return 0;
    }
    arg1 = *argp1; 
    result = dHashSpaceCreate(arg1);
    
    *(dSpaceID **)&jresult = new dSpaceID((dSpaceID &)result); 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dQuadTreeSpaceCreate(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
    jlong jresult = 0 ;
    dSpaceID arg1 ;
    dReal *arg2 ;
    dReal *arg3 ;
    int arg4 ;
    dSpaceID result;
    dSpaceID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dSpaceID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dSpaceID");
        return 0;
    }
    arg1 = *argp1; 
    arg2 = *(dReal **)&jarg2; 
    arg3 = *(dReal **)&jarg3; 
    arg4 = (int)jarg4; 
    result = dQuadTreeSpaceCreate(arg1,arg2,arg3,arg4);
    
    *(dSpaceID **)&jresult = new dSpaceID((dSpaceID &)result); 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dSpaceDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    dSpaceID arg1 ;
    dSpaceID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dSpaceID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dSpaceID");
        return ;
    }
    arg1 = *argp1; 
    dSpaceDestroy(arg1);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dHashSpaceSetLevels(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jint jarg3) {
    dSpaceID arg1 ;
    int arg2 ;
    int arg3 ;
    dSpaceID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dSpaceID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dSpaceID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    arg3 = (int)jarg3; 
    dHashSpaceSetLevels(arg1,arg2,arg3);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dSpaceSetCleanup(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    dSpaceID arg1 ;
    int arg2 ;
    dSpaceID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dSpaceID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dSpaceID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    dSpaceSetCleanup(arg1,arg2);
    
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_dSpaceGetCleanup(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    dSpaceID arg1 ;
    int result;
    dSpaceID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dSpaceID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dSpaceID");
        return 0;
    }
    arg1 = *argp1; 
    result = (int)dSpaceGetCleanup(arg1);
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dSpaceAdd(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dSpaceID arg1 ;
    dGeomID arg2 ;
    dSpaceID *argp1 ;
    dGeomID *argp2 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dSpaceID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dSpaceID");
        return ;
    }
    arg1 = *argp1; 
    argp2 = *(dGeomID **)&jarg2; 
    if (!argp2) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg2 = *argp2; 
    dSpaceAdd(arg1,arg2);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dSpaceRemove(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dSpaceID arg1 ;
    dGeomID arg2 ;
    dSpaceID *argp1 ;
    dGeomID *argp2 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dSpaceID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dSpaceID");
        return ;
    }
    arg1 = *argp1; 
    argp2 = *(dGeomID **)&jarg2; 
    if (!argp2) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg2 = *argp2; 
    dSpaceRemove(arg1,arg2);
    
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_dSpaceQuery(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jint jresult = 0 ;
    dSpaceID arg1 ;
    dGeomID arg2 ;
    int result;
    dSpaceID *argp1 ;
    dGeomID *argp2 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dSpaceID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dSpaceID");
        return 0;
    }
    arg1 = *argp1; 
    argp2 = *(dGeomID **)&jarg2; 
    if (!argp2) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return 0;
    }
    arg2 = *argp2; 
    result = (int)dSpaceQuery(arg1,arg2);
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_dSpaceGetNumGeoms(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    dSpaceID arg1 ;
    int result;
    dSpaceID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dSpaceID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dSpaceID");
        return 0;
    }
    arg1 = *argp1; 
    result = (int)dSpaceGetNumGeoms(arg1);
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dSpaceGetGeom(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jlong jresult = 0 ;
    dSpaceID arg1 ;
    int arg2 ;
    dGeomID result;
    dSpaceID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dSpaceID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dSpaceID");
        return 0;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    result = dSpaceGetGeom(arg1,arg2);
    
    *(dGeomID **)&jresult = new dGeomID((dGeomID &)result); 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dGeomTriMeshDataCreate(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    dTriMeshDataID result;
    
    (void)jenv;
    (void)jcls;
    result = (dTriMeshDataID)dGeomTriMeshDataCreate();
    
    *(dTriMeshDataID *)&jresult = result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomTriMeshDataDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    dTriMeshDataID arg1 = (dTriMeshDataID) 0 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dTriMeshDataID *)&jarg1; 
    dGeomTriMeshDataDestroy(arg1);
    
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1TRIMESH_1FACE_1NORMALS(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)TRIMESH_FACE_NORMALS;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1TRIMESH_1LAST_1TRANSFORMATION(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)TRIMESH_LAST_TRANSFORMATION;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomTriMeshDataSet(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3) {
    dTriMeshDataID arg1 = (dTriMeshDataID) 0 ;
    int arg2 ;
    void *arg3 = (void *) 0 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dTriMeshDataID *)&jarg1; 
    arg2 = (int)jarg2; 
    arg3 = *(void **)&jarg3; 
    dGeomTriMeshDataSet(arg1,arg2,arg3);
    
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dGeomTriMeshDataGet(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jlong jresult = 0 ;
    dTriMeshDataID arg1 = (dTriMeshDataID) 0 ;
    int arg2 ;
    void *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dTriMeshDataID *)&jarg1; 
    arg2 = (int)jarg2; 
    result = (void *)dGeomTriMeshDataGet(arg1,arg2);
    
    *(void **)&jresult = result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomTriMeshDataBuildSingle(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4, jlong jarg5, jint jarg6, jint jarg7) {
    dTriMeshDataID arg1 = (dTriMeshDataID) 0 ;
    dReal *arg2 = (dReal *) 0 ;
    int arg3 ;
    int arg4 ;
    int *arg5 = (int *) 0 ;
    int arg6 ;
    int arg7 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dTriMeshDataID *)&jarg1; 
    arg2 = *(dReal **)&jarg2; 
    arg3 = (int)jarg3; 
    arg4 = (int)jarg4; 
    arg5 = *(int **)&jarg5; 
    arg6 = (int)jarg6; 
    arg7 = (int)jarg7; 
    dGeomTriMeshDataBuildSingle(arg1,(dReal const *)arg2,arg3,arg4,(int const *)arg5,arg6,arg7);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomTriMeshDataBuildSingle1(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4, jlong jarg5, jint jarg6, jint jarg7, jlong jarg8) {
    dTriMeshDataID arg1 = (dTriMeshDataID) 0 ;
    dReal *arg2 = (dReal *) 0 ;
    int arg3 ;
    int arg4 ;
    int *arg5 = (int *) 0 ;
    int arg6 ;
    int arg7 ;
    dReal *arg8 = (dReal *) 0 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dTriMeshDataID *)&jarg1; 
    arg2 = *(dReal **)&jarg2; 
    arg3 = (int)jarg3; 
    arg4 = (int)jarg4; 
    arg5 = *(int **)&jarg5; 
    arg6 = (int)jarg6; 
    arg7 = (int)jarg7; 
    arg8 = *(dReal **)&jarg8; 
    dGeomTriMeshDataBuildSingle1(arg1,(dReal const *)arg2,arg3,arg4,(int const *)arg5,arg6,arg7,(dReal const *)arg8);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomTriMeshDataBuildSimple(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
    dTriMeshDataID arg1 = (dTriMeshDataID) 0 ;
    dReal *arg2 = (dReal *) 0 ;
    int arg3 ;
    int *arg4 = (int *) 0 ;
    int arg5 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dTriMeshDataID *)&jarg1; 
    arg2 = *(dReal **)&jarg2; 
    arg3 = (int)jarg3; 
    arg4 = *(int **)&jarg4; 
    arg5 = (int)jarg5; 
    dGeomTriMeshDataBuildSimple(arg1,(dReal const *)arg2,arg3,(int const *)arg4,arg5);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomTriMeshDataBuildSimple1(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6) {
    dTriMeshDataID arg1 = (dTriMeshDataID) 0 ;
    dReal *arg2 = (dReal *) 0 ;
    int arg3 ;
    int *arg4 = (int *) 0 ;
    int arg5 ;
    int *arg6 = (int *) 0 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dTriMeshDataID *)&jarg1; 
    arg2 = *(dReal **)&jarg2; 
    arg3 = (int)jarg3; 
    arg4 = *(int **)&jarg4; 
    arg5 = (int)jarg5; 
    arg6 = *(int **)&jarg6; 
    dGeomTriMeshDataBuildSimple1(arg1,(dReal const *)arg2,arg3,(int const *)arg4,arg5,(int const *)arg6);
    
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dCreateTriMesh(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5) {
    jlong jresult = 0 ;
    dSpaceID arg1 ;
    dTriMeshDataID arg2 = (dTriMeshDataID) 0 ;
    dTriCallback *arg3 = (dTriCallback *) 0 ;
    dTriArrayCallback *arg4 = (dTriArrayCallback *) 0 ;
    dTriRayCallback *arg5 = (dTriRayCallback *) 0 ;
    dGeomID result;
    dSpaceID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dSpaceID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dSpaceID");
        return 0;
    }
    arg1 = *argp1; 
    arg2 = *(dTriMeshDataID *)&jarg2; 
    arg3 = *(dTriCallback **)&jarg3; 
    arg4 = *(dTriArrayCallback **)&jarg4; 
    arg5 = *(dTriRayCallback **)&jarg5; 
    result = dCreateTriMesh(arg1,arg2,arg3,arg4,arg5);
    
    *(dGeomID **)&jresult = new dGeomID((dGeomID &)result); 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomTriMeshSetData(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dGeomID arg1 ;
    dTriMeshDataID arg2 = (dTriMeshDataID) 0 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(dTriMeshDataID *)&jarg2; 
    dGeomTriMeshSetData(arg1,arg2);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomTriMeshEnableTC(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jint jarg3) {
    dGeomID arg1 ;
    int arg2 ;
    int arg3 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    arg3 = (int)jarg3; 
    dGeomTriMeshEnableTC(arg1,arg2,arg3);
    
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_dGeomTriMeshIsTCEnabled(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jint jresult = 0 ;
    dGeomID arg1 ;
    int arg2 ;
    int result;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return 0;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    result = (int)dGeomTriMeshIsTCEnabled(arg1,arg2);
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomTriMeshClearTCCache(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    dGeomID arg1 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    dGeomTriMeshClearTCCache(arg1);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomTriMeshGetTriangle(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jlong jarg4, jlong jarg5) {
    dGeomID arg1 ;
    int arg2 ;
    dVector3 *arg3 = (dVector3 *) 0 ;
    dVector3 *arg4 = (dVector3 *) 0 ;
    dVector3 *arg5 = (dVector3 *) 0 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    arg3 = *(dVector3 **)&jarg3; 
    arg4 = *(dVector3 **)&jarg4; 
    arg5 = *(dVector3 **)&jarg5; 
    dGeomTriMeshGetTriangle(arg1,arg2,arg3,arg4,arg5);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomTriMeshGetPoint(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jfloat jarg3, jfloat jarg4, jlong jarg5) {
    dGeomID arg1 ;
    int arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dReal *arg5 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    arg5 = *(dReal **)&jarg5; 
    dGeomTriMeshGetPoint(arg1,arg2,arg3,arg4,arg5);
    
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dJointTypeNone(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dJointTypeNone;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dJointTypeBall(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dJointTypeBall;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dJointTypeHinge(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dJointTypeHinge;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dJointTypeSlider(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dJointTypeSlider;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dJointTypeContact(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dJointTypeContact;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dJointTypeUniversal(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dJointTypeUniversal;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dJointTypeHinge2(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dJointTypeHinge2;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dJointTypeFixed(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dJointTypeFixed;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dJointTypeNull(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dJointTypeNull;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dJointTypeAMotor(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dJointTypeAMotor;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamLoStop(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamLoStop;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamHiStop(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamHiStop;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamVel(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamVel;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamFMax(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamFMax;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamFudgeFactor(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamFudgeFactor;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamBounce(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamBounce;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamCFM(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamCFM;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamStopERP(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamStopERP;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamStopCFM(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamStopCFM;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamSuspensionERP(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamSuspensionERP;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamSuspensionCFM(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamSuspensionCFM;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamERP(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamERP;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamLoStop2(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamLoStop2;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamHiStop2(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamHiStop2;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamVel2(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamVel2;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamFMax2(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamFMax2;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamFudgeFactor2(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamFudgeFactor2;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamBounce2(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamBounce2;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamCFM2(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamCFM2;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamStopERP2(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamStopERP2;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamStopCFM2(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamStopCFM2;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamSuspensionERP2(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamSuspensionERP2;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamSuspensionCFM2(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamSuspensionCFM2;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamERP2(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamERP2;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamLoStop3(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamLoStop3;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamHiStop3(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamHiStop3;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamVel3(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamVel3;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamFMax3(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamFMax3;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamFudgeFactor3(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamFudgeFactor3;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamBounce3(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamBounce3;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamCFM3(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamCFM3;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamStopERP3(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamStopERP3;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamStopCFM3(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamStopCFM3;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamSuspensionERP3(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamSuspensionERP3;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamSuspensionCFM3(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamSuspensionCFM3;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dParamERP3(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dParamERP3;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dAMotorUser(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dAMotorUser;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dAMotorEuler(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dAMotorEuler;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_set_1dJointFeedback_1f1(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dJointFeedback *arg1 = (dJointFeedback *) 0 ;
    dReal *arg2 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dJointFeedback **)&jarg1; 
    arg2 = *(dReal **)&jarg2; 
    {
        int ii;
        dReal *b = (dReal *) arg1->f1;
        for (ii = 0; ii < 4; ii++) b[ii] = *((dReal *) arg2 + ii);
    }
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_get_1dJointFeedback_1f1(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dJointFeedback *arg1 = (dJointFeedback *) 0 ;
    dReal *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dJointFeedback **)&jarg1; 
    result = (dReal *)(dReal *) ((arg1)->f1);
    
    *(dReal **)&jresult = result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_set_1dJointFeedback_1t1(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dJointFeedback *arg1 = (dJointFeedback *) 0 ;
    dReal *arg2 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dJointFeedback **)&jarg1; 
    arg2 = *(dReal **)&jarg2; 
    {
        int ii;
        dReal *b = (dReal *) arg1->t1;
        for (ii = 0; ii < 4; ii++) b[ii] = *((dReal *) arg2 + ii);
    }
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_get_1dJointFeedback_1t1(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dJointFeedback *arg1 = (dJointFeedback *) 0 ;
    dReal *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dJointFeedback **)&jarg1; 
    result = (dReal *)(dReal *) ((arg1)->t1);
    
    *(dReal **)&jresult = result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_set_1dJointFeedback_1f2(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dJointFeedback *arg1 = (dJointFeedback *) 0 ;
    dReal *arg2 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dJointFeedback **)&jarg1; 
    arg2 = *(dReal **)&jarg2; 
    {
        int ii;
        dReal *b = (dReal *) arg1->f2;
        for (ii = 0; ii < 4; ii++) b[ii] = *((dReal *) arg2 + ii);
    }
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_get_1dJointFeedback_1f2(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dJointFeedback *arg1 = (dJointFeedback *) 0 ;
    dReal *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dJointFeedback **)&jarg1; 
    result = (dReal *)(dReal *) ((arg1)->f2);
    
    *(dReal **)&jresult = result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_set_1dJointFeedback_1t2(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dJointFeedback *arg1 = (dJointFeedback *) 0 ;
    dReal *arg2 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dJointFeedback **)&jarg1; 
    arg2 = *(dReal **)&jarg2; 
    {
        int ii;
        dReal *b = (dReal *) arg1->t2;
        for (ii = 0; ii < 4; ii++) b[ii] = *((dReal *) arg2 + ii);
    }
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_get_1dJointFeedback_1t2(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dJointFeedback *arg1 = (dJointFeedback *) 0 ;
    dReal *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dJointFeedback **)&jarg1; 
    result = (dReal *)(dReal *) ((arg1)->t2);
    
    *(dReal **)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_new_1dJointFeedback(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    dJointFeedback *result;
    
    (void)jenv;
    (void)jcls;
    result = (dJointFeedback *)new dJointFeedback();
    
    *(dJointFeedback **)&jresult = result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_delete_1dJointFeedback(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    dJointFeedback *arg1 = (dJointFeedback *) 0 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dJointFeedback **)&jarg1; 
    delete arg1;
    
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dContactMu2(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dContactMu2;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dContactFDir1(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dContactFDir1;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dContactBounce(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dContactBounce;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dContactSoftERP(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dContactSoftERP;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dContactSoftCFM(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dContactSoftCFM;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dContactMotion1(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dContactMotion1;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dContactMotion2(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dContactMotion2;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dContactSlip1(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dContactSlip1;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dContactSlip2(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dContactSlip2;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dContactApprox0(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dContactApprox0;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dContactApprox1_11(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dContactApprox1_1;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dContactApprox1_12(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dContactApprox1_2;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dContactApprox1(JNIEnv *jenv, jclass jcls) {
    jint jresult = 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    result = (int)dContactApprox1;
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_set_1dSurfaceParameters_1mode(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    dSurfaceParameters *arg1 = (dSurfaceParameters *) 0 ;
    int arg2 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dSurfaceParameters **)&jarg1; 
    arg2 = (int)jarg2; 
    if (arg1) (arg1)->mode = arg2;
    
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_get_1dSurfaceParameters_1mode(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    dSurfaceParameters *arg1 = (dSurfaceParameters *) 0 ;
    int result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dSurfaceParameters **)&jarg1; 
    result = (int) ((arg1)->mode);
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_set_1dSurfaceParameters_1mu(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2) {
    dSurfaceParameters *arg1 = (dSurfaceParameters *) 0 ;
    dReal arg2 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dSurfaceParameters **)&jarg1; 
    arg2 = (dReal)jarg2; 
    if (arg1) (arg1)->mu = arg2;
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_get_1dSurfaceParameters_1mu(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dSurfaceParameters *arg1 = (dSurfaceParameters *) 0 ;
    dReal result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dSurfaceParameters **)&jarg1; 
    result = (dReal) ((arg1)->mu);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_set_1dSurfaceParameters_1mu2(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2) {
    dSurfaceParameters *arg1 = (dSurfaceParameters *) 0 ;
    dReal arg2 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dSurfaceParameters **)&jarg1; 
    arg2 = (dReal)jarg2; 
    if (arg1) (arg1)->mu2 = arg2;
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_get_1dSurfaceParameters_1mu2(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dSurfaceParameters *arg1 = (dSurfaceParameters *) 0 ;
    dReal result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dSurfaceParameters **)&jarg1; 
    result = (dReal) ((arg1)->mu2);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_set_1dSurfaceParameters_1bounce(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2) {
    dSurfaceParameters *arg1 = (dSurfaceParameters *) 0 ;
    dReal arg2 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dSurfaceParameters **)&jarg1; 
    arg2 = (dReal)jarg2; 
    if (arg1) (arg1)->bounce = arg2;
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_get_1dSurfaceParameters_1bounce(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dSurfaceParameters *arg1 = (dSurfaceParameters *) 0 ;
    dReal result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dSurfaceParameters **)&jarg1; 
    result = (dReal) ((arg1)->bounce);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_set_1dSurfaceParameters_1bounce_1vel(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2) {
    dSurfaceParameters *arg1 = (dSurfaceParameters *) 0 ;
    dReal arg2 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dSurfaceParameters **)&jarg1; 
    arg2 = (dReal)jarg2; 
    if (arg1) (arg1)->bounce_vel = arg2;
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_get_1dSurfaceParameters_1bounce_1vel(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dSurfaceParameters *arg1 = (dSurfaceParameters *) 0 ;
    dReal result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dSurfaceParameters **)&jarg1; 
    result = (dReal) ((arg1)->bounce_vel);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_set_1dSurfaceParameters_1soft_1erp(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2) {
    dSurfaceParameters *arg1 = (dSurfaceParameters *) 0 ;
    dReal arg2 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dSurfaceParameters **)&jarg1; 
    arg2 = (dReal)jarg2; 
    if (arg1) (arg1)->soft_erp = arg2;
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_get_1dSurfaceParameters_1soft_1erp(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dSurfaceParameters *arg1 = (dSurfaceParameters *) 0 ;
    dReal result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dSurfaceParameters **)&jarg1; 
    result = (dReal) ((arg1)->soft_erp);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_set_1dSurfaceParameters_1soft_1cfm(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2) {
    dSurfaceParameters *arg1 = (dSurfaceParameters *) 0 ;
    dReal arg2 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dSurfaceParameters **)&jarg1; 
    arg2 = (dReal)jarg2; 
    if (arg1) (arg1)->soft_cfm = arg2;
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_get_1dSurfaceParameters_1soft_1cfm(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dSurfaceParameters *arg1 = (dSurfaceParameters *) 0 ;
    dReal result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dSurfaceParameters **)&jarg1; 
    result = (dReal) ((arg1)->soft_cfm);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_set_1dSurfaceParameters_1motion1(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2) {
    dSurfaceParameters *arg1 = (dSurfaceParameters *) 0 ;
    dReal arg2 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dSurfaceParameters **)&jarg1; 
    arg2 = (dReal)jarg2; 
    if (arg1) (arg1)->motion1 = arg2;
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_get_1dSurfaceParameters_1motion1(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dSurfaceParameters *arg1 = (dSurfaceParameters *) 0 ;
    dReal result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dSurfaceParameters **)&jarg1; 
    result = (dReal) ((arg1)->motion1);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_set_1dSurfaceParameters_1motion2(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2) {
    dSurfaceParameters *arg1 = (dSurfaceParameters *) 0 ;
    dReal arg2 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dSurfaceParameters **)&jarg1; 
    arg2 = (dReal)jarg2; 
    if (arg1) (arg1)->motion2 = arg2;
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_get_1dSurfaceParameters_1motion2(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dSurfaceParameters *arg1 = (dSurfaceParameters *) 0 ;
    dReal result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dSurfaceParameters **)&jarg1; 
    result = (dReal) ((arg1)->motion2);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_set_1dSurfaceParameters_1slip1(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2) {
    dSurfaceParameters *arg1 = (dSurfaceParameters *) 0 ;
    dReal arg2 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dSurfaceParameters **)&jarg1; 
    arg2 = (dReal)jarg2; 
    if (arg1) (arg1)->slip1 = arg2;
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_get_1dSurfaceParameters_1slip1(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dSurfaceParameters *arg1 = (dSurfaceParameters *) 0 ;
    dReal result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dSurfaceParameters **)&jarg1; 
    result = (dReal) ((arg1)->slip1);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_set_1dSurfaceParameters_1slip2(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2) {
    dSurfaceParameters *arg1 = (dSurfaceParameters *) 0 ;
    dReal arg2 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dSurfaceParameters **)&jarg1; 
    arg2 = (dReal)jarg2; 
    if (arg1) (arg1)->slip2 = arg2;
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_get_1dSurfaceParameters_1slip2(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dSurfaceParameters *arg1 = (dSurfaceParameters *) 0 ;
    dReal result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dSurfaceParameters **)&jarg1; 
    result = (dReal) ((arg1)->slip2);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_new_1dSurfaceParameters(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    dSurfaceParameters *result;
    
    (void)jenv;
    (void)jcls;
    result = (dSurfaceParameters *)new dSurfaceParameters();
    
    *(dSurfaceParameters **)&jresult = result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_delete_1dSurfaceParameters(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    dSurfaceParameters *arg1 = (dSurfaceParameters *) 0 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dSurfaceParameters **)&jarg1; 
    delete arg1;
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_set_1dContactGeom_1pos(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dContactGeom *arg1 = (dContactGeom *) 0 ;
    dReal *arg2 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dContactGeom **)&jarg1; 
    arg2 = *(dReal **)&jarg2; 
    {
        int ii;
        dReal *b = (dReal *) arg1->pos;
        for (ii = 0; ii < 4; ii++) b[ii] = *((dReal *) arg2 + ii);
    }
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_get_1dContactGeom_1pos(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dContactGeom *arg1 = (dContactGeom *) 0 ;
    dReal *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dContactGeom **)&jarg1; 
    result = (dReal *)(dReal *) ((arg1)->pos);
    
    *(dReal **)&jresult = result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_set_1dContactGeom_1normal(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dContactGeom *arg1 = (dContactGeom *) 0 ;
    dReal *arg2 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dContactGeom **)&jarg1; 
    arg2 = *(dReal **)&jarg2; 
    {
        int ii;
        dReal *b = (dReal *) arg1->normal;
        for (ii = 0; ii < 4; ii++) b[ii] = *((dReal *) arg2 + ii);
    }
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_get_1dContactGeom_1normal(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dContactGeom *arg1 = (dContactGeom *) 0 ;
    dReal *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dContactGeom **)&jarg1; 
    result = (dReal *)(dReal *) ((arg1)->normal);
    
    *(dReal **)&jresult = result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_set_1dContactGeom_1depth(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2) {
    dContactGeom *arg1 = (dContactGeom *) 0 ;
    dReal arg2 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dContactGeom **)&jarg1; 
    arg2 = (dReal)jarg2; 
    if (arg1) (arg1)->depth = arg2;
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_get_1dContactGeom_1depth(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dContactGeom *arg1 = (dContactGeom *) 0 ;
    dReal result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dContactGeom **)&jarg1; 
    result = (dReal) ((arg1)->depth);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_set_1dContactGeom_1g1(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dContactGeom *arg1 = (dContactGeom *) 0 ;
    dGeomID arg2 ;
    dGeomID *argp2 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dContactGeom **)&jarg1; 
    argp2 = *(dGeomID **)&jarg2; 
    if (!argp2) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg2 = *argp2; 
    if (arg1) (arg1)->g1 = arg2;
    
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_get_1dContactGeom_1g1(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dContactGeom *arg1 = (dContactGeom *) 0 ;
    dGeomID result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dContactGeom **)&jarg1; 
    result =  ((arg1)->g1);
    
    *(dGeomID **)&jresult = new dGeomID((dGeomID &)result); 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_set_1dContactGeom_1g2(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dContactGeom *arg1 = (dContactGeom *) 0 ;
    dGeomID arg2 ;
    dGeomID *argp2 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dContactGeom **)&jarg1; 
    argp2 = *(dGeomID **)&jarg2; 
    if (!argp2) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg2 = *argp2; 
    if (arg1) (arg1)->g2 = arg2;
    
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_get_1dContactGeom_1g2(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dContactGeom *arg1 = (dContactGeom *) 0 ;
    dGeomID result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dContactGeom **)&jarg1; 
    result =  ((arg1)->g2);
    
    *(dGeomID **)&jresult = new dGeomID((dGeomID &)result); 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_new_1dContactGeom(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    dContactGeom *result;
    
    (void)jenv;
    (void)jcls;
    result = (dContactGeom *)new dContactGeom();
    
    *(dContactGeom **)&jresult = result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_delete_1dContactGeom(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    dContactGeom *arg1 = (dContactGeom *) 0 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dContactGeom **)&jarg1; 
    delete arg1;
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_set_1dContact_1surface(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dContact *arg1 = (dContact *) 0 ;
    dSurfaceParameters *arg2 = (dSurfaceParameters *) 0 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dContact **)&jarg1; 
    arg2 = *(dSurfaceParameters **)&jarg2; 
    if (arg1) (arg1)->surface = *arg2;
    
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_get_1dContact_1surface(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dContact *arg1 = (dContact *) 0 ;
    dSurfaceParameters *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dContact **)&jarg1; 
    result = (dSurfaceParameters *)& ((arg1)->surface);
    
    *(dSurfaceParameters **)&jresult = result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_set_1dContact_1geom(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dContact *arg1 = (dContact *) 0 ;
    dContactGeom *arg2 = (dContactGeom *) 0 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dContact **)&jarg1; 
    arg2 = *(dContactGeom **)&jarg2; 
    if (arg1) (arg1)->geom = *arg2;
    
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_get_1dContact_1geom(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dContact *arg1 = (dContact *) 0 ;
    dContactGeom *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dContact **)&jarg1; 
    result = (dContactGeom *)& ((arg1)->geom);
    
    *(dContactGeom **)&jresult = result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_set_1dContact_1fdir1(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dContact *arg1 = (dContact *) 0 ;
    dReal *arg2 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dContact **)&jarg1; 
    arg2 = *(dReal **)&jarg2; 
    {
        int ii;
        dReal *b = (dReal *) arg1->fdir1;
        for (ii = 0; ii < 4; ii++) b[ii] = *((dReal *) arg2 + ii);
    }
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_get_1dContact_1fdir1(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dContact *arg1 = (dContact *) 0 ;
    dReal *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dContact **)&jarg1; 
    result = (dReal *)(dReal *) ((arg1)->fdir1);
    
    *(dReal **)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_new_1dContact(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    dContact *result;
    
    (void)jenv;
    (void)jcls;
    result = (dContact *)new dContact();
    
    *(dContact **)&jresult = result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_delete_1dContact(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    dContact *arg1 = (dContact *) 0 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dContact **)&jarg1; 
    delete arg1;
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dMassSetZero(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    dMass *arg1 = (dMass *) 0 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dMass **)&jarg1; 
    dMassSetZero(arg1);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dMassSetParameters(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4, jfloat jarg5, jfloat jarg6, jfloat jarg7, jfloat jarg8, jfloat jarg9, jfloat jarg10, jfloat jarg11) {
    dMass *arg1 = (dMass *) 0 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dReal arg5 ;
    dReal arg6 ;
    dReal arg7 ;
    dReal arg8 ;
    dReal arg9 ;
    dReal arg10 ;
    dReal arg11 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dMass **)&jarg1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    arg5 = (dReal)jarg5; 
    arg6 = (dReal)jarg6; 
    arg7 = (dReal)jarg7; 
    arg8 = (dReal)jarg8; 
    arg9 = (dReal)jarg9; 
    arg10 = (dReal)jarg10; 
    arg11 = (dReal)jarg11; 
    dMassSetParameters(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dMassSetSphere(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3) {
    dMass *arg1 = (dMass *) 0 ;
    dReal arg2 ;
    dReal arg3 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dMass **)&jarg1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    dMassSetSphere(arg1,arg2,arg3);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dMassSetSphereTotal(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3) {
    dMass *arg1 = (dMass *) 0 ;
    dReal arg2 ;
    dReal arg3 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dMass **)&jarg1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    dMassSetSphereTotal(arg1,arg2,arg3);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dMassSetCapsule(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jint jarg3, jfloat jarg4, jfloat jarg5) {
    dMass *arg1 = (dMass *) 0 ;
    dReal arg2 ;
    int arg3 ;
    dReal arg4 ;
    dReal arg5 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dMass **)&jarg1; 
    arg2 = (dReal)jarg2; 
    arg3 = (int)jarg3; 
    arg4 = (dReal)jarg4; 
    arg5 = (dReal)jarg5; 
    dMassSetCapsule(arg1,arg2,arg3,arg4,arg5);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dMassSetCapsuleTotal(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jint jarg3, jfloat jarg4, jfloat jarg5) {
    dMass *arg1 = (dMass *) 0 ;
    dReal arg2 ;
    int arg3 ;
    dReal arg4 ;
    dReal arg5 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dMass **)&jarg1; 
    arg2 = (dReal)jarg2; 
    arg3 = (int)jarg3; 
    arg4 = (dReal)jarg4; 
    arg5 = (dReal)jarg5; 
    dMassSetCapsuleTotal(arg1,arg2,arg3,arg4,arg5);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dMassSetCylinder(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jint jarg3, jfloat jarg4, jfloat jarg5) {
    dMass *arg1 = (dMass *) 0 ;
    dReal arg2 ;
    int arg3 ;
    dReal arg4 ;
    dReal arg5 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dMass **)&jarg1; 
    arg2 = (dReal)jarg2; 
    arg3 = (int)jarg3; 
    arg4 = (dReal)jarg4; 
    arg5 = (dReal)jarg5; 
    dMassSetCylinder(arg1,arg2,arg3,arg4,arg5);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dMassSetCylinderTotal(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jint jarg3, jfloat jarg4, jfloat jarg5) {
    dMass *arg1 = (dMass *) 0 ;
    dReal arg2 ;
    int arg3 ;
    dReal arg4 ;
    dReal arg5 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dMass **)&jarg1; 
    arg2 = (dReal)jarg2; 
    arg3 = (int)jarg3; 
    arg4 = (dReal)jarg4; 
    arg5 = (dReal)jarg5; 
    dMassSetCylinderTotal(arg1,arg2,arg3,arg4,arg5);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dMassSetBox(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4, jfloat jarg5) {
    dMass *arg1 = (dMass *) 0 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dReal arg5 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dMass **)&jarg1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    arg5 = (dReal)jarg5; 
    dMassSetBox(arg1,arg2,arg3,arg4,arg5);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dMassSetBoxTotal(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4, jfloat jarg5) {
    dMass *arg1 = (dMass *) 0 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dReal arg5 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dMass **)&jarg1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    arg5 = (dReal)jarg5; 
    dMassSetBoxTotal(arg1,arg2,arg3,arg4,arg5);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dMassAdjust(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2) {
    dMass *arg1 = (dMass *) 0 ;
    dReal arg2 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dMass **)&jarg1; 
    arg2 = (dReal)jarg2; 
    dMassAdjust(arg1,arg2);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dMassTranslate(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
    dMass *arg1 = (dMass *) 0 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dMass **)&jarg1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    dMassTranslate(arg1,arg2,arg3,arg4);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dMassRotate(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dMass *arg1 = (dMass *) 0 ;
    dReal *arg2 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dMass **)&jarg1; 
    arg2 = *(dReal **)&jarg2; 
    dMassRotate(arg1,arg2);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dMassAdd(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dMass *arg1 = (dMass *) 0 ;
    dMass *arg2 = (dMass *) 0 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dMass **)&jarg1; 
    arg2 = *(dMass **)&jarg2; 
    dMassAdd(arg1,(dMass const *)arg2);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_set_1dMass_1mass(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2) {
    dMass *arg1 = (dMass *) 0 ;
    dReal arg2 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dMass **)&jarg1; 
    arg2 = (dReal)jarg2; 
    if (arg1) (arg1)->mass = arg2;
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_get_1dMass_1mass(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dMass *arg1 = (dMass *) 0 ;
    dReal result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dMass **)&jarg1; 
    result = (dReal) ((arg1)->mass);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_set_1dMass_1c(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dMass *arg1 = (dMass *) 0 ;
    dReal *arg2 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dMass **)&jarg1; 
    arg2 = *(dReal **)&jarg2; 
    {
        int ii;
        dReal *b = (dReal *) arg1->c;
        for (ii = 0; ii < 4; ii++) b[ii] = *((dReal *) arg2 + ii);
    }
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_get_1dMass_1c(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dMass *arg1 = (dMass *) 0 ;
    dReal *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dMass **)&jarg1; 
    result = (dReal *)(dReal *) ((arg1)->c);
    
    *(dReal **)&jresult = result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_set_1dMass_1I(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dMass *arg1 = (dMass *) 0 ;
    dReal *arg2 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dMass **)&jarg1; 
    arg2 = *(dReal **)&jarg2; 
    {
        int ii;
        dReal *b = (dReal *) arg1->I;
        for (ii = 0; ii < 4*3; ii++) b[ii] = *((dReal *) arg2 + ii);
    }
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_get_1dMass_1I(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dMass *arg1 = (dMass *) 0 ;
    dReal *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dMass **)&jarg1; 
    result = (dReal *)(dReal *) ((arg1)->I);
    
    *(dReal **)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dMass_1getCPtr(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dMass *arg1 = (dMass *) 0 ;
    dMass *result;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dMass **)&jarg1; 
    result = (dMass *)dMass_getCPtr(arg1);
    
    *(dMass **)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_new_1dMass(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    dMass *result;
    
    (void)jenv;
    (void)jcls;
    result = (dMass *)new dMass();
    
    *(dMass **)&jresult = result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_delete_1dMass(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    dMass *arg1 = (dMass *) 0 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dMass **)&jarg1; 
    delete arg1;
    
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dWorldCreate(JNIEnv *jenv, jclass jcls) {
    jlong jresult = 0 ;
    dWorldID result;
    
    (void)jenv;
    (void)jcls;
    result = dWorldCreate();
    
    *(dWorldID **)&jresult = new dWorldID((dWorldID &)result); 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dWorldDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    dWorldID arg1 ;
    dWorldID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return ;
    }
    arg1 = *argp1; 
    dWorldDestroy(arg1);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dWorldSetGravity(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
    dWorldID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dWorldID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    dWorldSetGravity(arg1,arg2,arg3,arg4);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dWorldGetGravity(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dWorldID arg1 ;
    dReal *arg2 ;
    dWorldID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(dReal **)&jarg2; 
    dWorldGetGravity(arg1,arg2);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dWorldSetERP(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2) {
    dWorldID arg1 ;
    dReal arg2 ;
    dWorldID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    dWorldSetERP(arg1,arg2);
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dWorldGetERP(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dWorldID arg1 ;
    dReal result;
    dWorldID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dReal)dWorldGetERP(arg1);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dWorldSetCFM(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2) {
    dWorldID arg1 ;
    dReal arg2 ;
    dWorldID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    dWorldSetCFM(arg1,arg2);
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dWorldGetCFM(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dWorldID arg1 ;
    dReal result;
    dWorldID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dReal)dWorldGetCFM(arg1);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dWorldStep(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2) {
    dWorldID arg1 ;
    dReal arg2 ;
    dWorldID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    dWorldStep(arg1,arg2);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dWorldImpulseToForce(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4, jfloat jarg5, jlong jarg6) {
    dWorldID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dReal arg5 ;
    dReal *arg6 ;
    dWorldID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    arg5 = (dReal)jarg5; 
    arg6 = *(dReal **)&jarg6; 
    dWorldImpulseToForce(arg1,arg2,arg3,arg4,arg5,arg6);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dWorldSetAutoDisableFlag(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    dWorldID arg1 ;
    int arg2 ;
    dWorldID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    dWorldSetAutoDisableFlag(arg1,arg2);
    
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_dWorldGetAutoDisableFlag(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    dWorldID arg1 ;
    int result;
    dWorldID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return 0;
    }
    arg1 = *argp1; 
    result = (int)dWorldGetAutoDisableFlag(arg1);
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dWorldSetAutoDisableLinearThreshold(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2) {
    dWorldID arg1 ;
    dReal arg2 ;
    dWorldID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    dWorldSetAutoDisableLinearThreshold(arg1,arg2);
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dWorldGetAutoDisableLinearThreshold(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dWorldID arg1 ;
    dReal result;
    dWorldID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dReal)dWorldGetAutoDisableLinearThreshold(arg1);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dWorldSetAutoDisableAngularThreshold(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2) {
    dWorldID arg1 ;
    dReal arg2 ;
    dWorldID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    dWorldSetAutoDisableAngularThreshold(arg1,arg2);
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dWorldGetAutoDisableAngularThreshold(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dWorldID arg1 ;
    dReal result;
    dWorldID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dReal)dWorldGetAutoDisableAngularThreshold(arg1);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dWorldSetAutoDisableSteps(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    dWorldID arg1 ;
    int arg2 ;
    dWorldID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    dWorldSetAutoDisableSteps(arg1,arg2);
    
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_dWorldGetAutoDisableSteps(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    dWorldID arg1 ;
    int result;
    dWorldID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return 0;
    }
    arg1 = *argp1; 
    result = (int)dWorldGetAutoDisableSteps(arg1);
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dWorldSetAutoDisableTime(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2) {
    dWorldID arg1 ;
    dReal arg2 ;
    dWorldID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    dWorldSetAutoDisableTime(arg1,arg2);
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dWorldGetAutoDisableTime(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dWorldID arg1 ;
    dReal result;
    dWorldID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dReal)dWorldGetAutoDisableTime(arg1);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dWorldSetContactMaxCorrectingVel(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2) {
    dWorldID arg1 ;
    dReal arg2 ;
    dWorldID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    dWorldSetContactMaxCorrectingVel(arg1,arg2);
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dWorldGetContactMaxCorrectingVel(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dWorldID arg1 ;
    dReal result;
    dWorldID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dReal)dWorldGetContactMaxCorrectingVel(arg1);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dWorldSetContactSurfaceLayer(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2) {
    dWorldID arg1 ;
    dReal arg2 ;
    dWorldID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    dWorldSetContactSurfaceLayer(arg1,arg2);
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dWorldGetContactSurfaceLayer(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dWorldID arg1 ;
    dReal result;
    dWorldID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dReal)dWorldGetContactSurfaceLayer(arg1);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dWorldStepFast1(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jint jarg3) {
    dWorldID arg1 ;
    dReal arg2 ;
    int arg3 ;
    dWorldID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (int)jarg3; 
    dWorldStepFast1(arg1,arg2,arg3);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dWorldSetAutoEnableDepthSF1(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    dWorldID arg1 ;
    int arg2 ;
    dWorldID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    dWorldSetAutoEnableDepthSF1(arg1,arg2);
    
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_dWorldGetAutoEnableDepthSF1(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    dWorldID arg1 ;
    int result;
    dWorldID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return 0;
    }
    arg1 = *argp1; 
    result = (int)dWorldGetAutoEnableDepthSF1(arg1);
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dWorldQuickStep(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2) {
    dWorldID arg1 ;
    dReal arg2 ;
    dWorldID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    dWorldQuickStep(arg1,arg2);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dWorldSetQuickStepNumIterations(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    dWorldID arg1 ;
    int arg2 ;
    dWorldID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    dWorldSetQuickStepNumIterations(arg1,arg2);
    
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_dWorldGetQuickStepNumIterations(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    dWorldID arg1 ;
    int result;
    dWorldID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return 0;
    }
    arg1 = *argp1; 
    result = (int)dWorldGetQuickStepNumIterations(arg1);
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dBodyCreate(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dWorldID arg1 ;
    dBodyID result;
    dWorldID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return 0;
    }
    arg1 = *argp1; 
    result = dBodyCreate(arg1);
    
    *(dBodyID **)&jresult = new dBodyID((dBodyID &)result); 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodyDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    dBodyID arg1 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    dBodyDestroy(arg1);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodySetData(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dBodyID arg1 ;
    void *arg2 = (void *) 0 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(void **)&jarg2; 
    dBodySetData(arg1,arg2);
    
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dBodyGetData(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dBodyID arg1 ;
    void *result;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return 0;
    }
    arg1 = *argp1; 
    result = (void *)dBodyGetData(arg1);
    
    *(void **)&jresult = result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodySetPosition(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
    dBodyID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    dBodySetPosition(arg1,arg2,arg3,arg4);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodySetRotation(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dBodyID arg1 ;
    dReal *arg2 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(dReal **)&jarg2; 
    dBodySetRotation(arg1,arg2);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodySetQuaternion(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dBodyID arg1 ;
    dReal *arg2 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(dReal **)&jarg2; 
    dBodySetQuaternion(arg1,arg2);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodySetLinearVel(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
    dBodyID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    dBodySetLinearVel(arg1,arg2,arg3,arg4);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodySetAngularVel(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
    dBodyID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    dBodySetAngularVel(arg1,arg2,arg3,arg4);
    
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dBodyGetPosition(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dBodyID arg1 ;
    dReal *result;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dReal *)dBodyGetPosition(arg1);
    
    *(dReal **)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dBodyGetRotation(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dBodyID arg1 ;
    dReal *result;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dReal *)dBodyGetRotation(arg1);
    
    *(dReal **)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dBodyGetQuaternion(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dBodyID arg1 ;
    dReal *result;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dReal *)dBodyGetQuaternion(arg1);
    
    *(dReal **)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dBodyGetLinearVel(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dBodyID arg1 ;
    dReal *result;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dReal *)dBodyGetLinearVel(arg1);
    
    *(dReal **)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dBodyGetAngularVel(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dBodyID arg1 ;
    dReal *result;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dReal *)dBodyGetAngularVel(arg1);
    
    *(dReal **)&jresult = result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodySetMass(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dBodyID arg1 ;
    dMass *arg2 = (dMass *) 0 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(dMass **)&jarg2; 
    dBodySetMass(arg1,(dMass const *)arg2);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodyGetMass(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dBodyID arg1 ;
    dMass *arg2 = (dMass *) 0 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(dMass **)&jarg2; 
    dBodyGetMass(arg1,arg2);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodyAddForce(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
    dBodyID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    dBodyAddForce(arg1,arg2,arg3,arg4);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodyAddTorque(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
    dBodyID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    dBodyAddTorque(arg1,arg2,arg3,arg4);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodyAddRelForce(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
    dBodyID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    dBodyAddRelForce(arg1,arg2,arg3,arg4);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodyAddRelTorque(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
    dBodyID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    dBodyAddRelTorque(arg1,arg2,arg3,arg4);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodyAddForceAtPos(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4, jfloat jarg5, jfloat jarg6, jfloat jarg7) {
    dBodyID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dReal arg5 ;
    dReal arg6 ;
    dReal arg7 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    arg5 = (dReal)jarg5; 
    arg6 = (dReal)jarg6; 
    arg7 = (dReal)jarg7; 
    dBodyAddForceAtPos(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodyAddForceAtRelPos(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4, jfloat jarg5, jfloat jarg6, jfloat jarg7) {
    dBodyID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dReal arg5 ;
    dReal arg6 ;
    dReal arg7 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    arg5 = (dReal)jarg5; 
    arg6 = (dReal)jarg6; 
    arg7 = (dReal)jarg7; 
    dBodyAddForceAtRelPos(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodyAddRelForceAtPos(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4, jfloat jarg5, jfloat jarg6, jfloat jarg7) {
    dBodyID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dReal arg5 ;
    dReal arg6 ;
    dReal arg7 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    arg5 = (dReal)jarg5; 
    arg6 = (dReal)jarg6; 
    arg7 = (dReal)jarg7; 
    dBodyAddRelForceAtPos(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodyAddRelForceAtRelPos(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4, jfloat jarg5, jfloat jarg6, jfloat jarg7) {
    dBodyID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dReal arg5 ;
    dReal arg6 ;
    dReal arg7 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    arg5 = (dReal)jarg5; 
    arg6 = (dReal)jarg6; 
    arg7 = (dReal)jarg7; 
    dBodyAddRelForceAtRelPos(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
    
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dBodyGetForce(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dBodyID arg1 ;
    dReal *result;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dReal *)dBodyGetForce(arg1);
    
    *(dReal **)&jresult = result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dBodyGetTorque(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dBodyID arg1 ;
    dReal *result;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dReal *)dBodyGetTorque(arg1);
    
    *(dReal **)&jresult = result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodySetForce(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
    dBodyID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    dBodySetForce(arg1,arg2,arg3,arg4);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodySetTorque(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
    dBodyID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    dBodySetTorque(arg1,arg2,arg3,arg4);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodyGetRelPointPos(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4, jlong jarg5) {
    dBodyID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dReal *arg5 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    arg5 = *(dReal **)&jarg5; 
    dBodyGetRelPointPos(arg1,arg2,arg3,arg4,arg5);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodyGetRelPointVel(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4, jlong jarg5) {
    dBodyID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dReal *arg5 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    arg5 = *(dReal **)&jarg5; 
    dBodyGetRelPointVel(arg1,arg2,arg3,arg4,arg5);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodyGetPointVel(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4, jlong jarg5) {
    dBodyID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dReal *arg5 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    arg5 = *(dReal **)&jarg5; 
    dBodyGetPointVel(arg1,arg2,arg3,arg4,arg5);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodyGetPosRelPoint(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4, jlong jarg5) {
    dBodyID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dReal *arg5 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    arg5 = *(dReal **)&jarg5; 
    dBodyGetPosRelPoint(arg1,arg2,arg3,arg4,arg5);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodyVectorToWorld(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4, jlong jarg5) {
    dBodyID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dReal *arg5 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    arg5 = *(dReal **)&jarg5; 
    dBodyVectorToWorld(arg1,arg2,arg3,arg4,arg5);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodyVectorFromWorld(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4, jlong jarg5) {
    dBodyID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dReal *arg5 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    arg5 = *(dReal **)&jarg5; 
    dBodyVectorFromWorld(arg1,arg2,arg3,arg4,arg5);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodySetFiniteRotationMode(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    dBodyID arg1 ;
    int arg2 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    dBodySetFiniteRotationMode(arg1,arg2);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodySetFiniteRotationAxis(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
    dBodyID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    dBodySetFiniteRotationAxis(arg1,arg2,arg3,arg4);
    
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_dBodyGetFiniteRotationMode(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    dBodyID arg1 ;
    int result;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return 0;
    }
    arg1 = *argp1; 
    result = (int)dBodyGetFiniteRotationMode(arg1);
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodyGetFiniteRotationAxis(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dBodyID arg1 ;
    dReal *arg2 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(dReal **)&jarg2; 
    dBodyGetFiniteRotationAxis(arg1,arg2);
    
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_dBodyGetNumJoints(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    dBodyID arg1 ;
    int result;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return 0;
    }
    arg1 = *argp1; 
    result = (int)dBodyGetNumJoints(arg1);
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dBodyGetJoint(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jlong jresult = 0 ;
    dBodyID arg1 ;
    int arg2 ;
    dJointID result;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return 0;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    result = dBodyGetJoint(arg1,arg2);
    
    *(dJointID **)&jresult = new dJointID((dJointID &)result); 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodyEnable(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    dBodyID arg1 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    dBodyEnable(arg1);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodyDisable(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    dBodyID arg1 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    dBodyDisable(arg1);
    
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_dBodyIsEnabled(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    dBodyID arg1 ;
    int result;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return 0;
    }
    arg1 = *argp1; 
    result = (int)dBodyIsEnabled(arg1);
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodySetGravityMode(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    dBodyID arg1 ;
    int arg2 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    dBodySetGravityMode(arg1,arg2);
    
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_dBodyGetGravityMode(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    dBodyID arg1 ;
    int result;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return 0;
    }
    arg1 = *argp1; 
    result = (int)dBodyGetGravityMode(arg1);
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodySetAutoDisableDefaults(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    dBodyID arg1 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    dBodySetAutoDisableDefaults(arg1);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodySetAutoDisableFlag(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    dBodyID arg1 ;
    int arg2 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    dBodySetAutoDisableFlag(arg1,arg2);
    
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_dBodyGetAutoDisableFlag(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    dBodyID arg1 ;
    int result;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return 0;
    }
    arg1 = *argp1; 
    result = (int)dBodyGetAutoDisableFlag(arg1);
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodySetAutoDisableLinearThreshold(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2) {
    dBodyID arg1 ;
    dReal arg2 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    dBodySetAutoDisableLinearThreshold(arg1,arg2);
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dBodyGetAutoDisableLinearThreshold(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dBodyID arg1 ;
    dReal result;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dReal)dBodyGetAutoDisableLinearThreshold(arg1);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodySetAutoDisableAngularThreshold(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2) {
    dBodyID arg1 ;
    dReal arg2 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    dBodySetAutoDisableAngularThreshold(arg1,arg2);
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dBodyGetAutoDisableAngularThreshold(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dBodyID arg1 ;
    dReal result;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dReal)dBodyGetAutoDisableAngularThreshold(arg1);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodySetAutoDisableSteps(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    dBodyID arg1 ;
    int arg2 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    dBodySetAutoDisableSteps(arg1,arg2);
    
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_dBodyGetAutoDisableSteps(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    dBodyID arg1 ;
    int result;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return 0;
    }
    arg1 = *argp1; 
    result = (int)dBodyGetAutoDisableSteps(arg1);
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dBodySetAutoDisableTime(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2) {
    dBodyID arg1 ;
    dReal arg2 ;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    dBodySetAutoDisableTime(arg1,arg2);
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dBodyGetAutoDisableTime(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dBodyID arg1 ;
    dReal result;
    dBodyID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dReal)dBodyGetAutoDisableTime(arg1);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dJointCreateBall(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    dWorldID arg1 ;
    dJointGroupID arg2 ;
    dJointID result;
    dWorldID *argp1 ;
    dJointGroupID *argp2 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return 0;
    }
    arg1 = *argp1; 
    argp2 = *(dJointGroupID **)&jarg2; 
    if (!argp2) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointGroupID");
        return 0;
    }
    arg2 = *argp2; 
    result = dJointCreateBall(arg1,arg2);
    
    *(dJointID **)&jresult = new dJointID((dJointID &)result); 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dJointCreateHinge(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    dWorldID arg1 ;
    dJointGroupID arg2 ;
    dJointID result;
    dWorldID *argp1 ;
    dJointGroupID *argp2 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return 0;
    }
    arg1 = *argp1; 
    argp2 = *(dJointGroupID **)&jarg2; 
    if (!argp2) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointGroupID");
        return 0;
    }
    arg2 = *argp2; 
    result = dJointCreateHinge(arg1,arg2);
    
    *(dJointID **)&jresult = new dJointID((dJointID &)result); 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dJointCreateSlider(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    dWorldID arg1 ;
    dJointGroupID arg2 ;
    dJointID result;
    dWorldID *argp1 ;
    dJointGroupID *argp2 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return 0;
    }
    arg1 = *argp1; 
    argp2 = *(dJointGroupID **)&jarg2; 
    if (!argp2) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointGroupID");
        return 0;
    }
    arg2 = *argp2; 
    result = dJointCreateSlider(arg1,arg2);
    
    *(dJointID **)&jresult = new dJointID((dJointID &)result); 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dJointCreateContact(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
    jlong jresult = 0 ;
    dWorldID arg1 ;
    dJointGroupID arg2 ;
    dContact *arg3 = (dContact *) 0 ;
    dJointID result;
    dWorldID *argp1 ;
    dJointGroupID *argp2 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return 0;
    }
    arg1 = *argp1; 
    argp2 = *(dJointGroupID **)&jarg2; 
    if (!argp2) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointGroupID");
        return 0;
    }
    arg2 = *argp2; 
    arg3 = *(dContact **)&jarg3; 
    result = dJointCreateContact(arg1,arg2,(dContact const *)arg3);
    
    *(dJointID **)&jresult = new dJointID((dJointID &)result); 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dJointCreateHinge2(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    dWorldID arg1 ;
    dJointGroupID arg2 ;
    dJointID result;
    dWorldID *argp1 ;
    dJointGroupID *argp2 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return 0;
    }
    arg1 = *argp1; 
    argp2 = *(dJointGroupID **)&jarg2; 
    if (!argp2) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointGroupID");
        return 0;
    }
    arg2 = *argp2; 
    result = dJointCreateHinge2(arg1,arg2);
    
    *(dJointID **)&jresult = new dJointID((dJointID &)result); 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dJointCreateUniversal(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    dWorldID arg1 ;
    dJointGroupID arg2 ;
    dJointID result;
    dWorldID *argp1 ;
    dJointGroupID *argp2 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return 0;
    }
    arg1 = *argp1; 
    argp2 = *(dJointGroupID **)&jarg2; 
    if (!argp2) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointGroupID");
        return 0;
    }
    arg2 = *argp2; 
    result = dJointCreateUniversal(arg1,arg2);
    
    *(dJointID **)&jresult = new dJointID((dJointID &)result); 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dJointCreateFixed(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    dWorldID arg1 ;
    dJointGroupID arg2 ;
    dJointID result;
    dWorldID *argp1 ;
    dJointGroupID *argp2 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return 0;
    }
    arg1 = *argp1; 
    argp2 = *(dJointGroupID **)&jarg2; 
    if (!argp2) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointGroupID");
        return 0;
    }
    arg2 = *argp2; 
    result = dJointCreateFixed(arg1,arg2);
    
    *(dJointID **)&jresult = new dJointID((dJointID &)result); 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dJointCreateNull(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    dWorldID arg1 ;
    dJointGroupID arg2 ;
    dJointID result;
    dWorldID *argp1 ;
    dJointGroupID *argp2 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return 0;
    }
    arg1 = *argp1; 
    argp2 = *(dJointGroupID **)&jarg2; 
    if (!argp2) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointGroupID");
        return 0;
    }
    arg2 = *argp2; 
    result = dJointCreateNull(arg1,arg2);
    
    *(dJointID **)&jresult = new dJointID((dJointID &)result); 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dJointCreateAMotor(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jlong jresult = 0 ;
    dWorldID arg1 ;
    dJointGroupID arg2 ;
    dJointID result;
    dWorldID *argp1 ;
    dJointGroupID *argp2 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dWorldID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dWorldID");
        return 0;
    }
    arg1 = *argp1; 
    argp2 = *(dJointGroupID **)&jarg2; 
    if (!argp2) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointGroupID");
        return 0;
    }
    arg2 = *argp2; 
    result = dJointCreateAMotor(arg1,arg2);
    
    *(dJointID **)&jresult = new dJointID((dJointID &)result); 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    dJointID arg1 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    dJointDestroy(arg1);
    
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dJointGroupCreate(JNIEnv *jenv, jclass jcls, jint jarg1) {
    jlong jresult = 0 ;
    int arg1 ;
    dJointGroupID result;
    
    (void)jenv;
    (void)jcls;
    arg1 = (int)jarg1; 
    result = dJointGroupCreate(arg1);
    
    *(dJointGroupID **)&jresult = new dJointGroupID((dJointGroupID &)result); 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointGroupDestroy(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    dJointGroupID arg1 ;
    dJointGroupID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointGroupID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointGroupID");
        return ;
    }
    arg1 = *argp1; 
    dJointGroupDestroy(arg1);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointGroupEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    dJointGroupID arg1 ;
    dJointGroupID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointGroupID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointGroupID");
        return ;
    }
    arg1 = *argp1; 
    dJointGroupEmpty(arg1);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointAttach(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
    dJointID arg1 ;
    dBodyID arg2 ;
    dBodyID arg3 ;
    dJointID *argp1 ;
    dBodyID *argp2 ;
    dBodyID *argp3 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    argp2 = *(dBodyID **)&jarg2; 
    if (!argp2) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg2 = *argp2; 
    argp3 = *(dBodyID **)&jarg3; 
    if (!argp3) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return ;
    }
    arg3 = *argp3; 
    dJointAttach(arg1,arg2,arg3);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointSetData(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dJointID arg1 ;
    void *arg2 = (void *) 0 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(void **)&jarg2; 
    dJointSetData(arg1,arg2);
    
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dJointGetData(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dJointID arg1 ;
    void *result;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return 0;
    }
    arg1 = *argp1; 
    result = (void *)dJointGetData(arg1);
    
    *(void **)&jresult = result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_dJointGetType(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    dJointID arg1 ;
    int result;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return 0;
    }
    arg1 = *argp1; 
    result = (int)dJointGetType(arg1);
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dJointGetBody(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jlong jresult = 0 ;
    dJointID arg1 ;
    int arg2 ;
    dBodyID result;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return 0;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    result = dJointGetBody(arg1,arg2);
    
    *(dBodyID **)&jresult = new dBodyID((dBodyID &)result); 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointSetFeedback(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dJointID arg1 ;
    dJointFeedback *arg2 = (dJointFeedback *) 0 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(dJointFeedback **)&jarg2; 
    dJointSetFeedback(arg1,arg2);
    
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dJointGetFeedback(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong jresult = 0 ;
    dJointID arg1 ;
    dJointFeedback *result;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dJointFeedback *)dJointGetFeedback(arg1);
    
    *(dJointFeedback **)&jresult = result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointSetBallAnchor(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
    dJointID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    dJointSetBallAnchor(arg1,arg2,arg3,arg4);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointSetBallParam(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jfloat jarg3) {
    dJointID arg1 ;
    int arg2 ;
    dReal arg3 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    arg3 = (dReal)jarg3; 
    dJointSetBallParam(arg1,arg2,arg3);
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dJointGetBallParam(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jfloat jresult = 0 ;
    dJointID arg1 ;
    int arg2 ;
    dReal result;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return 0;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    result = (dReal)dJointGetBallParam(arg1,arg2);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointSetHingeAnchor(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
    dJointID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    dJointSetHingeAnchor(arg1,arg2,arg3,arg4);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointSetHingeAxis(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
    dJointID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    dJointSetHingeAxis(arg1,arg2,arg3,arg4);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointSetHingeParam(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jfloat jarg3) {
    dJointID arg1 ;
    int arg2 ;
    dReal arg3 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    arg3 = (dReal)jarg3; 
    dJointSetHingeParam(arg1,arg2,arg3);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointSetSliderAxis(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
    dJointID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    dJointSetSliderAxis(arg1,arg2,arg3,arg4);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointSetSliderParam(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jfloat jarg3) {
    dJointID arg1 ;
    int arg2 ;
    dReal arg3 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    arg3 = (dReal)jarg3; 
    dJointSetSliderParam(arg1,arg2,arg3);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointSetHinge2Anchor(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
    dJointID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    dJointSetHinge2Anchor(arg1,arg2,arg3,arg4);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointSetHinge2Axis1(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
    dJointID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    dJointSetHinge2Axis1(arg1,arg2,arg3,arg4);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointSetHinge2Axis2(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
    dJointID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    dJointSetHinge2Axis2(arg1,arg2,arg3,arg4);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointSetHinge2Param(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jfloat jarg3) {
    dJointID arg1 ;
    int arg2 ;
    dReal arg3 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    arg3 = (dReal)jarg3; 
    dJointSetHinge2Param(arg1,arg2,arg3);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointSetUniversalAnchor(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
    dJointID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    dJointSetUniversalAnchor(arg1,arg2,arg3,arg4);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointSetUniversalAxis1(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
    dJointID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    dJointSetUniversalAxis1(arg1,arg2,arg3,arg4);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointSetUniversalAxis2(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
    dJointID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    dJointSetUniversalAxis2(arg1,arg2,arg3,arg4);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointSetUniversalParam(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jfloat jarg3) {
    dJointID arg1 ;
    int arg2 ;
    dReal arg3 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    arg3 = (dReal)jarg3; 
    dJointSetUniversalParam(arg1,arg2,arg3);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointSetFixed(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    dJointID arg1 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    dJointSetFixed(arg1);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointSetFixedParam(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jfloat jarg3) {
    dJointID arg1 ;
    int arg2 ;
    dReal arg3 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    arg3 = (dReal)jarg3; 
    dJointSetFixedParam(arg1,arg2,arg3);
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dJointGetFixedParam(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jfloat jresult = 0 ;
    dJointID arg1 ;
    int arg2 ;
    dReal result;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return 0;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    result = (dReal)dJointGetFixedParam(arg1,arg2);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointSetAMotorNumAxes(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    dJointID arg1 ;
    int arg2 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    dJointSetAMotorNumAxes(arg1,arg2);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointSetAMotorAxis(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jint jarg3, jfloat jarg4, jfloat jarg5, jfloat jarg6) {
    dJointID arg1 ;
    int arg2 ;
    int arg3 ;
    dReal arg4 ;
    dReal arg5 ;
    dReal arg6 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    arg3 = (int)jarg3; 
    arg4 = (dReal)jarg4; 
    arg5 = (dReal)jarg5; 
    arg6 = (dReal)jarg6; 
    dJointSetAMotorAxis(arg1,arg2,arg3,arg4,arg5,arg6);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointSetAMotorAngle(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jfloat jarg3) {
    dJointID arg1 ;
    int arg2 ;
    dReal arg3 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    arg3 = (dReal)jarg3; 
    dJointSetAMotorAngle(arg1,arg2,arg3);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointSetAMotorParam(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jfloat jarg3) {
    dJointID arg1 ;
    int arg2 ;
    dReal arg3 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    arg3 = (dReal)jarg3; 
    dJointSetAMotorParam(arg1,arg2,arg3);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointSetAMotorMode(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    dJointID arg1 ;
    int arg2 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    dJointSetAMotorMode(arg1,arg2);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointGetBallAnchor(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dJointID arg1 ;
    dReal *arg2 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(dReal **)&jarg2; 
    dJointGetBallAnchor(arg1,arg2);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointGetBallAnchor2(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dJointID arg1 ;
    dReal *arg2 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(dReal **)&jarg2; 
    dJointGetBallAnchor2(arg1,arg2);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointGetHingeAnchor(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dJointID arg1 ;
    dReal *arg2 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(dReal **)&jarg2; 
    dJointGetHingeAnchor(arg1,arg2);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointGetHingeAnchor2(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dJointID arg1 ;
    dReal *arg2 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(dReal **)&jarg2; 
    dJointGetHingeAnchor2(arg1,arg2);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointGetHingeAxis(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dJointID arg1 ;
    dReal *arg2 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(dReal **)&jarg2; 
    dJointGetHingeAxis(arg1,arg2);
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dJointGetHingeParam(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jfloat jresult = 0 ;
    dJointID arg1 ;
    int arg2 ;
    dReal result;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return 0;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    result = (dReal)dJointGetHingeParam(arg1,arg2);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dJointGetHingeAngle(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dJointID arg1 ;
    dReal result;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dReal)dJointGetHingeAngle(arg1);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dJointGetHingeAngleRate(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dJointID arg1 ;
    dReal result;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dReal)dJointGetHingeAngleRate(arg1);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dJointGetSliderPosition(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dJointID arg1 ;
    dReal result;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dReal)dJointGetSliderPosition(arg1);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dJointGetSliderPositionRate(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dJointID arg1 ;
    dReal result;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dReal)dJointGetSliderPositionRate(arg1);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointGetSliderAxis(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dJointID arg1 ;
    dReal *arg2 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(dReal **)&jarg2; 
    dJointGetSliderAxis(arg1,arg2);
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dJointGetSliderParam(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jfloat jresult = 0 ;
    dJointID arg1 ;
    int arg2 ;
    dReal result;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return 0;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    result = (dReal)dJointGetSliderParam(arg1,arg2);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointGetHinge2Anchor(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dJointID arg1 ;
    dReal *arg2 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(dReal **)&jarg2; 
    dJointGetHinge2Anchor(arg1,arg2);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointGetHinge2Anchor2(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dJointID arg1 ;
    dReal *arg2 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(dReal **)&jarg2; 
    dJointGetHinge2Anchor2(arg1,arg2);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointGetHinge2Axis1(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dJointID arg1 ;
    dReal *arg2 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(dReal **)&jarg2; 
    dJointGetHinge2Axis1(arg1,arg2);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointGetHinge2Axis2(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dJointID arg1 ;
    dReal *arg2 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(dReal **)&jarg2; 
    dJointGetHinge2Axis2(arg1,arg2);
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dJointGetHinge2Param(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jfloat jresult = 0 ;
    dJointID arg1 ;
    int arg2 ;
    dReal result;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return 0;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    result = (dReal)dJointGetHinge2Param(arg1,arg2);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dJointGetHinge2Angle1(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dJointID arg1 ;
    dReal result;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dReal)dJointGetHinge2Angle1(arg1);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dJointGetHinge2Angle1Rate(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dJointID arg1 ;
    dReal result;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dReal)dJointGetHinge2Angle1Rate(arg1);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dJointGetHinge2Angle2Rate(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dJointID arg1 ;
    dReal result;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dReal)dJointGetHinge2Angle2Rate(arg1);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointGetUniversalAnchor(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dJointID arg1 ;
    dReal *arg2 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(dReal **)&jarg2; 
    dJointGetUniversalAnchor(arg1,arg2);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointGetUniversalAnchor2(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dJointID arg1 ;
    dReal *arg2 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(dReal **)&jarg2; 
    dJointGetUniversalAnchor2(arg1,arg2);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointGetUniversalAxis1(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dJointID arg1 ;
    dReal *arg2 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(dReal **)&jarg2; 
    dJointGetUniversalAxis1(arg1,arg2);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointGetUniversalAxis2(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dJointID arg1 ;
    dReal *arg2 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(dReal **)&jarg2; 
    dJointGetUniversalAxis2(arg1,arg2);
    
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dJointGetUniversalParam(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jfloat jresult = 0 ;
    dJointID arg1 ;
    int arg2 ;
    dReal result;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return 0;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    result = (dReal)dJointGetUniversalParam(arg1,arg2);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dJointGetUniversalAngle1(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dJointID arg1 ;
    dReal result;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dReal)dJointGetUniversalAngle1(arg1);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dJointGetUniversalAngle2(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dJointID arg1 ;
    dReal result;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dReal)dJointGetUniversalAngle2(arg1);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dJointGetUniversalAngle1Rate(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dJointID arg1 ;
    dReal result;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dReal)dJointGetUniversalAngle1Rate(arg1);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dJointGetUniversalAngle2Rate(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jfloat jresult = 0 ;
    dJointID arg1 ;
    dReal result;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return 0;
    }
    arg1 = *argp1; 
    result = (dReal)dJointGetUniversalAngle2Rate(arg1);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_dJointGetAMotorNumAxes(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    dJointID arg1 ;
    int result;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return 0;
    }
    arg1 = *argp1; 
    result = (int)dJointGetAMotorNumAxes(arg1);
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dJointGetAMotorAxis(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3) {
    dJointID arg1 ;
    int arg2 ;
    dReal *arg3 ;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    arg3 = *(dReal **)&jarg3; 
    dJointGetAMotorAxis(arg1,arg2,arg3);
    
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_dJointGetAMotorAxisRel(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jint jresult = 0 ;
    dJointID arg1 ;
    int arg2 ;
    int result;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return 0;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    result = (int)dJointGetAMotorAxisRel(arg1,arg2);
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dJointGetAMotorAngle(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jfloat jresult = 0 ;
    dJointID arg1 ;
    int arg2 ;
    dReal result;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return 0;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    result = (dReal)dJointGetAMotorAngle(arg1,arg2);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dJointGetAMotorAngleRate(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jfloat jresult = 0 ;
    dJointID arg1 ;
    int arg2 ;
    dReal result;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return 0;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    result = (dReal)dJointGetAMotorAngleRate(arg1,arg2);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT jfloat JNICALL Java_org_odejava_ode_OdeJNI_dJointGetAMotorParam(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
    jfloat jresult = 0 ;
    dJointID arg1 ;
    int arg2 ;
    dReal result;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return 0;
    }
    arg1 = *argp1; 
    arg2 = (int)jarg2; 
    result = (dReal)dJointGetAMotorParam(arg1,arg2);
    
    jresult = (jfloat)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_dJointGetAMotorMode(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jint jresult = 0 ;
    dJointID arg1 ;
    int result;
    dJointID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dJointID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dJointID");
        return 0;
    }
    arg1 = *argp1; 
    result = (int)dJointGetAMotorMode(arg1);
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_dAreConnected(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    jint jresult = 0 ;
    dBodyID arg1 ;
    dBodyID arg2 ;
    int result;
    dBodyID *argp1 ;
    dBodyID *argp2 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return 0;
    }
    arg1 = *argp1; 
    argp2 = *(dBodyID **)&jarg2; 
    if (!argp2) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return 0;
    }
    arg2 = *argp2; 
    result = (int)dAreConnected(arg1,arg2);
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT jint JNICALL Java_org_odejava_ode_OdeJNI_dAreConnectedExcluding(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
    jint jresult = 0 ;
    dBodyID arg1 ;
    dBodyID arg2 ;
    int arg3 ;
    int result;
    dBodyID *argp1 ;
    dBodyID *argp2 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dBodyID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return 0;
    }
    arg1 = *argp1; 
    argp2 = *(dBodyID **)&jarg2; 
    if (!argp2) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dBodyID");
        return 0;
    }
    arg2 = *argp2; 
    arg3 = (int)jarg3; 
    result = (int)dAreConnectedExcluding(arg1,arg2,arg3);
    
    jresult = (jint)result; 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dRandSetSeed(JNIEnv *jenv, jclass jcls, jint jarg1) {
    long arg1 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = (long)jarg1; 
    dRandSetSeed(arg1);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dRSetIdentity(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    dReal *arg1 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dReal **)&jarg1; 
    dRSetIdentity(arg1);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dRFromAxisAndAngle(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4, jfloat jarg5) {
    dReal *arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dReal arg5 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dReal **)&jarg1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    arg5 = (dReal)jarg5; 
    dRFromAxisAndAngle(arg1,arg2,arg3,arg4,arg5);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dRFromEulerAngles(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
    dReal *arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dReal **)&jarg1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    dRFromEulerAngles(arg1,arg2,arg3,arg4);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dRFrom2Axes(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4, jfloat jarg5, jfloat jarg6, jfloat jarg7) {
    dReal *arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dReal arg5 ;
    dReal arg6 ;
    dReal arg7 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dReal **)&jarg1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    arg5 = (dReal)jarg5; 
    arg6 = (dReal)jarg6; 
    arg7 = (dReal)jarg7; 
    dRFrom2Axes(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dRFromZAxis(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4) {
    dReal *arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dReal **)&jarg1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    dRFromZAxis(arg1,arg2,arg3,arg4);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dQSetIdentity(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    dReal *arg1 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dReal **)&jarg1; 
    dQSetIdentity(arg1);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dQFromAxisAndAngle(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3, jfloat jarg4, jfloat jarg5) {
    dReal *arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dReal arg4 ;
    dReal arg5 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dReal **)&jarg1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    arg4 = (dReal)jarg4; 
    arg5 = (dReal)jarg5; 
    dQFromAxisAndAngle(arg1,arg2,arg3,arg4,arg5);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dQMultiply0(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
    dReal *arg1 ;
    dReal *arg2 ;
    dReal *arg3 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dReal **)&jarg1; 
    arg2 = *(dReal **)&jarg2; 
    arg3 = *(dReal **)&jarg3; 
    dQMultiply0(arg1,arg2,arg3);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dQMultiply1(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
    dReal *arg1 ;
    dReal *arg2 ;
    dReal *arg3 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dReal **)&jarg1; 
    arg2 = *(dReal **)&jarg2; 
    arg3 = *(dReal **)&jarg3; 
    dQMultiply1(arg1,arg2,arg3);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dQMultiply2(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
    dReal *arg1 ;
    dReal *arg2 ;
    dReal *arg3 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dReal **)&jarg1; 
    arg2 = *(dReal **)&jarg2; 
    arg3 = *(dReal **)&jarg3; 
    dQMultiply2(arg1,arg2,arg3);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dQMultiply3(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
    dReal *arg1 ;
    dReal *arg2 ;
    dReal *arg3 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dReal **)&jarg1; 
    arg2 = *(dReal **)&jarg2; 
    arg3 = *(dReal **)&jarg3; 
    dQMultiply3(arg1,arg2,arg3);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dQtoR(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dReal *arg1 ;
    dReal *arg2 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dReal **)&jarg1; 
    arg2 = *(dReal **)&jarg2; 
    dQtoR(arg1,arg2);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dRtoQ(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
    dReal *arg1 ;
    dReal *arg2 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dReal **)&jarg1; 
    arg2 = *(dReal **)&jarg2; 
    dRtoQ(arg1,arg2);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dWtoDQ(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
    dReal *arg1 ;
    dReal *arg2 ;
    dReal *arg3 ;
    
    (void)jenv;
    (void)jcls;
    arg1 = *(dReal **)&jarg1; 
    arg2 = *(dReal **)&jarg2; 
    arg3 = *(dReal **)&jarg3; 
    dWtoDQ(arg1,arg2,arg3);
    
}


JNIEXPORT jlong JNICALL Java_org_odejava_ode_OdeJNI_dCreateCylinder(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3) {
    jlong jresult = 0 ;
    dSpaceID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dGeomID result;
    dSpaceID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dSpaceID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dSpaceID");
        return 0;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    result = dCreateCylinder(arg1,arg2,arg3);
    
    *(dGeomID **)&jresult = new dGeomID((dGeomID &)result); 
    return jresult;
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomCylinderSetParams(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2, jfloat jarg3) {
    dGeomID arg1 ;
    dReal arg2 ;
    dReal arg3 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = (dReal)jarg2; 
    arg3 = (dReal)jarg3; 
    dGeomCylinderSetParams(arg1,arg2,arg3);
    
}


JNIEXPORT void JNICALL Java_org_odejava_ode_OdeJNI_dGeomCylinderGetParams(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
    dGeomID arg1 ;
    dReal *arg2 = (dReal *) 0 ;
    dReal *arg3 = (dReal *) 0 ;
    dGeomID *argp1 ;
    
    (void)jenv;
    (void)jcls;
    argp1 = *(dGeomID **)&jarg1; 
    if (!argp1) {
        SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null dGeomID");
        return ;
    }
    arg1 = *argp1; 
    arg2 = *(dReal **)&jarg2; 
    arg3 = *(dReal **)&jarg3; 
    dGeomCylinderGetParams(arg1,arg2,arg3);
    
}


#ifdef __cplusplus
}
#endif

