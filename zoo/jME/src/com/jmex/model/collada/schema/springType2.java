/**
 * springType2.java This file was generated by XMLSpy 2006sp2 Enterprise
 * Edition. YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE OVERWRITTEN WHEN
 * YOU RE-RUN CODE GENERATION. Refer to the XMLSpy Documentation for further
 * details. http://www.altova.com/xmlspy
 */

package com.jmex.model.collada.schema;

public class springType2 extends com.jmex.model.collada.xml.Node {

    private static final long serialVersionUID = 1L;

    public springType2(springType2 node) {
        super(node);
    }

    public springType2(org.w3c.dom.Node node) {
        super(node);
    }

    public springType2(org.w3c.dom.Document doc) {
        super(doc);
    }

    public springType2(com.jmex.model.collada.xml.Document doc,
            String namespaceURI, String prefix, String name) {
        super(doc, namespaceURI, prefix, name);
    }

    public void adjustPrefix() {
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "angular"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "angular", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
            new angularType(tmpNode).adjustPrefix();
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "linear"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "linear", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
            new linearType2(tmpNode).adjustPrefix();
        }
    }

    public static int getangularMinCount() {
        return 0;
    }

    public static int getangularMaxCount() {
        return 1;
    }

    public int getangularCount() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "angular");
    }

    public boolean hasangular() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "angular");
    }

    public angularType newangular() {
        return new angularType(domNode.getOwnerDocument().createElementNS(
                "http://www.collada.org/2005/11/COLLADASchema", "angular"));
    }

    public angularType getangularAt(int index) throws Exception {
        return new angularType(dereference(getDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "angular",
                index)));
    }

    public org.w3c.dom.Node getStartingangularCursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "angular");
    }

    public org.w3c.dom.Node getAdvancedangularCursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "angular",
                curNode);
    }

    public angularType getangularValueAtCursor(org.w3c.dom.Node curNode)
            throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new angularType(dereference(curNode));
    }

    public angularType getangular() throws Exception {
        return getangularAt(0);
    }

    public void removeangularAt(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "angular",
                index);
    }

    public void removeangular() {
        while (hasangular())
            removeangularAt(0);
    }

    public void addangular(angularType value) {
        appendDomElement("http://www.collada.org/2005/11/COLLADASchema",
                "angular", value);
    }

    public void insertangularAt(angularType value, int index) {
        insertDomElementAt("http://www.collada.org/2005/11/COLLADASchema",
                "angular", index, value);
    }

    public void replaceangularAt(angularType value, int index) {
        replaceDomElementAt("http://www.collada.org/2005/11/COLLADASchema",
                "angular", index, value);
    }

    public static int getlinearMinCount() {
        return 0;
    }

    public static int getlinearMaxCount() {
        return 1;
    }

    public int getlinearCount() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "linear");
    }

    public boolean haslinear() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "linear");
    }

    public linearType2 newlinear() {
        return new linearType2(domNode.getOwnerDocument().createElementNS(
                "http://www.collada.org/2005/11/COLLADASchema", "linear"));
    }

    public linearType2 getlinearAt(int index) throws Exception {
        return new linearType2(
                dereference(getDomChildAt(Element,
                        "http://www.collada.org/2005/11/COLLADASchema",
                        "linear", index)));
    }

    public org.w3c.dom.Node getStartinglinearCursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "linear");
    }

    public org.w3c.dom.Node getAdvancedlinearCursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "linear",
                curNode);
    }

    public linearType2 getlinearValueAtCursor(org.w3c.dom.Node curNode)
            throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new linearType2(dereference(curNode));
    }

    public linearType2 getlinear() throws Exception {
        return getlinearAt(0);
    }

    public void removelinearAt(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "linear", index);
    }

    public void removelinear() {
        while (haslinear())
            removelinearAt(0);
    }

    public void addlinear(linearType2 value) {
        appendDomElement("http://www.collada.org/2005/11/COLLADASchema",
                "linear", value);
    }

    public void insertlinearAt(linearType2 value, int index) {
        insertDomElementAt("http://www.collada.org/2005/11/COLLADASchema",
                "linear", index, value);
    }

    public void replacelinearAt(linearType2 value, int index) {
        replaceDomElementAt("http://www.collada.org/2005/11/COLLADASchema",
                "linear", index, value);
    }

    private org.w3c.dom.Node dereference(org.w3c.dom.Node node) {
        return node;
    }
}
