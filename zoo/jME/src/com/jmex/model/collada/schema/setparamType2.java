/**
 * setparamType2.java This file was generated by XMLSpy 2006sp2 Enterprise
 * Edition. YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE OVERWRITTEN WHEN
 * YOU RE-RUN CODE GENERATION. Refer to the XMLSpy Documentation for further
 * details. http://www.altova.com/xmlspy
 */

package com.jmex.model.collada.schema;

import com.jmex.model.collada.types.SchemaNCName;

public class setparamType2 extends com.jmex.model.collada.xml.Node {

    private static final long serialVersionUID = 1L;

    public setparamType2(setparamType2 node) {
        super(node);
    }

    public setparamType2(org.w3c.dom.Node node) {
        super(node);
    }

    public setparamType2(org.w3c.dom.Document doc) {
        super(doc);
    }

    public setparamType2(com.jmex.model.collada.xml.Document doc,
            String namespaceURI, String prefix, String name) {
        super(doc, namespaceURI, prefix, name);
    }

    public void adjustPrefix() {
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Attribute, null, "ref"); tmpNode != null; tmpNode = getDomNextChild(
                Attribute, null, "ref", tmpNode)) {
            internalAdjustPrefix(tmpNode, false);
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "annotate"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "annotate", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
            new fx_annotate_common(tmpNode).adjustPrefix();
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "bool"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "bool", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "bool2"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "bool2", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "bool3"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "bool3", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "bool4"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "bool4", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema", "int",
                tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int2"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "int2", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int3"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "int3", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int4"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "int4", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "float", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "float2", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "float3", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "float4", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x1"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "float1x1", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x2"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "float1x2", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x3"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "float1x3", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x4"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "float1x4", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x1"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "float2x1", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x2"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "float2x2", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x3"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "float2x3", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x4"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "float2x4", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x1"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "float3x1", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x2"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "float3x2", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x3"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "float3x3", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x4"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "float3x4", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x1"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "float4x1", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x2"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "float4x2", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x3"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "float4x3", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x4"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "float4x4", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "surface"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "surface", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
            new fx_surface_common(tmpNode).adjustPrefix();
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema",
                "texture_pipeline"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "texture_pipeline", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
            new gles_texture_pipeline(tmpNode).adjustPrefix();
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "sampler_state"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "sampler_state", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
            new gles_sampler_state(tmpNode).adjustPrefix();
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "texture_unit"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "texture_unit", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
            new gles_texture_unit(tmpNode).adjustPrefix();
        }
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "enum"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "enum", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
        }
    }

    public static int getrefMinCount() {
        return 1;
    }

    public static int getrefMaxCount() {
        return 1;
    }

    public int getrefCount() {
        return getDomChildCount(Attribute, null, "ref");
    }

    public boolean hasref() {
        return hasDomChild(Attribute, null, "ref");
    }

    public SchemaNCName newref() {
        return new SchemaNCName();
    }

    public SchemaNCName getrefAt(int index) throws Exception {
        return new SchemaNCName(getDomNodeValue(dereference(getDomChildAt(
                Attribute, null, "ref", index))));
    }

    public org.w3c.dom.Node getStartingrefCursor() throws Exception {
        return getDomFirstChild(Attribute, null, "ref");
    }

    public org.w3c.dom.Node getAdvancedrefCursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Attribute, null, "ref", curNode);
    }

    public SchemaNCName getrefValueAtCursor(org.w3c.dom.Node curNode)
            throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new SchemaNCName(getDomNodeValue(dereference(curNode)));
    }

    public SchemaNCName getref() throws Exception {
        return getrefAt(0);
    }

    public void removerefAt(int index) {
        removeDomChildAt(Attribute, null, "ref", index);
    }

    public void removeref() {
        while (hasref())
            removerefAt(0);
    }

    public void addref(SchemaNCName value) {
        if (value.isNull() == false) {
            appendDomChild(Attribute, null, "ref", value.toString());
        }
    }

    public void addref(String value) throws Exception {
        addref(new SchemaNCName(value));
    }

    public void insertrefAt(SchemaNCName value, int index) {
        insertDomChildAt(Attribute, null, "ref", index, value.toString());
    }

    public void insertrefAt(String value, int index) throws Exception {
        insertrefAt(new SchemaNCName(value), index);
    }

    public void replacerefAt(SchemaNCName value, int index) {
        replaceDomChildAt(Attribute, null, "ref", index, value.toString());
    }

    public void replacerefAt(String value, int index) throws Exception {
        replacerefAt(new SchemaNCName(value), index);
    }

    public static int getannotateMinCount() {
        return 0;
    }

    public static int getannotateMaxCount() {
        return Integer.MAX_VALUE;
    }

    public int getannotateCount() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "annotate");
    }

    public boolean hasannotate() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "annotate");
    }

    public fx_annotate_common newannotate() {
        return new fx_annotate_common(domNode.getOwnerDocument()
                .createElementNS(
                        "http://www.collada.org/2005/11/COLLADASchema",
                        "annotate"));
    }

    public fx_annotate_common getannotateAt(int index) throws Exception {
        return new fx_annotate_common(dereference(getDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "annotate",
                index)));
    }

    public org.w3c.dom.Node getStartingannotateCursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "annotate");
    }

    public org.w3c.dom.Node getAdvancedannotateCursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "annotate",
                curNode);
    }

    public fx_annotate_common getannotateValueAtCursor(org.w3c.dom.Node curNode)
            throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new fx_annotate_common(dereference(curNode));
    }

    public fx_annotate_common getannotate() throws Exception {
        return getannotateAt(0);
    }

    public void removeannotateAt(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "annotate",
                index);
    }

    public void removeannotate() {
        while (hasannotate())
            removeannotateAt(0);
    }

    public void addannotate(fx_annotate_common value) {
        appendDomElement("http://www.collada.org/2005/11/COLLADASchema",
                "annotate", value);
    }

    public void insertannotateAt(fx_annotate_common value, int index) {
        insertDomElementAt("http://www.collada.org/2005/11/COLLADASchema",
                "annotate", index, value);
    }

    public void replaceannotateAt(fx_annotate_common value, int index) {
        replaceDomElementAt("http://www.collada.org/2005/11/COLLADASchema",
                "annotate", index, value);
    }

    public static int getboolMinCount() {
        return 1;
    }

    public static int getboolMaxCount() {
        return 1;
    }

    public int getboolCount() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "bool");
    }

    public boolean hasbool() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "bool");
    }

    public bool newbool() {
        return new bool();
    }

    public bool getboolAt(int index) throws Exception {
        return new bool(
                getDomNodeValue(dereference(getDomChildAt(Element,
                        "http://www.collada.org/2005/11/COLLADASchema", "bool",
                        index))));
    }

    public org.w3c.dom.Node getStartingboolCursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "bool");
    }

    public org.w3c.dom.Node getAdvancedboolCursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "bool", curNode);
    }

    public bool getboolValueAtCursor(org.w3c.dom.Node curNode) throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new bool(getDomNodeValue(dereference(curNode)));
    }

    public bool getbool() throws Exception {
        return getboolAt(0);
    }

    public void removeboolAt(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "bool", index);
    }

    public void removebool() {
        while (hasbool())
            removeboolAt(0);
    }

    public void addbool(bool value) {
        if (value.isNull() == false) {
            appendDomChild(Element,
                    "http://www.collada.org/2005/11/COLLADASchema", "bool",
                    value.toString());
        }
    }

    public void addbool(String value) throws Exception {
        addbool(new bool(value));
    }

    public void insertboolAt(bool value, int index) {
        insertDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "bool", index,
                value.toString());
    }

    public void insertboolAt(String value, int index) throws Exception {
        insertboolAt(new bool(value), index);
    }

    public void replaceboolAt(bool value, int index) {
        replaceDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "bool", index,
                value.toString());
    }

    public void replaceboolAt(String value, int index) throws Exception {
        replaceboolAt(new bool(value), index);
    }

    public static int getbool2MinCount() {
        return 1;
    }

    public static int getbool2MaxCount() {
        return 1;
    }

    public int getbool2Count() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "bool2");
    }

    public boolean hasbool2() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "bool2");
    }

    public bool2 newbool2() {
        return new bool2();
    }

    public bool2 getbool2At(int index) throws Exception {
        return new bool2(
                getDomNodeValue(dereference(getDomChildAt(Element,
                        "http://www.collada.org/2005/11/COLLADASchema",
                        "bool2", index))));
    }

    public org.w3c.dom.Node getStartingbool2Cursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "bool2");
    }

    public org.w3c.dom.Node getAdvancedbool2Cursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "bool2",
                curNode);
    }

    public bool2 getbool2ValueAtCursor(org.w3c.dom.Node curNode)
            throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new bool2(getDomNodeValue(dereference(curNode)));
    }

    public bool2 getbool2() throws Exception {
        return getbool2At(0);
    }

    public void removebool2At(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "bool2", index);
    }

    public void removebool2() {
        while (hasbool2())
            removebool2At(0);
    }

    public void addbool2(bool2 value) {
        if (value.isNull() == false) {
            appendDomChild(Element,
                    "http://www.collada.org/2005/11/COLLADASchema", "bool2",
                    value.toString());
        }
    }

    public void addbool2(String value) throws Exception {
        addbool2(new bool2(value));
    }

    public void insertbool2At(bool2 value, int index) {
        insertDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "bool2", index,
                value.toString());
    }

    public void insertbool2At(String value, int index) throws Exception {
        insertbool2At(new bool2(value), index);
    }

    public void replacebool2At(bool2 value, int index) {
        replaceDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "bool2", index,
                value.toString());
    }

    public void replacebool2At(String value, int index) throws Exception {
        replacebool2At(new bool2(value), index);
    }

    public static int getbool3MinCount() {
        return 1;
    }

    public static int getbool3MaxCount() {
        return 1;
    }

    public int getbool3Count() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "bool3");
    }

    public boolean hasbool3() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "bool3");
    }

    public bool3 newbool3() {
        return new bool3();
    }

    public bool3 getbool3At(int index) throws Exception {
        return new bool3(
                getDomNodeValue(dereference(getDomChildAt(Element,
                        "http://www.collada.org/2005/11/COLLADASchema",
                        "bool3", index))));
    }

    public org.w3c.dom.Node getStartingbool3Cursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "bool3");
    }

    public org.w3c.dom.Node getAdvancedbool3Cursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "bool3",
                curNode);
    }

    public bool3 getbool3ValueAtCursor(org.w3c.dom.Node curNode)
            throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new bool3(getDomNodeValue(dereference(curNode)));
    }

    public bool3 getbool3() throws Exception {
        return getbool3At(0);
    }

    public void removebool3At(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "bool3", index);
    }

    public void removebool3() {
        while (hasbool3())
            removebool3At(0);
    }

    public void addbool3(bool3 value) {
        if (value.isNull() == false) {
            appendDomChild(Element,
                    "http://www.collada.org/2005/11/COLLADASchema", "bool3",
                    value.toString());
        }
    }

    public void addbool3(String value) throws Exception {
        addbool3(new bool3(value));
    }

    public void insertbool3At(bool3 value, int index) {
        insertDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "bool3", index,
                value.toString());
    }

    public void insertbool3At(String value, int index) throws Exception {
        insertbool3At(new bool3(value), index);
    }

    public void replacebool3At(bool3 value, int index) {
        replaceDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "bool3", index,
                value.toString());
    }

    public void replacebool3At(String value, int index) throws Exception {
        replacebool3At(new bool3(value), index);
    }

    public static int getbool4MinCount() {
        return 1;
    }

    public static int getbool4MaxCount() {
        return 1;
    }

    public int getbool4Count() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "bool4");
    }

    public boolean hasbool4() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "bool4");
    }

    public bool4 newbool4() {
        return new bool4();
    }

    public bool4 getbool4At(int index) throws Exception {
        return new bool4(
                getDomNodeValue(dereference(getDomChildAt(Element,
                        "http://www.collada.org/2005/11/COLLADASchema",
                        "bool4", index))));
    }

    public org.w3c.dom.Node getStartingbool4Cursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "bool4");
    }

    public org.w3c.dom.Node getAdvancedbool4Cursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "bool4",
                curNode);
    }

    public bool4 getbool4ValueAtCursor(org.w3c.dom.Node curNode)
            throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new bool4(getDomNodeValue(dereference(curNode)));
    }

    public bool4 getbool4() throws Exception {
        return getbool4At(0);
    }

    public void removebool4At(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "bool4", index);
    }

    public void removebool4() {
        while (hasbool4())
            removebool4At(0);
    }

    public void addbool4(bool4 value) {
        if (value.isNull() == false) {
            appendDomChild(Element,
                    "http://www.collada.org/2005/11/COLLADASchema", "bool4",
                    value.toString());
        }
    }

    public void addbool4(String value) throws Exception {
        addbool4(new bool4(value));
    }

    public void insertbool4At(bool4 value, int index) {
        insertDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "bool4", index,
                value.toString());
    }

    public void insertbool4At(String value, int index) throws Exception {
        insertbool4At(new bool4(value), index);
    }

    public void replacebool4At(bool4 value, int index) {
        replaceDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "bool4", index,
                value.toString());
    }

    public void replacebool4At(String value, int index) throws Exception {
        replacebool4At(new bool4(value), index);
    }

    public static int getint2MinCount() {
        return 1;
    }

    public static int getint2MaxCount() {
        return 1;
    }

    public int getint2Count() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int");
    }

    public boolean hasint2() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int");
    }

    public int2 newint2() {
        return new int2();
    }

    public int2 getint2At(int index) throws Exception {
        return new int2(getDomNodeValue(dereference(getDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int", index))));
    }

    public org.w3c.dom.Node getStartingint2Cursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int");
    }

    public org.w3c.dom.Node getAdvancedint2Cursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int", curNode);
    }

    public int2 getint2ValueAtCursor(org.w3c.dom.Node curNode) throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new int2(getDomNodeValue(dereference(curNode)));
    }

    public int2 getint2() throws Exception {
        return getint2At(0);
    }

    public void removeint2At(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int", index);
    }

    public void removeint2() {
        while (hasint2())
            removeint2At(0);
    }

    public void addint2(int2 value) {
        if (value.isNull() == false) {
            appendDomChild(Element,
                    "http://www.collada.org/2005/11/COLLADASchema", "int",
                    value.toString());
        }
    }

    public void addint2(String value) throws Exception {
        addint2(new int2(value));
    }

    public void insertint2At(int2 value, int index) {
        insertDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int", index,
                value.toString());
    }

    public void insertint2At(String value, int index) throws Exception {
        insertint2At(new int2(value), index);
    }

    public void replaceint2At(int2 value, int index) {
        replaceDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int", index,
                value.toString());
    }

    public void replaceint2At(String value, int index) throws Exception {
        replaceint2At(new int2(value), index);
    }

    public static int getint22MinCount() {
        return 1;
    }

    public static int getint22MaxCount() {
        return 1;
    }

    public int getint22Count() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int2");
    }

    public boolean hasint22() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int2");
    }

    public int22 newint22() {
        return new int22();
    }

    public int22 getint22At(int index) throws Exception {
        return new int22(
                getDomNodeValue(dereference(getDomChildAt(Element,
                        "http://www.collada.org/2005/11/COLLADASchema", "int2",
                        index))));
    }

    public org.w3c.dom.Node getStartingint22Cursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int2");
    }

    public org.w3c.dom.Node getAdvancedint22Cursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int2", curNode);
    }

    public int22 getint22ValueAtCursor(org.w3c.dom.Node curNode)
            throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new int22(getDomNodeValue(dereference(curNode)));
    }

    public int22 getint22() throws Exception {
        return getint22At(0);
    }

    public void removeint22At(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int2", index);
    }

    public void removeint22() {
        while (hasint22())
            removeint22At(0);
    }

    public void addint22(int22 value) {
        if (value.isNull() == false) {
            appendDomChild(Element,
                    "http://www.collada.org/2005/11/COLLADASchema", "int2",
                    value.toString());
        }
    }

    public void addint22(String value) throws Exception {
        addint22(new int22(value));
    }

    public void insertint22At(int22 value, int index) {
        insertDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int2", index,
                value.toString());
    }

    public void insertint22At(String value, int index) throws Exception {
        insertint22At(new int22(value), index);
    }

    public void replaceint22At(int22 value, int index) {
        replaceDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int2", index,
                value.toString());
    }

    public void replaceint22At(String value, int index) throws Exception {
        replaceint22At(new int22(value), index);
    }

    public static int getint3MinCount() {
        return 1;
    }

    public static int getint3MaxCount() {
        return 1;
    }

    public int getint3Count() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int3");
    }

    public boolean hasint3() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int3");
    }

    public int3 newint3() {
        return new int3();
    }

    public int3 getint3At(int index) throws Exception {
        return new int3(
                getDomNodeValue(dereference(getDomChildAt(Element,
                        "http://www.collada.org/2005/11/COLLADASchema", "int3",
                        index))));
    }

    public org.w3c.dom.Node getStartingint3Cursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int3");
    }

    public org.w3c.dom.Node getAdvancedint3Cursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int3", curNode);
    }

    public int3 getint3ValueAtCursor(org.w3c.dom.Node curNode) throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new int3(getDomNodeValue(dereference(curNode)));
    }

    public int3 getint3() throws Exception {
        return getint3At(0);
    }

    public void removeint3At(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int3", index);
    }

    public void removeint3() {
        while (hasint3())
            removeint3At(0);
    }

    public void addint3(int3 value) {
        if (value.isNull() == false) {
            appendDomChild(Element,
                    "http://www.collada.org/2005/11/COLLADASchema", "int3",
                    value.toString());
        }
    }

    public void addint3(String value) throws Exception {
        addint3(new int3(value));
    }

    public void insertint3At(int3 value, int index) {
        insertDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int3", index,
                value.toString());
    }

    public void insertint3At(String value, int index) throws Exception {
        insertint3At(new int3(value), index);
    }

    public void replaceint3At(int3 value, int index) {
        replaceDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int3", index,
                value.toString());
    }

    public void replaceint3At(String value, int index) throws Exception {
        replaceint3At(new int3(value), index);
    }

    public static int getint4MinCount() {
        return 1;
    }

    public static int getint4MaxCount() {
        return 1;
    }

    public int getint4Count() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int4");
    }

    public boolean hasint4() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int4");
    }

    public int4 newint4() {
        return new int4();
    }

    public int4 getint4At(int index) throws Exception {
        return new int4(
                getDomNodeValue(dereference(getDomChildAt(Element,
                        "http://www.collada.org/2005/11/COLLADASchema", "int4",
                        index))));
    }

    public org.w3c.dom.Node getStartingint4Cursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int4");
    }

    public org.w3c.dom.Node getAdvancedint4Cursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int4", curNode);
    }

    public int4 getint4ValueAtCursor(org.w3c.dom.Node curNode) throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new int4(getDomNodeValue(dereference(curNode)));
    }

    public int4 getint4() throws Exception {
        return getint4At(0);
    }

    public void removeint4At(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int4", index);
    }

    public void removeint4() {
        while (hasint4())
            removeint4At(0);
    }

    public void addint4(int4 value) {
        if (value.isNull() == false) {
            appendDomChild(Element,
                    "http://www.collada.org/2005/11/COLLADASchema", "int4",
                    value.toString());
        }
    }

    public void addint4(String value) throws Exception {
        addint4(new int4(value));
    }

    public void insertint4At(int4 value, int index) {
        insertDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int4", index,
                value.toString());
    }

    public void insertint4At(String value, int index) throws Exception {
        insertint4At(new int4(value), index);
    }

    public void replaceint4At(int4 value, int index) {
        replaceDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "int4", index,
                value.toString());
    }

    public void replaceint4At(String value, int index) throws Exception {
        replaceint4At(new int4(value), index);
    }

    public static int getfloat2MinCount() {
        return 1;
    }

    public static int getfloat2MaxCount() {
        return 1;
    }

    public int getfloat2Count() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float");
    }

    public boolean hasfloat2() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float");
    }

    public float2 newfloat2() {
        return new float2();
    }

    public float2 getfloat2At(int index) throws Exception {
        return new float2(
                getDomNodeValue(dereference(getDomChildAt(Element,
                        "http://www.collada.org/2005/11/COLLADASchema",
                        "float", index))));
    }

    public org.w3c.dom.Node getStartingfloat2Cursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float");
    }

    public org.w3c.dom.Node getAdvancedfloat2Cursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float",
                curNode);
    }

    public float2 getfloat2ValueAtCursor(org.w3c.dom.Node curNode)
            throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new float2(getDomNodeValue(dereference(curNode)));
    }

    public float2 getfloat2() throws Exception {
        return getfloat2At(0);
    }

    public void removefloat2At(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float", index);
    }

    public void removefloat2() {
        while (hasfloat2())
            removefloat2At(0);
    }

    public void addfloat2(float2 value) {
        if (value.isNull() == false) {
            appendDomChild(Element,
                    "http://www.collada.org/2005/11/COLLADASchema", "float",
                    value.toString());
        }
    }

    public void addfloat2(String value) throws Exception {
        addfloat2(new float2(value));
    }

    public void insertfloat2At(float2 value, int index) {
        insertDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float", index,
                value.toString());
    }

    public void insertfloat2At(String value, int index) throws Exception {
        insertfloat2At(new float2(value), index);
    }

    public void replacefloat2At(float2 value, int index) {
        replaceDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float", index,
                value.toString());
    }

    public void replacefloat2At(String value, int index) throws Exception {
        replacefloat2At(new float2(value), index);
    }

    public static int getfloat22MinCount() {
        return 1;
    }

    public static int getfloat22MaxCount() {
        return 1;
    }

    public int getfloat22Count() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2");
    }

    public boolean hasfloat22() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2");
    }

    public float22 newfloat22() {
        return new float22();
    }

    public float22 getfloat22At(int index) throws Exception {
        return new float22(
                getDomNodeValue(dereference(getDomChildAt(Element,
                        "http://www.collada.org/2005/11/COLLADASchema",
                        "float2", index))));
    }

    public org.w3c.dom.Node getStartingfloat22Cursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2");
    }

    public org.w3c.dom.Node getAdvancedfloat22Cursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2",
                curNode);
    }

    public float22 getfloat22ValueAtCursor(org.w3c.dom.Node curNode)
            throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new float22(getDomNodeValue(dereference(curNode)));
    }

    public float22 getfloat22() throws Exception {
        return getfloat22At(0);
    }

    public void removefloat22At(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2", index);
    }

    public void removefloat22() {
        while (hasfloat22())
            removefloat22At(0);
    }

    public void addfloat22(float22 value) {
        if (value.isNull() == false) {
            appendDomChild(Element,
                    "http://www.collada.org/2005/11/COLLADASchema", "float2",
                    value.toString());
        }
    }

    public void addfloat22(String value) throws Exception {
        addfloat22(new float22(value));
    }

    public void insertfloat22At(float22 value, int index) {
        insertDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2",
                index, value.toString());
    }

    public void insertfloat22At(String value, int index) throws Exception {
        insertfloat22At(new float22(value), index);
    }

    public void replacefloat22At(float22 value, int index) {
        replaceDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2",
                index, value.toString());
    }

    public void replacefloat22At(String value, int index) throws Exception {
        replacefloat22At(new float22(value), index);
    }

    public static int getfloat3MinCount() {
        return 1;
    }

    public static int getfloat3MaxCount() {
        return 1;
    }

    public int getfloat3Count() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3");
    }

    public boolean hasfloat3() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3");
    }

    public float3 newfloat3() {
        return new float3();
    }

    public float3 getfloat3At(int index) throws Exception {
        return new float3(
                getDomNodeValue(dereference(getDomChildAt(Element,
                        "http://www.collada.org/2005/11/COLLADASchema",
                        "float3", index))));
    }

    public org.w3c.dom.Node getStartingfloat3Cursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3");
    }

    public org.w3c.dom.Node getAdvancedfloat3Cursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3",
                curNode);
    }

    public float3 getfloat3ValueAtCursor(org.w3c.dom.Node curNode)
            throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new float3(getDomNodeValue(dereference(curNode)));
    }

    public float3 getfloat3() throws Exception {
        return getfloat3At(0);
    }

    public void removefloat3At(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3", index);
    }

    public void removefloat3() {
        while (hasfloat3())
            removefloat3At(0);
    }

    public void addfloat3(float3 value) {
        if (value.isNull() == false) {
            appendDomChild(Element,
                    "http://www.collada.org/2005/11/COLLADASchema", "float3",
                    value.toString());
        }
    }

    public void addfloat3(String value) throws Exception {
        addfloat3(new float3(value));
    }

    public void insertfloat3At(float3 value, int index) {
        insertDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3",
                index, value.toString());
    }

    public void insertfloat3At(String value, int index) throws Exception {
        insertfloat3At(new float3(value), index);
    }

    public void replacefloat3At(float3 value, int index) {
        replaceDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3",
                index, value.toString());
    }

    public void replacefloat3At(String value, int index) throws Exception {
        replacefloat3At(new float3(value), index);
    }

    public static int getfloat4MinCount() {
        return 1;
    }

    public static int getfloat4MaxCount() {
        return 1;
    }

    public int getfloat4Count() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4");
    }

    public boolean hasfloat4() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4");
    }

    public float4 newfloat4() {
        return new float4();
    }

    public float4 getfloat4At(int index) throws Exception {
        return new float4(
                getDomNodeValue(dereference(getDomChildAt(Element,
                        "http://www.collada.org/2005/11/COLLADASchema",
                        "float4", index))));
    }

    public org.w3c.dom.Node getStartingfloat4Cursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4");
    }

    public org.w3c.dom.Node getAdvancedfloat4Cursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4",
                curNode);
    }

    public float4 getfloat4ValueAtCursor(org.w3c.dom.Node curNode)
            throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new float4(getDomNodeValue(dereference(curNode)));
    }

    public float4 getfloat4() throws Exception {
        return getfloat4At(0);
    }

    public void removefloat4At(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4", index);
    }

    public void removefloat4() {
        while (hasfloat4())
            removefloat4At(0);
    }

    public void addfloat4(float4 value) {
        if (value.isNull() == false) {
            appendDomChild(Element,
                    "http://www.collada.org/2005/11/COLLADASchema", "float4",
                    value.toString());
        }
    }

    public void addfloat4(String value) throws Exception {
        addfloat4(new float4(value));
    }

    public void insertfloat4At(float4 value, int index) {
        insertDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4",
                index, value.toString());
    }

    public void insertfloat4At(String value, int index) throws Exception {
        insertfloat4At(new float4(value), index);
    }

    public void replacefloat4At(float4 value, int index) {
        replaceDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4",
                index, value.toString());
    }

    public void replacefloat4At(String value, int index) throws Exception {
        replacefloat4At(new float4(value), index);
    }

    public static int getfloat1x1MinCount() {
        return 1;
    }

    public static int getfloat1x1MaxCount() {
        return 1;
    }

    public int getfloat1x1Count() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x1");
    }

    public boolean hasfloat1x1() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x1");
    }

    public float2 newfloat1x1() {
        return new float2();
    }

    public float2 getfloat1x1At(int index) throws Exception {
        return new float2(getDomNodeValue(dereference(getDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x1",
                index))));
    }

    public org.w3c.dom.Node getStartingfloat1x1Cursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x1");
    }

    public org.w3c.dom.Node getAdvancedfloat1x1Cursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x1",
                curNode);
    }

    public float2 getfloat1x1ValueAtCursor(org.w3c.dom.Node curNode)
            throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new float2(getDomNodeValue(dereference(curNode)));
    }

    public float2 getfloat1x1() throws Exception {
        return getfloat1x1At(0);
    }

    public void removefloat1x1At(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x1",
                index);
    }

    public void removefloat1x1() {
        while (hasfloat1x1())
            removefloat1x1At(0);
    }

    public void addfloat1x1(float2 value) {
        if (value.isNull() == false) {
            appendDomChild(Element,
                    "http://www.collada.org/2005/11/COLLADASchema", "float1x1",
                    value.toString());
        }
    }

    public void addfloat1x1(String value) throws Exception {
        addfloat1x1(new float2(value));
    }

    public void insertfloat1x1At(float2 value, int index) {
        insertDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x1",
                index, value.toString());
    }

    public void insertfloat1x1At(String value, int index) throws Exception {
        insertfloat1x1At(new float2(value), index);
    }

    public void replacefloat1x1At(float2 value, int index) {
        replaceDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x1",
                index, value.toString());
    }

    public void replacefloat1x1At(String value, int index) throws Exception {
        replacefloat1x1At(new float2(value), index);
    }

    public static int getfloat1x2MinCount() {
        return 1;
    }

    public static int getfloat1x2MaxCount() {
        return 1;
    }

    public int getfloat1x2Count() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x2");
    }

    public boolean hasfloat1x2() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x2");
    }

    public float22 newfloat1x2() {
        return new float22();
    }

    public float22 getfloat1x2At(int index) throws Exception {
        return new float22(getDomNodeValue(dereference(getDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x2",
                index))));
    }

    public org.w3c.dom.Node getStartingfloat1x2Cursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x2");
    }

    public org.w3c.dom.Node getAdvancedfloat1x2Cursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x2",
                curNode);
    }

    public float22 getfloat1x2ValueAtCursor(org.w3c.dom.Node curNode)
            throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new float22(getDomNodeValue(dereference(curNode)));
    }

    public float22 getfloat1x2() throws Exception {
        return getfloat1x2At(0);
    }

    public void removefloat1x2At(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x2",
                index);
    }

    public void removefloat1x2() {
        while (hasfloat1x2())
            removefloat1x2At(0);
    }

    public void addfloat1x2(float22 value) {
        if (value.isNull() == false) {
            appendDomChild(Element,
                    "http://www.collada.org/2005/11/COLLADASchema", "float1x2",
                    value.toString());
        }
    }

    public void addfloat1x2(String value) throws Exception {
        addfloat1x2(new float22(value));
    }

    public void insertfloat1x2At(float22 value, int index) {
        insertDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x2",
                index, value.toString());
    }

    public void insertfloat1x2At(String value, int index) throws Exception {
        insertfloat1x2At(new float22(value), index);
    }

    public void replacefloat1x2At(float22 value, int index) {
        replaceDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x2",
                index, value.toString());
    }

    public void replacefloat1x2At(String value, int index) throws Exception {
        replacefloat1x2At(new float22(value), index);
    }

    public static int getfloat1x3MinCount() {
        return 1;
    }

    public static int getfloat1x3MaxCount() {
        return 1;
    }

    public int getfloat1x3Count() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x3");
    }

    public boolean hasfloat1x3() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x3");
    }

    public float3 newfloat1x3() {
        return new float3();
    }

    public float3 getfloat1x3At(int index) throws Exception {
        return new float3(getDomNodeValue(dereference(getDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x3",
                index))));
    }

    public org.w3c.dom.Node getStartingfloat1x3Cursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x3");
    }

    public org.w3c.dom.Node getAdvancedfloat1x3Cursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x3",
                curNode);
    }

    public float3 getfloat1x3ValueAtCursor(org.w3c.dom.Node curNode)
            throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new float3(getDomNodeValue(dereference(curNode)));
    }

    public float3 getfloat1x3() throws Exception {
        return getfloat1x3At(0);
    }

    public void removefloat1x3At(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x3",
                index);
    }

    public void removefloat1x3() {
        while (hasfloat1x3())
            removefloat1x3At(0);
    }

    public void addfloat1x3(float3 value) {
        if (value.isNull() == false) {
            appendDomChild(Element,
                    "http://www.collada.org/2005/11/COLLADASchema", "float1x3",
                    value.toString());
        }
    }

    public void addfloat1x3(String value) throws Exception {
        addfloat1x3(new float3(value));
    }

    public void insertfloat1x3At(float3 value, int index) {
        insertDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x3",
                index, value.toString());
    }

    public void insertfloat1x3At(String value, int index) throws Exception {
        insertfloat1x3At(new float3(value), index);
    }

    public void replacefloat1x3At(float3 value, int index) {
        replaceDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x3",
                index, value.toString());
    }

    public void replacefloat1x3At(String value, int index) throws Exception {
        replacefloat1x3At(new float3(value), index);
    }

    public static int getfloat1x4MinCount() {
        return 1;
    }

    public static int getfloat1x4MaxCount() {
        return 1;
    }

    public int getfloat1x4Count() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x4");
    }

    public boolean hasfloat1x4() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x4");
    }

    public float4 newfloat1x4() {
        return new float4();
    }

    public float4 getfloat1x4At(int index) throws Exception {
        return new float4(getDomNodeValue(dereference(getDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x4",
                index))));
    }

    public org.w3c.dom.Node getStartingfloat1x4Cursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x4");
    }

    public org.w3c.dom.Node getAdvancedfloat1x4Cursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x4",
                curNode);
    }

    public float4 getfloat1x4ValueAtCursor(org.w3c.dom.Node curNode)
            throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new float4(getDomNodeValue(dereference(curNode)));
    }

    public float4 getfloat1x4() throws Exception {
        return getfloat1x4At(0);
    }

    public void removefloat1x4At(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x4",
                index);
    }

    public void removefloat1x4() {
        while (hasfloat1x4())
            removefloat1x4At(0);
    }

    public void addfloat1x4(float4 value) {
        if (value.isNull() == false) {
            appendDomChild(Element,
                    "http://www.collada.org/2005/11/COLLADASchema", "float1x4",
                    value.toString());
        }
    }

    public void addfloat1x4(String value) throws Exception {
        addfloat1x4(new float4(value));
    }

    public void insertfloat1x4At(float4 value, int index) {
        insertDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x4",
                index, value.toString());
    }

    public void insertfloat1x4At(String value, int index) throws Exception {
        insertfloat1x4At(new float4(value), index);
    }

    public void replacefloat1x4At(float4 value, int index) {
        replaceDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float1x4",
                index, value.toString());
    }

    public void replacefloat1x4At(String value, int index) throws Exception {
        replacefloat1x4At(new float4(value), index);
    }

    public static int getfloat2x1MinCount() {
        return 1;
    }

    public static int getfloat2x1MaxCount() {
        return 1;
    }

    public int getfloat2x1Count() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x1");
    }

    public boolean hasfloat2x1() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x1");
    }

    public float22 newfloat2x1() {
        return new float22();
    }

    public float22 getfloat2x1At(int index) throws Exception {
        return new float22(getDomNodeValue(dereference(getDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x1",
                index))));
    }

    public org.w3c.dom.Node getStartingfloat2x1Cursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x1");
    }

    public org.w3c.dom.Node getAdvancedfloat2x1Cursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x1",
                curNode);
    }

    public float22 getfloat2x1ValueAtCursor(org.w3c.dom.Node curNode)
            throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new float22(getDomNodeValue(dereference(curNode)));
    }

    public float22 getfloat2x1() throws Exception {
        return getfloat2x1At(0);
    }

    public void removefloat2x1At(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x1",
                index);
    }

    public void removefloat2x1() {
        while (hasfloat2x1())
            removefloat2x1At(0);
    }

    public void addfloat2x1(float22 value) {
        if (value.isNull() == false) {
            appendDomChild(Element,
                    "http://www.collada.org/2005/11/COLLADASchema", "float2x1",
                    value.toString());
        }
    }

    public void addfloat2x1(String value) throws Exception {
        addfloat2x1(new float22(value));
    }

    public void insertfloat2x1At(float22 value, int index) {
        insertDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x1",
                index, value.toString());
    }

    public void insertfloat2x1At(String value, int index) throws Exception {
        insertfloat2x1At(new float22(value), index);
    }

    public void replacefloat2x1At(float22 value, int index) {
        replaceDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x1",
                index, value.toString());
    }

    public void replacefloat2x1At(String value, int index) throws Exception {
        replacefloat2x1At(new float22(value), index);
    }

    public static int getfloat2x2MinCount() {
        return 1;
    }

    public static int getfloat2x2MaxCount() {
        return 1;
    }

    public int getfloat2x2Count() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x2");
    }

    public boolean hasfloat2x2() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x2");
    }

    public float2x2 newfloat2x2() {
        return new float2x2();
    }

    public float2x2 getfloat2x2At(int index) throws Exception {
        return new float2x2(getDomNodeValue(dereference(getDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x2",
                index))));
    }

    public org.w3c.dom.Node getStartingfloat2x2Cursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x2");
    }

    public org.w3c.dom.Node getAdvancedfloat2x2Cursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x2",
                curNode);
    }

    public float2x2 getfloat2x2ValueAtCursor(org.w3c.dom.Node curNode)
            throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new float2x2(getDomNodeValue(dereference(curNode)));
    }

    public float2x2 getfloat2x2() throws Exception {
        return getfloat2x2At(0);
    }

    public void removefloat2x2At(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x2",
                index);
    }

    public void removefloat2x2() {
        while (hasfloat2x2())
            removefloat2x2At(0);
    }

    public void addfloat2x2(float2x2 value) {
        if (value.isNull() == false) {
            appendDomChild(Element,
                    "http://www.collada.org/2005/11/COLLADASchema", "float2x2",
                    value.toString());
        }
    }

    public void addfloat2x2(String value) throws Exception {
        addfloat2x2(new float2x2(value));
    }

    public void insertfloat2x2At(float2x2 value, int index) {
        insertDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x2",
                index, value.toString());
    }

    public void insertfloat2x2At(String value, int index) throws Exception {
        insertfloat2x2At(new float2x2(value), index);
    }

    public void replacefloat2x2At(float2x2 value, int index) {
        replaceDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x2",
                index, value.toString());
    }

    public void replacefloat2x2At(String value, int index) throws Exception {
        replacefloat2x2At(new float2x2(value), index);
    }

    public static int getfloat2x3MinCount() {
        return 1;
    }

    public static int getfloat2x3MaxCount() {
        return 1;
    }

    public int getfloat2x3Count() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x3");
    }

    public boolean hasfloat2x3() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x3");
    }

    public float2x3 newfloat2x3() {
        return new float2x3();
    }

    public float2x3 getfloat2x3At(int index) throws Exception {
        return new float2x3(getDomNodeValue(dereference(getDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x3",
                index))));
    }

    public org.w3c.dom.Node getStartingfloat2x3Cursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x3");
    }

    public org.w3c.dom.Node getAdvancedfloat2x3Cursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x3",
                curNode);
    }

    public float2x3 getfloat2x3ValueAtCursor(org.w3c.dom.Node curNode)
            throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new float2x3(getDomNodeValue(dereference(curNode)));
    }

    public float2x3 getfloat2x3() throws Exception {
        return getfloat2x3At(0);
    }

    public void removefloat2x3At(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x3",
                index);
    }

    public void removefloat2x3() {
        while (hasfloat2x3())
            removefloat2x3At(0);
    }

    public void addfloat2x3(float2x3 value) {
        if (value.isNull() == false) {
            appendDomChild(Element,
                    "http://www.collada.org/2005/11/COLLADASchema", "float2x3",
                    value.toString());
        }
    }

    public void addfloat2x3(String value) throws Exception {
        addfloat2x3(new float2x3(value));
    }

    public void insertfloat2x3At(float2x3 value, int index) {
        insertDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x3",
                index, value.toString());
    }

    public void insertfloat2x3At(String value, int index) throws Exception {
        insertfloat2x3At(new float2x3(value), index);
    }

    public void replacefloat2x3At(float2x3 value, int index) {
        replaceDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x3",
                index, value.toString());
    }

    public void replacefloat2x3At(String value, int index) throws Exception {
        replacefloat2x3At(new float2x3(value), index);
    }

    public static int getfloat2x4MinCount() {
        return 1;
    }

    public static int getfloat2x4MaxCount() {
        return 1;
    }

    public int getfloat2x4Count() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x4");
    }

    public boolean hasfloat2x4() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x4");
    }

    public float2x4 newfloat2x4() {
        return new float2x4();
    }

    public float2x4 getfloat2x4At(int index) throws Exception {
        return new float2x4(getDomNodeValue(dereference(getDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x4",
                index))));
    }

    public org.w3c.dom.Node getStartingfloat2x4Cursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x4");
    }

    public org.w3c.dom.Node getAdvancedfloat2x4Cursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x4",
                curNode);
    }

    public float2x4 getfloat2x4ValueAtCursor(org.w3c.dom.Node curNode)
            throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new float2x4(getDomNodeValue(dereference(curNode)));
    }

    public float2x4 getfloat2x4() throws Exception {
        return getfloat2x4At(0);
    }

    public void removefloat2x4At(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x4",
                index);
    }

    public void removefloat2x4() {
        while (hasfloat2x4())
            removefloat2x4At(0);
    }

    public void addfloat2x4(float2x4 value) {
        if (value.isNull() == false) {
            appendDomChild(Element,
                    "http://www.collada.org/2005/11/COLLADASchema", "float2x4",
                    value.toString());
        }
    }

    public void addfloat2x4(String value) throws Exception {
        addfloat2x4(new float2x4(value));
    }

    public void insertfloat2x4At(float2x4 value, int index) {
        insertDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x4",
                index, value.toString());
    }

    public void insertfloat2x4At(String value, int index) throws Exception {
        insertfloat2x4At(new float2x4(value), index);
    }

    public void replacefloat2x4At(float2x4 value, int index) {
        replaceDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float2x4",
                index, value.toString());
    }

    public void replacefloat2x4At(String value, int index) throws Exception {
        replacefloat2x4At(new float2x4(value), index);
    }

    public static int getfloat3x1MinCount() {
        return 1;
    }

    public static int getfloat3x1MaxCount() {
        return 1;
    }

    public int getfloat3x1Count() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x1");
    }

    public boolean hasfloat3x1() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x1");
    }

    public float3 newfloat3x1() {
        return new float3();
    }

    public float3 getfloat3x1At(int index) throws Exception {
        return new float3(getDomNodeValue(dereference(getDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x1",
                index))));
    }

    public org.w3c.dom.Node getStartingfloat3x1Cursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x1");
    }

    public org.w3c.dom.Node getAdvancedfloat3x1Cursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x1",
                curNode);
    }

    public float3 getfloat3x1ValueAtCursor(org.w3c.dom.Node curNode)
            throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new float3(getDomNodeValue(dereference(curNode)));
    }

    public float3 getfloat3x1() throws Exception {
        return getfloat3x1At(0);
    }

    public void removefloat3x1At(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x1",
                index);
    }

    public void removefloat3x1() {
        while (hasfloat3x1())
            removefloat3x1At(0);
    }

    public void addfloat3x1(float3 value) {
        if (value.isNull() == false) {
            appendDomChild(Element,
                    "http://www.collada.org/2005/11/COLLADASchema", "float3x1",
                    value.toString());
        }
    }

    public void addfloat3x1(String value) throws Exception {
        addfloat3x1(new float3(value));
    }

    public void insertfloat3x1At(float3 value, int index) {
        insertDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x1",
                index, value.toString());
    }

    public void insertfloat3x1At(String value, int index) throws Exception {
        insertfloat3x1At(new float3(value), index);
    }

    public void replacefloat3x1At(float3 value, int index) {
        replaceDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x1",
                index, value.toString());
    }

    public void replacefloat3x1At(String value, int index) throws Exception {
        replacefloat3x1At(new float3(value), index);
    }

    public static int getfloat3x2MinCount() {
        return 1;
    }

    public static int getfloat3x2MaxCount() {
        return 1;
    }

    public int getfloat3x2Count() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x2");
    }

    public boolean hasfloat3x2() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x2");
    }

    public float3x2 newfloat3x2() {
        return new float3x2();
    }

    public float3x2 getfloat3x2At(int index) throws Exception {
        return new float3x2(getDomNodeValue(dereference(getDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x2",
                index))));
    }

    public org.w3c.dom.Node getStartingfloat3x2Cursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x2");
    }

    public org.w3c.dom.Node getAdvancedfloat3x2Cursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x2",
                curNode);
    }

    public float3x2 getfloat3x2ValueAtCursor(org.w3c.dom.Node curNode)
            throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new float3x2(getDomNodeValue(dereference(curNode)));
    }

    public float3x2 getfloat3x2() throws Exception {
        return getfloat3x2At(0);
    }

    public void removefloat3x2At(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x2",
                index);
    }

    public void removefloat3x2() {
        while (hasfloat3x2())
            removefloat3x2At(0);
    }

    public void addfloat3x2(float3x2 value) {
        if (value.isNull() == false) {
            appendDomChild(Element,
                    "http://www.collada.org/2005/11/COLLADASchema", "float3x2",
                    value.toString());
        }
    }

    public void addfloat3x2(String value) throws Exception {
        addfloat3x2(new float3x2(value));
    }

    public void insertfloat3x2At(float3x2 value, int index) {
        insertDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x2",
                index, value.toString());
    }

    public void insertfloat3x2At(String value, int index) throws Exception {
        insertfloat3x2At(new float3x2(value), index);
    }

    public void replacefloat3x2At(float3x2 value, int index) {
        replaceDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x2",
                index, value.toString());
    }

    public void replacefloat3x2At(String value, int index) throws Exception {
        replacefloat3x2At(new float3x2(value), index);
    }

    public static int getfloat3x3MinCount() {
        return 1;
    }

    public static int getfloat3x3MaxCount() {
        return 1;
    }

    public int getfloat3x3Count() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x3");
    }

    public boolean hasfloat3x3() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x3");
    }

    public float3x3 newfloat3x3() {
        return new float3x3();
    }

    public float3x3 getfloat3x3At(int index) throws Exception {
        return new float3x3(getDomNodeValue(dereference(getDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x3",
                index))));
    }

    public org.w3c.dom.Node getStartingfloat3x3Cursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x3");
    }

    public org.w3c.dom.Node getAdvancedfloat3x3Cursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x3",
                curNode);
    }

    public float3x3 getfloat3x3ValueAtCursor(org.w3c.dom.Node curNode)
            throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new float3x3(getDomNodeValue(dereference(curNode)));
    }

    public float3x3 getfloat3x3() throws Exception {
        return getfloat3x3At(0);
    }

    public void removefloat3x3At(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x3",
                index);
    }

    public void removefloat3x3() {
        while (hasfloat3x3())
            removefloat3x3At(0);
    }

    public void addfloat3x3(float3x3 value) {
        if (value.isNull() == false) {
            appendDomChild(Element,
                    "http://www.collada.org/2005/11/COLLADASchema", "float3x3",
                    value.toString());
        }
    }

    public void addfloat3x3(String value) throws Exception {
        addfloat3x3(new float3x3(value));
    }

    public void insertfloat3x3At(float3x3 value, int index) {
        insertDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x3",
                index, value.toString());
    }

    public void insertfloat3x3At(String value, int index) throws Exception {
        insertfloat3x3At(new float3x3(value), index);
    }

    public void replacefloat3x3At(float3x3 value, int index) {
        replaceDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x3",
                index, value.toString());
    }

    public void replacefloat3x3At(String value, int index) throws Exception {
        replacefloat3x3At(new float3x3(value), index);
    }

    public static int getfloat3x4MinCount() {
        return 1;
    }

    public static int getfloat3x4MaxCount() {
        return 1;
    }

    public int getfloat3x4Count() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x4");
    }

    public boolean hasfloat3x4() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x4");
    }

    public float3x4 newfloat3x4() {
        return new float3x4();
    }

    public float3x4 getfloat3x4At(int index) throws Exception {
        return new float3x4(getDomNodeValue(dereference(getDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x4",
                index))));
    }

    public org.w3c.dom.Node getStartingfloat3x4Cursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x4");
    }

    public org.w3c.dom.Node getAdvancedfloat3x4Cursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x4",
                curNode);
    }

    public float3x4 getfloat3x4ValueAtCursor(org.w3c.dom.Node curNode)
            throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new float3x4(getDomNodeValue(dereference(curNode)));
    }

    public float3x4 getfloat3x4() throws Exception {
        return getfloat3x4At(0);
    }

    public void removefloat3x4At(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x4",
                index);
    }

    public void removefloat3x4() {
        while (hasfloat3x4())
            removefloat3x4At(0);
    }

    public void addfloat3x4(float3x4 value) {
        if (value.isNull() == false) {
            appendDomChild(Element,
                    "http://www.collada.org/2005/11/COLLADASchema", "float3x4",
                    value.toString());
        }
    }

    public void addfloat3x4(String value) throws Exception {
        addfloat3x4(new float3x4(value));
    }

    public void insertfloat3x4At(float3x4 value, int index) {
        insertDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x4",
                index, value.toString());
    }

    public void insertfloat3x4At(String value, int index) throws Exception {
        insertfloat3x4At(new float3x4(value), index);
    }

    public void replacefloat3x4At(float3x4 value, int index) {
        replaceDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float3x4",
                index, value.toString());
    }

    public void replacefloat3x4At(String value, int index) throws Exception {
        replacefloat3x4At(new float3x4(value), index);
    }

    public static int getfloat4x1MinCount() {
        return 1;
    }

    public static int getfloat4x1MaxCount() {
        return 1;
    }

    public int getfloat4x1Count() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x1");
    }

    public boolean hasfloat4x1() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x1");
    }

    public float4 newfloat4x1() {
        return new float4();
    }

    public float4 getfloat4x1At(int index) throws Exception {
        return new float4(getDomNodeValue(dereference(getDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x1",
                index))));
    }

    public org.w3c.dom.Node getStartingfloat4x1Cursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x1");
    }

    public org.w3c.dom.Node getAdvancedfloat4x1Cursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x1",
                curNode);
    }

    public float4 getfloat4x1ValueAtCursor(org.w3c.dom.Node curNode)
            throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new float4(getDomNodeValue(dereference(curNode)));
    }

    public float4 getfloat4x1() throws Exception {
        return getfloat4x1At(0);
    }

    public void removefloat4x1At(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x1",
                index);
    }

    public void removefloat4x1() {
        while (hasfloat4x1())
            removefloat4x1At(0);
    }

    public void addfloat4x1(float4 value) {
        if (value.isNull() == false) {
            appendDomChild(Element,
                    "http://www.collada.org/2005/11/COLLADASchema", "float4x1",
                    value.toString());
        }
    }

    public void addfloat4x1(String value) throws Exception {
        addfloat4x1(new float4(value));
    }

    public void insertfloat4x1At(float4 value, int index) {
        insertDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x1",
                index, value.toString());
    }

    public void insertfloat4x1At(String value, int index) throws Exception {
        insertfloat4x1At(new float4(value), index);
    }

    public void replacefloat4x1At(float4 value, int index) {
        replaceDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x1",
                index, value.toString());
    }

    public void replacefloat4x1At(String value, int index) throws Exception {
        replacefloat4x1At(new float4(value), index);
    }

    public static int getfloat4x2MinCount() {
        return 1;
    }

    public static int getfloat4x2MaxCount() {
        return 1;
    }

    public int getfloat4x2Count() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x2");
    }

    public boolean hasfloat4x2() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x2");
    }

    public float4x2 newfloat4x2() {
        return new float4x2();
    }

    public float4x2 getfloat4x2At(int index) throws Exception {
        return new float4x2(getDomNodeValue(dereference(getDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x2",
                index))));
    }

    public org.w3c.dom.Node getStartingfloat4x2Cursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x2");
    }

    public org.w3c.dom.Node getAdvancedfloat4x2Cursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x2",
                curNode);
    }

    public float4x2 getfloat4x2ValueAtCursor(org.w3c.dom.Node curNode)
            throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new float4x2(getDomNodeValue(dereference(curNode)));
    }

    public float4x2 getfloat4x2() throws Exception {
        return getfloat4x2At(0);
    }

    public void removefloat4x2At(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x2",
                index);
    }

    public void removefloat4x2() {
        while (hasfloat4x2())
            removefloat4x2At(0);
    }

    public void addfloat4x2(float4x2 value) {
        if (value.isNull() == false) {
            appendDomChild(Element,
                    "http://www.collada.org/2005/11/COLLADASchema", "float4x2",
                    value.toString());
        }
    }

    public void addfloat4x2(String value) throws Exception {
        addfloat4x2(new float4x2(value));
    }

    public void insertfloat4x2At(float4x2 value, int index) {
        insertDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x2",
                index, value.toString());
    }

    public void insertfloat4x2At(String value, int index) throws Exception {
        insertfloat4x2At(new float4x2(value), index);
    }

    public void replacefloat4x2At(float4x2 value, int index) {
        replaceDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x2",
                index, value.toString());
    }

    public void replacefloat4x2At(String value, int index) throws Exception {
        replacefloat4x2At(new float4x2(value), index);
    }

    public static int getfloat4x3MinCount() {
        return 1;
    }

    public static int getfloat4x3MaxCount() {
        return 1;
    }

    public int getfloat4x3Count() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x3");
    }

    public boolean hasfloat4x3() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x3");
    }

    public float4x3 newfloat4x3() {
        return new float4x3();
    }

    public float4x3 getfloat4x3At(int index) throws Exception {
        return new float4x3(getDomNodeValue(dereference(getDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x3",
                index))));
    }

    public org.w3c.dom.Node getStartingfloat4x3Cursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x3");
    }

    public org.w3c.dom.Node getAdvancedfloat4x3Cursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x3",
                curNode);
    }

    public float4x3 getfloat4x3ValueAtCursor(org.w3c.dom.Node curNode)
            throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new float4x3(getDomNodeValue(dereference(curNode)));
    }

    public float4x3 getfloat4x3() throws Exception {
        return getfloat4x3At(0);
    }

    public void removefloat4x3At(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x3",
                index);
    }

    public void removefloat4x3() {
        while (hasfloat4x3())
            removefloat4x3At(0);
    }

    public void addfloat4x3(float4x3 value) {
        if (value.isNull() == false) {
            appendDomChild(Element,
                    "http://www.collada.org/2005/11/COLLADASchema", "float4x3",
                    value.toString());
        }
    }

    public void addfloat4x3(String value) throws Exception {
        addfloat4x3(new float4x3(value));
    }

    public void insertfloat4x3At(float4x3 value, int index) {
        insertDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x3",
                index, value.toString());
    }

    public void insertfloat4x3At(String value, int index) throws Exception {
        insertfloat4x3At(new float4x3(value), index);
    }

    public void replacefloat4x3At(float4x3 value, int index) {
        replaceDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x3",
                index, value.toString());
    }

    public void replacefloat4x3At(String value, int index) throws Exception {
        replacefloat4x3At(new float4x3(value), index);
    }

    public static int getfloat4x4MinCount() {
        return 1;
    }

    public static int getfloat4x4MaxCount() {
        return 1;
    }

    public int getfloat4x4Count() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x4");
    }

    public boolean hasfloat4x4() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x4");
    }

    public float4x4 newfloat4x4() {
        return new float4x4();
    }

    public float4x4 getfloat4x4At(int index) throws Exception {
        return new float4x4(getDomNodeValue(dereference(getDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x4",
                index))));
    }

    public org.w3c.dom.Node getStartingfloat4x4Cursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x4");
    }

    public org.w3c.dom.Node getAdvancedfloat4x4Cursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x4",
                curNode);
    }

    public float4x4 getfloat4x4ValueAtCursor(org.w3c.dom.Node curNode)
            throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new float4x4(getDomNodeValue(dereference(curNode)));
    }

    public float4x4 getfloat4x4() throws Exception {
        return getfloat4x4At(0);
    }

    public void removefloat4x4At(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x4",
                index);
    }

    public void removefloat4x4() {
        while (hasfloat4x4())
            removefloat4x4At(0);
    }

    public void addfloat4x4(float4x4 value) {
        if (value.isNull() == false) {
            appendDomChild(Element,
                    "http://www.collada.org/2005/11/COLLADASchema", "float4x4",
                    value.toString());
        }
    }

    public void addfloat4x4(String value) throws Exception {
        addfloat4x4(new float4x4(value));
    }

    public void insertfloat4x4At(float4x4 value, int index) {
        insertDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x4",
                index, value.toString());
    }

    public void insertfloat4x4At(String value, int index) throws Exception {
        insertfloat4x4At(new float4x4(value), index);
    }

    public void replacefloat4x4At(float4x4 value, int index) {
        replaceDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "float4x4",
                index, value.toString());
    }

    public void replacefloat4x4At(String value, int index) throws Exception {
        replacefloat4x4At(new float4x4(value), index);
    }

    public static int getsurfaceMinCount() {
        return 1;
    }

    public static int getsurfaceMaxCount() {
        return 1;
    }

    public int getsurfaceCount() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "surface");
    }

    public boolean hassurface() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "surface");
    }

    public fx_surface_common newsurface() {
        return new fx_surface_common(domNode.getOwnerDocument()
                .createElementNS(
                        "http://www.collada.org/2005/11/COLLADASchema",
                        "surface"));
    }

    public fx_surface_common getsurfaceAt(int index) throws Exception {
        return new fx_surface_common(dereference(getDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "surface",
                index)));
    }

    public org.w3c.dom.Node getStartingsurfaceCursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "surface");
    }

    public org.w3c.dom.Node getAdvancedsurfaceCursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "surface",
                curNode);
    }

    public fx_surface_common getsurfaceValueAtCursor(org.w3c.dom.Node curNode)
            throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new fx_surface_common(dereference(curNode));
    }

    public fx_surface_common getsurface() throws Exception {
        return getsurfaceAt(0);
    }

    public void removesurfaceAt(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "surface",
                index);
    }

    public void removesurface() {
        while (hassurface())
            removesurfaceAt(0);
    }

    public void addsurface(fx_surface_common value) {
        appendDomElement("http://www.collada.org/2005/11/COLLADASchema",
                "surface", value);
    }

    public void insertsurfaceAt(fx_surface_common value, int index) {
        insertDomElementAt("http://www.collada.org/2005/11/COLLADASchema",
                "surface", index, value);
    }

    public void replacesurfaceAt(fx_surface_common value, int index) {
        replaceDomElementAt("http://www.collada.org/2005/11/COLLADASchema",
                "surface", index, value);
    }

    public static int gettexture_pipelineMinCount() {
        return 1;
    }

    public static int gettexture_pipelineMaxCount() {
        return 1;
    }

    public int gettexture_pipelineCount() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema",
                "texture_pipeline");
    }

    public boolean hastexture_pipeline() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema",
                "texture_pipeline");
    }

    public gles_texture_pipeline newtexture_pipeline() {
        return new gles_texture_pipeline(domNode.getOwnerDocument()
                .createElementNS(
                        "http://www.collada.org/2005/11/COLLADASchema",
                        "texture_pipeline"));
    }

    public gles_texture_pipeline gettexture_pipelineAt(int index)
            throws Exception {
        return new gles_texture_pipeline(dereference(getDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema",
                "texture_pipeline", index)));
    }

    public org.w3c.dom.Node getStartingtexture_pipelineCursor()
            throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema",
                "texture_pipeline");
    }

    public org.w3c.dom.Node getAdvancedtexture_pipelineCursor(
            org.w3c.dom.Node curNode) throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema",
                "texture_pipeline", curNode);
    }

    public gles_texture_pipeline gettexture_pipelineValueAtCursor(
            org.w3c.dom.Node curNode) throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new gles_texture_pipeline(dereference(curNode));
    }

    public gles_texture_pipeline gettexture_pipeline() throws Exception {
        return gettexture_pipelineAt(0);
    }

    public void removetexture_pipelineAt(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema",
                "texture_pipeline", index);
    }

    public void removetexture_pipeline() {
        while (hastexture_pipeline())
            removetexture_pipelineAt(0);
    }

    public void addtexture_pipeline(gles_texture_pipeline value) {
        appendDomElement("http://www.collada.org/2005/11/COLLADASchema",
                "texture_pipeline", value);
    }

    public void inserttexture_pipelineAt(gles_texture_pipeline value, int index) {
        insertDomElementAt("http://www.collada.org/2005/11/COLLADASchema",
                "texture_pipeline", index, value);
    }

    public void replacetexture_pipelineAt(gles_texture_pipeline value, int index) {
        replaceDomElementAt("http://www.collada.org/2005/11/COLLADASchema",
                "texture_pipeline", index, value);
    }

    public static int getsampler_stateMinCount() {
        return 1;
    }

    public static int getsampler_stateMaxCount() {
        return 1;
    }

    public int getsampler_stateCount() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "sampler_state");
    }

    public boolean hassampler_state() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "sampler_state");
    }

    public gles_sampler_state newsampler_state() {
        return new gles_sampler_state(domNode.getOwnerDocument()
                .createElementNS(
                        "http://www.collada.org/2005/11/COLLADASchema",
                        "sampler_state"));
    }

    public gles_sampler_state getsampler_stateAt(int index) throws Exception {
        return new gles_sampler_state(dereference(getDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema",
                "sampler_state", index)));
    }

    public org.w3c.dom.Node getStartingsampler_stateCursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "sampler_state");
    }

    public org.w3c.dom.Node getAdvancedsampler_stateCursor(
            org.w3c.dom.Node curNode) throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema",
                "sampler_state", curNode);
    }

    public gles_sampler_state getsampler_stateValueAtCursor(
            org.w3c.dom.Node curNode) throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new gles_sampler_state(dereference(curNode));
    }

    public gles_sampler_state getsampler_state() throws Exception {
        return getsampler_stateAt(0);
    }

    public void removesampler_stateAt(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema",
                "sampler_state", index);
    }

    public void removesampler_state() {
        while (hassampler_state())
            removesampler_stateAt(0);
    }

    public void addsampler_state(gles_sampler_state value) {
        appendDomElement("http://www.collada.org/2005/11/COLLADASchema",
                "sampler_state", value);
    }

    public void insertsampler_stateAt(gles_sampler_state value, int index) {
        insertDomElementAt("http://www.collada.org/2005/11/COLLADASchema",
                "sampler_state", index, value);
    }

    public void replacesampler_stateAt(gles_sampler_state value, int index) {
        replaceDomElementAt("http://www.collada.org/2005/11/COLLADASchema",
                "sampler_state", index, value);
    }

    public static int gettexture_unitMinCount() {
        return 1;
    }

    public static int gettexture_unitMaxCount() {
        return 1;
    }

    public int gettexture_unitCount() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "texture_unit");
    }

    public boolean hastexture_unit() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "texture_unit");
    }

    public gles_texture_unit newtexture_unit() {
        return new gles_texture_unit(domNode.getOwnerDocument()
                .createElementNS(
                        "http://www.collada.org/2005/11/COLLADASchema",
                        "texture_unit"));
    }

    public gles_texture_unit gettexture_unitAt(int index) throws Exception {
        return new gles_texture_unit(dereference(getDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "texture_unit",
                index)));
    }

    public org.w3c.dom.Node getStartingtexture_unitCursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "texture_unit");
    }

    public org.w3c.dom.Node getAdvancedtexture_unitCursor(
            org.w3c.dom.Node curNode) throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "texture_unit",
                curNode);
    }

    public gles_texture_unit gettexture_unitValueAtCursor(
            org.w3c.dom.Node curNode) throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new gles_texture_unit(dereference(curNode));
    }

    public gles_texture_unit gettexture_unit() throws Exception {
        return gettexture_unitAt(0);
    }

    public void removetexture_unitAt(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "texture_unit",
                index);
    }

    public void removetexture_unit() {
        while (hastexture_unit())
            removetexture_unitAt(0);
    }

    public void addtexture_unit(gles_texture_unit value) {
        appendDomElement("http://www.collada.org/2005/11/COLLADASchema",
                "texture_unit", value);
    }

    public void inserttexture_unitAt(gles_texture_unit value, int index) {
        insertDomElementAt("http://www.collada.org/2005/11/COLLADASchema",
                "texture_unit", index, value);
    }

    public void replacetexture_unitAt(gles_texture_unit value, int index) {
        replaceDomElementAt("http://www.collada.org/2005/11/COLLADASchema",
                "texture_unit", index, value);
    }

    public static int getenumMinCount() {
        return 1;
    }

    public static int getenumMaxCount() {
        return 1;
    }

    public int getenumCount() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "enum");
    }

    public boolean hasenum() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "enum");
    }

    public gles_enumeration newenum() {
        return new gles_enumeration();
    }

    public gles_enumeration getenumAt(int index) throws Exception {
        return new gles_enumeration(getDomNodeValue(dereference(getDomChildAt(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "enum", index))));
    }

    public org.w3c.dom.Node getStartingenumCursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "enum");
    }

    public org.w3c.dom.Node getAdvancedenumCursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "enum", curNode);
    }

    public gles_enumeration getenumValueAtCursor(org.w3c.dom.Node curNode)
            throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new gles_enumeration(getDomNodeValue(dereference(curNode)));
    }

    public gles_enumeration getenum() throws Exception {
        return getenumAt(0);
    }

    public void removeenumAt(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "enum", index);
    }

    public void removeenum() {
        while (hasenum())
            removeenumAt(0);
    }

    public void addenum(gles_enumeration value) {
        if (value.isNull() == false) {
            appendDomChild(Element,
                    "http://www.collada.org/2005/11/COLLADASchema", "enum",
                    value.toString());
        }
    }

    public void addenum(String value) throws Exception {
        addenum(new gles_enumeration(value));
    }

    public void insertenumAt(gles_enumeration value, int index) {
        insertDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "enum", index,
                value.toString());
    }

    public void insertenumAt(String value, int index) throws Exception {
        insertenumAt(new gles_enumeration(value), index);
    }

    public void replaceenumAt(gles_enumeration value, int index) {
        replaceDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "enum", index,
                value.toString());
    }

    public void replaceenumAt(String value, int index) throws Exception {
        replaceenumAt(new gles_enumeration(value), index);
    }

    private org.w3c.dom.Node dereference(org.w3c.dom.Node node) {
        return node;
    }
}
