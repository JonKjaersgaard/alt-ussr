/**
 * technique_commonType9.java This file was generated by XMLSpy 2006sp2
 * Enterprise Edition. YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION. Refer to the XMLSpy
 * Documentation for further details. http://www.altova.com/xmlspy
 */

package com.jmex.model.collada.schema;

public class technique_commonType9 extends com.jmex.model.collada.xml.Node {

    private static final long serialVersionUID = 1L;

    public technique_commonType9(technique_commonType9 node) {
        super(node);
    }

    public technique_commonType9(org.w3c.dom.Node node) {
        super(node);
    }

    public technique_commonType9(org.w3c.dom.Document doc) {
        super(doc);
    }

    public technique_commonType9(com.jmex.model.collada.xml.Document doc,
            String namespaceURI, String prefix, String name) {
        super(doc, namespaceURI, prefix, name);
    }

    public void adjustPrefix() {
        for (org.w3c.dom.Node tmpNode = getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "accessor"); tmpNode != null; tmpNode = getDomNextChild(
                Element, "http://www.collada.org/2005/11/COLLADASchema",
                "accessor", tmpNode)) {
            internalAdjustPrefix(tmpNode, true);
            new accessorType(tmpNode).adjustPrefix();
        }
    }

    public static int getaccessorMinCount() {
        return 1;
    }

    public static int getaccessorMaxCount() {
        return 1;
    }

    public int getaccessorCount() {
        return getDomChildCount(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "accessor");
    }

    public boolean hasaccessor() {
        return hasDomChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "accessor");
    }

    public accessorType newaccessor() {
        return new accessorType(domNode.getOwnerDocument().createElementNS(
                "http://www.collada.org/2005/11/COLLADASchema", "accessor"));
    }

    public accessorType getaccessorAt(int index) throws Exception {
        return new accessorType(dereference(getDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "accessor",
                index)));
    }

    public org.w3c.dom.Node getStartingaccessorCursor() throws Exception {
        return getDomFirstChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "accessor");
    }

    public org.w3c.dom.Node getAdvancedaccessorCursor(org.w3c.dom.Node curNode)
            throws Exception {
        return getDomNextChild(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "accessor",
                curNode);
    }

    public accessorType getaccessorValueAtCursor(org.w3c.dom.Node curNode)
            throws Exception {
        if (curNode == null)
            throw new com.jmex.model.collada.xml.XmlException("Out of range");
        else
            return new accessorType(dereference(curNode));
    }

    public accessorType getaccessor() throws Exception {
        return getaccessorAt(0);
    }

    public void removeaccessorAt(int index) {
        removeDomChildAt(Element,
                "http://www.collada.org/2005/11/COLLADASchema", "accessor",
                index);
    }

    public void removeaccessor() {
        while (hasaccessor())
            removeaccessorAt(0);
    }

    public void addaccessor(accessorType value) {
        appendDomElement("http://www.collada.org/2005/11/COLLADASchema",
                "accessor", value);
    }

    public void insertaccessorAt(accessorType value, int index) {
        insertDomElementAt("http://www.collada.org/2005/11/COLLADASchema",
                "accessor", index, value);
    }

    public void replaceaccessorAt(accessorType value, int index) {
        replaceDomElementAt("http://www.collada.org/2005/11/COLLADASchema",
                "accessor", index, value);
    }

    private org.w3c.dom.Node dereference(org.w3c.dom.Node node) {
        return node;
    }
}
