/* This file was generated by SableCC (http://www.sablecc.org/). */

package dcd.highlevel.rdcd.parser.lexer;

import java.io.*;
import dcd.highlevel.rdcd.parser.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private PushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") PushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        int middle = (low + high) / 2;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 46:
                        {
                            @SuppressWarnings("hiding") Token token = new46(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 47:
                        {
                            @SuppressWarnings("hiding") Token token = new47(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 48:
                        {
                            @SuppressWarnings("hiding") Token token = new48(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 49:
                        {
                            @SuppressWarnings("hiding") Token token = new49(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 50:
                        {
                            @SuppressWarnings("hiding") Token token = new50(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 51:
                        {
                            @SuppressWarnings("hiding") Token token = new51(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 52:
                        {
                            @SuppressWarnings("hiding") Token token = new52(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 53:
                        {
                            @SuppressWarnings("hiding") Token token = new53(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 54:
                        {
                            @SuppressWarnings("hiding") Token token = new54(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 55:
                        {
                            @SuppressWarnings("hiding") Token token = new55(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 56:
                        {
                            @SuppressWarnings("hiding") Token token = new56(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 57:
                        {
                            @SuppressWarnings("hiding") Token token = new57(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 58:
                        {
                            @SuppressWarnings("hiding") Token token = new58(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 59:
                        {
                            @SuppressWarnings("hiding") Token token = new59(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 60:
                        {
                            @SuppressWarnings("hiding") Token token = new60(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 61:
                        {
                            @SuppressWarnings("hiding") Token token = new61(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 62:
                        {
                            @SuppressWarnings("hiding") Token token = new62(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 63:
                        {
                            @SuppressWarnings("hiding") Token token = new63(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 64:
                        {
                            @SuppressWarnings("hiding") Token token = new64(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWhiteSpace(text, line, pos); }
    Token new1(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTraditionalComment(text, line, pos); }
    Token new2(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDocumentationComment(text, line, pos); }
    Token new3(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEndOfLineComment(text, line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAbstract(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIf(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRole(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEvent(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TExtends(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDeployment(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTrue(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFalse(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLParenthese(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRParenthese(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBrace(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBrace(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBracket(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBracket(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSemicolon(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComma(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDot(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAssign(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLt(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGt(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComplement(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBitComplement(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TQuestion(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColon(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEq(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLteq(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGteq(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNeq(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAnd(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOr(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlusPlus(line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinusMinus(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlus(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinus(line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStar(line, pos); }
    Token new39(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDiv(line, pos); }
    Token new40(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBitAnd(line, pos); }
    Token new41(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBitOr(line, pos); }
    Token new42(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBitXor(line, pos); }
    Token new43(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMod(line, pos); }
    Token new44(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TShiftLeft(line, pos); }
    Token new45(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSignedShiftRight(line, pos); }
    Token new46(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TUnsignedShiftRight(line, pos); }
    Token new47(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlusAssign(line, pos); }
    Token new48(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinusAssign(line, pos); }
    Token new49(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStarAssign(line, pos); }
    Token new50(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDivAssign(line, pos); }
    Token new51(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBitAndAssign(line, pos); }
    Token new52(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBitOrAssign(line, pos); }
    Token new53(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBitXorAssign(line, pos); }
    Token new54(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TModAssign(line, pos); }
    Token new55(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TShiftLeftAssign(line, pos); }
    Token new56(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSignedShiftRightAssign(line, pos); }
    Token new57(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TUnsignedShiftRightAssign(line, pos); }
    Token new58(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDecimalIntegerLiteral(text, line, pos); }
    Token new59(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new THexIntegerLiteral(text, line, pos); }
    Token new60(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOctalIntegerLiteral(text, line, pos); }
    Token new61(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFloatingPointLiteral(text, line, pos); }
    Token new62(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCharacterLiteral(text, line, pos); }
    Token new63(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStringLiteral(text, line, pos); }
    Token new64(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIdentifier(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{9, 9, 1}, {10, 10, 2}, {12, 12, 3}, {13, 13, 4}, {32, 32, 5}, {33, 33, 6}, {34, 34, 7}, {36, 36, 8}, {37, 37, 9}, {38, 38, 10}, {39, 39, 11}, {40, 40, 12}, {41, 41, 13}, {42, 42, 14}, {43, 43, 15}, {44, 44, 16}, {45, 45, 17}, {46, 46, 18}, {47, 47, 19}, {48, 48, 20}, {49, 57, 21}, {58, 58, 22}, {59, 59, 23}, {60, 60, 24}, {61, 61, 25}, {62, 62, 26}, {63, 63, 27}, {65, 90, 28}, {91, 91, 29}, {93, 93, 30}, {94, 94, 31}, {95, 95, 32}, {97, 97, 33}, {98, 99, 34}, {100, 100, 35}, {101, 101, 36}, {102, 102, 37}, {103, 104, 34}, {105, 105, 38}, {106, 113, 34}, {114, 114, 39}, {115, 115, 34}, {116, 116, 40}, {117, 122, 34}, {123, 123, 41}, {124, 124, 42}, {125, 125, 43}, {126, 126, 44}, {170, 170, 45}, {181, 181, 46}, {186, 186, 47}, {192, 214, 48}, {216, 246, 49}, {248, 501, 50}, {506, 535, 51}, {592, 680, 52}, {688, 696, 53}, {699, 705, 54}, {720, 721, 55}, {736, 740, 56}, {890, 890, 57}, {902, 902, 58}, {904, 906, 59}, {908, 908, 60}, {910, 929, 61}, {931, 974, 62}, {976, 982, 63}, {986, 986, 64}, {988, 988, 65}, {990, 990, 66}, {992, 992, 67}, {994, 1011, 68}, {1025, 1036, 69}, {1038, 1103, 70}, {1105, 1116, 71}, {1118, 1153, 72}, {1168, 1220, 73}, {1223, 1224, 74}, {1227, 1228, 75}, {1232, 1259, 76}, {1262, 1269, 77}, {1272, 1273, 78}, {1329, 1366, 79}, {1369, 1369, 80}, {1377, 1415, 81}, {1488, 1514, 82}, {1520, 1522, 83}, {1569, 1594, 84}, {1600, 1610, 85}, {1649, 1719, 86}, {1722, 1726, 87}, {1728, 1742, 88}, {1744, 1747, 89}, {1749, 1749, 90}, {1765, 1766, 91}, {2309, 2361, 92}, {2365, 2365, 93}, {2392, 2401, 94}, {2437, 2444, 95}, {2447, 2448, 96}, {2451, 2472, 97}, {2474, 2480, 98}, {2482, 2482, 99}, {2486, 2489, 100}, {2524, 2525, 101}, {2527, 2529, 102}, {2544, 2545, 103}, {2565, 2570, 104}, {2575, 2576, 105}, {2579, 2600, 106}, {2602, 2608, 107}, {2610, 2611, 108}, {2613, 2614, 109}, {2616, 2617, 110}, {2649, 2652, 111}, {2654, 2654, 112}, {2674, 2676, 113}, {2693, 2699, 114}, {2701, 2701, 115}, {2703, 2705, 116}, {2707, 2728, 117}, {2730, 2736, 118}, {2738, 2739, 119}, {2741, 2745, 120}, {2749, 2749, 121}, {2784, 2784, 122}, {2821, 2828, 123}, {2831, 2832, 124}, {2835, 2856, 125}, {2858, 2864, 126}, {2866, 2867, 127}, {2870, 2873, 128}, {2877, 2877, 129}, {2908, 2909, 130}, {2911, 2913, 131}, {2949, 2954, 132}, {2958, 2960, 133}, {2962, 2965, 134}, {2969, 2970, 135}, {2972, 2972, 136}, {2974, 2975, 137}, {2979, 2980, 138}, {2984, 2986, 139}, {2990, 2997, 140}, {2999, 3001, 141}, {3077, 3084, 142}, {3086, 3088, 143}, {3090, 3112, 144}, {3114, 3123, 145}, {3125, 3129, 146}, {3168, 3169, 147}, {3205, 3212, 148}, {3214, 3216, 149}, {3218, 3240, 150}, {3242, 3251, 151}, {3253, 3257, 152}, {3294, 3294, 153}, {3296, 3297, 154}, {3333, 3340, 155}, {3342, 3344, 156}, {3346, 3368, 157}, {3370, 3385, 158}, {3424, 3425, 159}, {3585, 3630, 160}, {3632, 3632, 161}, {3634, 3635, 162}, {3648, 3654, 163}, {3713, 3714, 164}, {3716, 3716, 165}, {3719, 3720, 166}, {3722, 3722, 167}, {3725, 3725, 168}, {3732, 3735, 169}, {3737, 3743, 170}, {3745, 3747, 171}, {3749, 3749, 172}, {3751, 3751, 173}, {3754, 3755, 174}, {3757, 3758, 175}, {3760, 3760, 176}, {3762, 3763, 177}, {3773, 3773, 178}, {3776, 3780, 179}, {3782, 3782, 180}, {3804, 3805, 181}, {3904, 3911, 182}, {3913, 3945, 183}, {4256, 4293, 184}, {4304, 4342, 185}, {4352, 4441, 186}, {4447, 4514, 187}, {4520, 4601, 188}, {7680, 7835, 189}, {7840, 7929, 190}, {7936, 7957, 191}, {7960, 7965, 192}, {7968, 8005, 193}, {8008, 8013, 194}, {8016, 8023, 195}, {8025, 8025, 196}, {8027, 8027, 197}, {8029, 8029, 198}, {8031, 8061, 199}, {8064, 8116, 200}, {8118, 8124, 201}, {8126, 8126, 202}, {8130, 8132, 203}, {8134, 8140, 204}, {8144, 8147, 205}, {8150, 8155, 206}, {8160, 8172, 207}, {8178, 8180, 208}, {8182, 8188, 209}, {8319, 8319, 210}, {8450, 8450, 211}, {8455, 8455, 212}, {8458, 8467, 213}, {8469, 8469, 214}, {8472, 8477, 215}, {8484, 8484, 216}, {8486, 8486, 217}, {8488, 8488, 218}, {8490, 8497, 219}, {8499, 8504, 220}, {12293, 12293, 221}, {12337, 12341, 222}, {12353, 12436, 223}, {12443, 12446, 224}, {12449, 12538, 225}, {12540, 12542, 226}, {12549, 12588, 227}, {12593, 12686, 228}, {19968, 40869, 229}, {44032, 55203, 230}, {63744, 64045, 231}, {64256, 64262, 232}, {64275, 64279, 233}, {64287, 64296, 234}, {64298, 64310, 235}, {64312, 64316, 236}, {64318, 64318, 237}, {64320, 64321, 238}, {64323, 64324, 239}, {64326, 64433, 240}, {64467, 64829, 241}, {64848, 64911, 242}, {64914, 64967, 243}, {65008, 65019, 244}, {65136, 65138, 245}, {65140, 65140, 246}, {65142, 65276, 247}, {65313, 65338, 248}, {65345, 65370, 249}, {65382, 65470, 250}, {65474, 65479, 251}, {65482, 65487, 252}, {65490, 65495, 253}, {65498, 65500, 254}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 9, 1}, {10, 10, 255}, {12, 32, -2}, },
            {{9, 32, -2}, },
            {{61, 61, 256}, },
            {{0, 9, 257}, {11, 12, 257}, {14, 33, 257}, {34, 34, 258}, {35, 91, 257}, {92, 92, 259}, {93, 65535, 257}, },
            {{36, 36, 260}, {48, 57, 261}, {65, 90, 262}, {95, 95, 263}, {97, 122, 264}, {170, 170, 265}, {181, 181, 266}, {186, 186, 267}, {192, 214, 268}, {216, 246, 269}, {248, 501, 270}, {506, 535, 271}, {592, 680, 272}, {688, 696, 273}, {699, 705, 274}, {720, 721, 275}, {736, 740, 276}, {890, 890, 277}, {902, 902, 278}, {904, 906, 279}, {908, 908, 280}, {910, 929, 281}, {931, 974, 282}, {976, 982, 283}, {986, 986, 284}, {988, 988, 285}, {990, 990, 286}, {992, 992, 287}, {994, 1011, 288}, {1025, 1036, 289}, {1038, 1103, 290}, {1105, 1116, 291}, {1118, 1153, 292}, {1168, 1220, 293}, {1223, 1224, 294}, {1227, 1228, 295}, {1232, 1259, 296}, {1262, 1269, 297}, {1272, 1273, 298}, {1329, 1366, 299}, {1369, 1369, 300}, {1377, 1415, 301}, {1488, 1514, 302}, {1520, 1522, 303}, {1569, 1594, 304}, {1600, 1610, 305}, {1632, 1641, 306}, {1649, 1719, 307}, {1722, 1726, 308}, {1728, 1742, 309}, {1744, 1747, 310}, {1749, 1749, 311}, {1765, 1766, 312}, {1776, 1785, 313}, {2309, 2361, 314}, {2365, 2365, 315}, {2392, 2401, 316}, {2406, 2415, 317}, {2437, 2444, 318}, {2447, 2448, 319}, {2451, 2472, 320}, {2474, 2480, 321}, {2482, 2482, 322}, {2486, 2489, 323}, {2524, 2525, 324}, {2527, 2529, 325}, {2534, 2543, 326}, {2544, 2545, 327}, {2565, 2570, 328}, {2575, 2576, 329}, {2579, 2600, 330}, {2602, 2608, 331}, {2610, 2611, 332}, {2613, 2614, 333}, {2616, 2617, 334}, {2649, 2652, 335}, {2654, 2654, 336}, {2662, 2671, 337}, {2674, 2676, 338}, {2693, 2699, 339}, {2701, 2701, 340}, {2703, 2705, 341}, {2707, 2728, 342}, {2730, 2736, 343}, {2738, 2739, 344}, {2741, 2745, 345}, {2749, 2749, 346}, {2784, 2784, 347}, {2790, 2799, 348}, {2821, 2828, 349}, {2831, 2832, 350}, {2835, 2856, 351}, {2858, 2864, 352}, {2866, 2867, 353}, {2870, 2873, 354}, {2877, 2877, 355}, {2908, 2909, 356}, {2911, 2913, 357}, {2918, 2927, 358}, {2949, 2954, 359}, {2958, 2960, 360}, {2962, 2965, 361}, {2969, 2970, 362}, {2972, 2972, 363}, {2974, 2975, 364}, {2979, 2980, 365}, {2984, 2986, 366}, {2990, 2997, 367}, {2999, 3001, 368}, {3047, 3055, 369}, {3077, 3084, 370}, {3086, 3088, 371}, {3090, 3112, 372}, {3114, 3123, 373}, {3125, 3129, 374}, {3168, 3169, 375}, {3174, 3183, 376}, {3205, 3212, 377}, {3214, 3216, 378}, {3218, 3240, 379}, {3242, 3251, 380}, {3253, 3257, 381}, {3294, 3294, 382}, {3296, 3297, 383}, {3302, 3311, 384}, {3333, 3340, 385}, {3342, 3344, 386}, {3346, 3368, 387}, {3370, 3385, 388}, {3424, 3425, 389}, {3430, 3439, 390}, {3585, 3630, 391}, {3632, 3632, 392}, {3634, 3635, 393}, {3648, 3654, 394}, {3664, 3673, 395}, {3713, 3714, 396}, {3716, 3716, 397}, {3719, 3720, 398}, {3722, 3722, 399}, {3725, 3725, 400}, {3732, 3735, 401}, {3737, 3743, 402}, {3745, 3747, 403}, {3749, 3749, 404}, {3751, 3751, 405}, {3754, 3755, 406}, {3757, 3758, 407}, {3760, 3760, 408}, {3762, 3763, 409}, {3773, 3773, 410}, {3776, 3780, 411}, {3782, 3782, 412}, {3792, 3801, 413}, {3804, 3805, 414}, {3872, 3881, 415}, {3904, 3911, 416}, {3913, 3945, 417}, {4256, 4293, 418}, {4304, 4342, 419}, {4352, 4441, 420}, {4447, 4514, 421}, {4520, 4601, 422}, {7680, 7835, 423}, {7840, 7929, 424}, {7936, 7957, 425}, {7960, 7965, 426}, {7968, 8005, 427}, {8008, 8013, 428}, {8016, 8023, 429}, {8025, 8025, 430}, {8027, 8027, 431}, {8029, 8029, 432}, {8031, 8061, 433}, {8064, 8116, 434}, {8118, 8124, 435}, {8126, 8126, 436}, {8130, 8132, 437}, {8134, 8140, 438}, {8144, 8147, 439}, {8150, 8155, 440}, {8160, 8172, 441}, {8178, 8180, 442}, {8182, 8188, 443}, {8319, 8319, 444}, {8450, 8450, 445}, {8455, 8455, 446}, {8458, 8467, 447}, {8469, 8469, 448}, {8472, 8477, 449}, {8484, 8484, 450}, {8486, 8486, 451}, {8488, 8488, 452}, {8490, 8497, 453}, {8499, 8504, 454}, {12293, 12293, 455}, {12337, 12341, 456}, {12353, 12436, 457}, {12443, 12446, 458}, {12449, 12538, 459}, {12540, 12542, 460}, {12549, 12588, 461}, {12593, 12686, 462}, {19968, 40869, 463}, {44032, 55203, 464}, {63744, 64045, 465}, {64256, 64262, 466}, {64275, 64279, 467}, {64287, 64296, 468}, {64298, 64310, 469}, {64312, 64316, 470}, {64318, 64318, 471}, {64320, 64321, 472}, {64323, 64324, 473}, {64326, 64433, 474}, {64467, 64829, 475}, {64848, 64911, 476}, {64914, 64967, 477}, {65008, 65019, 478}, {65136, 65138, 479}, {65140, 65140, 480}, {65142, 65276, 481}, {65296, 65305, 482}, {65313, 65338, 483}, {65345, 65370, 484}, {65382, 65470, 485}, {65474, 65479, 486}, {65482, 65487, 487}, {65490, 65495, 488}, {65498, 65500, 489}, },
            {{61, 61, 490}, },
            {{38, 38, 491}, {61, 61, 492}, },
            {{0, 9, 493}, {11, 12, 493}, {14, 38, 493}, {40, 91, 493}, {92, 92, 494}, {93, 65535, 493}, },
            {},
            {},
            {{61, 61, 495}, },
            {{43, 43, 496}, {61, 61, 497}, },
            {},
            {{45, 45, 498}, {61, 61, 499}, },
            {{48, 57, 500}, },
            {{42, 42, 501}, {47, 47, 502}, {61, 61, 503}, },
            {{46, 46, 504}, {48, 55, 505}, {56, 57, 506}, {68, 68, 507}, {69, 69, 508}, {70, 70, 509}, {76, 76, 510}, {88, 88, 511}, {100, 100, 512}, {101, 101, 513}, {102, 102, 514}, {108, 108, 515}, {120, 120, 516}, },
            {{46, 46, 504}, {48, 57, 517}, {68, 76, -22}, {100, 108, -22}, },
            {},
            {},
            {{60, 60, 518}, {61, 61, 519}, },
            {{61, 61, 520}, },
            {{61, 61, 521}, {62, 62, 522}, },
            {},
            {{36, 65500, -10}, },
            {},
            {},
            {{61, 61, 523}, },
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 264}, {98, 98, 524}, {99, 122, 264}, {170, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 100, 264}, {101, 101, 525}, {102, 122, 264}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 117, 264}, {118, 118, 526}, {119, 119, 264}, {120, 120, 527}, {121, 122, 264}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 528}, {98, 122, 264}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 101, 264}, {102, 102, 529}, {103, 122, 264}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 110, 264}, {111, 111, 530}, {112, 122, 264}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 113, 264}, {114, 114, 531}, {115, 122, 264}, {170, 65500, -10}, },
            {},
            {{61, 61, 532}, {124, 124, 533}, },
            {},
            {},
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{9, 32, -2}, },
            {},
            {{0, 65535, -9}, },
            {},
            {{34, 34, 534}, {39, 39, 535}, {48, 51, 536}, {52, 55, 537}, {92, 92, 538}, {98, 98, 539}, {102, 102, 540}, {110, 110, 541}, {114, 114, 542}, {116, 116, 543}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {},
            {},
            {},
            {{39, 39, 544}, },
            {{34, 34, 545}, {39, 39, 546}, {48, 51, 547}, {52, 55, 548}, {92, 92, 549}, {98, 98, 550}, {102, 102, 551}, {110, 110, 552}, {114, 114, 553}, {116, 116, 554}, },
            {},
            {},
            {},
            {},
            {},
            {{48, 57, 500}, {68, 68, 555}, {69, 69, 556}, {70, 70, 557}, {100, 100, 558}, {101, 101, 559}, {102, 102, 560}, },
            {{0, 9, 561}, {10, 10, 562}, {11, 12, 561}, {13, 13, 563}, {14, 41, 561}, {42, 42, 564}, {43, 65535, 561}, },
            {{0, 9, 565}, {10, 10, 566}, {11, 12, 565}, {13, 13, 567}, {14, 65535, 565}, },
            {},
            {{48, 57, 568}, {68, 68, 569}, {69, 69, 570}, {70, 70, 571}, {100, 100, 572}, {101, 101, 573}, {102, 102, 574}, },
            {{46, 70, -22}, {76, 76, 575}, {100, 102, -22}, {108, 108, 576}, },
            {{46, 46, 504}, {48, 57, 506}, {68, 70, -22}, {100, 102, -22}, },
            {},
            {{43, 43, 577}, {45, 45, 578}, {48, 57, 579}, },
            {},
            {},
            {{48, 57, 580}, {65, 70, 581}, {97, 102, 582}, },
            {},
            {{43, 57, -510}, },
            {},
            {},
            {{48, 102, -513}, },
            {{46, 108, -23}, },
            {{61, 61, 583}, },
            {},
            {},
            {},
            {{61, 61, 584}, {62, 62, 585}, },
            {},
            {{36, 95, -10}, {97, 114, 264}, {115, 115, 586}, {116, 122, 264}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 111, 264}, {112, 112, 587}, {113, 122, 264}, {170, 65500, -10}, },
            {{36, 100, -37}, {101, 101, 588}, {102, 65500, -37}, },
            {{36, 95, -10}, {97, 115, 264}, {116, 116, 589}, {117, 122, 264}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 107, 264}, {108, 108, 590}, {109, 122, 264}, {170, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 107, -530}, {108, 108, 591}, {109, 65500, -530}, },
            {{36, 95, -10}, {97, 116, 264}, {117, 117, 592}, {118, 122, 264}, {170, 65500, -10}, },
            {},
            {},
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 34, -9}, {35, 47, 257}, {48, 55, 593}, {56, 91, 257}, {92, 65535, -9}, },
            {{0, 47, -538}, {48, 55, 594}, {56, 65535, -538}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {},
            {{39, 39, 544}, },
            {{39, 39, 544}, },
            {{39, 39, 544}, {48, 55, 595}, },
            {{39, 39, 544}, {48, 55, 596}, },
            {{39, 39, 544}, },
            {{39, 39, 544}, },
            {{39, 39, 544}, },
            {{39, 39, 544}, },
            {{39, 39, 544}, },
            {{39, 39, 544}, },
            {},
            {{43, 43, 597}, {45, 45, 598}, {48, 57, 599}, },
            {},
            {},
            {{43, 57, -558}, },
            {},
            {{0, 41, -503}, {42, 42, 600}, {43, 65535, 561}, },
            {{0, 65535, -563}, },
            {{0, 9, 561}, {10, 10, 601}, {11, 65535, -563}, },
            {{0, 9, 602}, {10, 10, 603}, {11, 12, 602}, {13, 13, 604}, {14, 41, 602}, {42, 42, 605}, {43, 46, 602}, {47, 47, 606}, {48, 65535, 602}, },
            {{0, 65535, -504}, },
            {},
            {{10, 10, 607}, },
            {{48, 102, -506}, },
            {},
            {{43, 43, 608}, {45, 45, 609}, {48, 57, 610}, },
            {},
            {},
            {{43, 57, -572}, },
            {},
            {},
            {},
            {{48, 57, 579}, },
            {{48, 57, 579}, },
            {{48, 57, 579}, {68, 68, 611}, {70, 70, 612}, {100, 100, 613}, {102, 102, 614}, },
            {{48, 70, -513}, {76, 76, 615}, {97, 102, 582}, {108, 108, 616}, },
            {{48, 108, -582}, },
            {{48, 108, -582}, },
            {},
            {},
            {{61, 61, 617}, },
            {{36, 115, -529}, {116, 116, 618}, {117, 65500, -529}, },
            {{36, 107, -530}, {108, 108, 619}, {109, 65500, -530}, },
            {{36, 95, -10}, {97, 109, 264}, {110, 110, 620}, {111, 122, 264}, {170, 65500, -10}, },
            {{36, 100, -37}, {101, 101, 621}, {102, 65500, -37}, },
            {{36, 114, -526}, {115, 115, 622}, {116, 65500, -526}, },
            {{36, 100, -37}, {101, 101, 623}, {102, 65500, -37}, },
            {{36, 100, -37}, {101, 101, 624}, {102, 65500, -37}, },
            {{0, 47, -538}, {48, 55, 625}, {56, 65535, -538}, },
            {{0, 65535, -9}, },
            {{39, 39, 544}, {48, 55, 626}, },
            {{39, 39, 544}, },
            {{48, 57, 599}, },
            {{48, 57, 599}, },
            {{48, 57, 599}, {68, 68, 555}, {70, 100, -502}, {102, 102, 560}, },
            {{0, 9, 627}, {10, 10, 628}, {11, 12, 627}, {13, 13, 629}, {14, 41, 627}, {42, 42, 600}, {43, 46, 627}, {47, 47, 630}, {48, 65535, 627}, },
            {{0, 65535, -563}, },
            {{0, 9, 631}, {10, 10, 632}, {11, 12, 631}, {13, 13, 633}, {14, 41, 631}, {42, 42, 634}, {43, 65535, 631}, },
            {{0, 65535, -604}, },
            {{0, 9, 631}, {10, 10, 635}, {11, 65535, -604}, },
            {{0, 65535, -566}, },
            {},
            {},
            {{48, 57, 610}, },
            {{48, 57, 610}, },
            {{48, 57, 610}, {68, 68, 569}, {70, 100, -506}, {102, 102, 574}, },
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {{36, 113, -42}, {114, 114, 636}, {115, 65500, -42}, },
            {{36, 110, -41}, {111, 111, 637}, {112, 65500, -41}, },
            {{36, 115, -529}, {116, 116, 638}, {117, 65500, -529}, },
            {{36, 109, -590}, {110, 110, 639}, {111, 65500, -590}, },
            {{36, 100, -37}, {101, 101, 640}, {102, 65500, -37}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{0, 65535, -9}, },
            {{39, 39, 544}, },
            {{0, 9, 641}, {10, 10, 642}, {11, 12, 641}, {13, 13, 643}, {14, 41, 641}, {42, 42, 644}, {43, 65535, 641}, },
            {{0, 65535, -629}, },
            {{0, 9, 641}, {10, 10, 645}, {11, 65535, -629}, },
            {},
            {{0, 65535, -604}, },
            {{0, 65535, -604}, },
            {{0, 9, 631}, {10, 10, 646}, {11, 65535, -604}, },
            {{0, 41, -566}, {42, 42, 634}, {43, 65535, -566}, },
            {{0, 65535, -604}, },
            {{36, 95, -10}, {97, 97, 647}, {98, 65500, -39}, },
            {{36, 95, -10}, {97, 120, 264}, {121, 121, 648}, {122, 122, 264}, {170, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 99, 264}, {100, 100, 649}, {101, 122, 264}, {170, 65500, -10}, },
            {{36, 65500, -10}, },
            {{0, 65535, -629}, },
            {{0, 65535, -629}, },
            {{0, 9, 641}, {10, 10, 650}, {11, 65535, -629}, },
            {{0, 41, -602}, {42, 42, 644}, {43, 65535, -602}, },
            {{0, 65535, -629}, },
            {{0, 65535, -604}, },
            {{36, 95, -10}, {97, 98, 264}, {99, 99, 651}, {100, 122, 264}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 108, 264}, {109, 109, 652}, {110, 122, 264}, {170, 65500, -10}, },
            {{36, 114, -526}, {115, 115, 653}, {116, 65500, -526}, },
            {{0, 65535, -629}, },
            {{36, 115, -529}, {116, 116, 654}, {117, 65500, -529}, },
            {{36, 100, -37}, {101, 101, 655}, {102, 65500, -37}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 109, -590}, {110, 110, 656}, {111, 65500, -590}, },
            {{36, 115, -529}, {116, 116, 657}, {117, 65500, -529}, },
            {{36, 65500, -10}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {0, 0, 0, 0, 0, 0, 24, -1, 64, 43, 40, -1, 12, 13, 38, 36, 19, 37, 20, 39, 58, 58, 27, 18, 22, 21, 23, 26, 64, 16, 17, 42, 64, 64, 64, 64, 64, 64, 64, 64, 64, 14, 41, 15, 25, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 0, 31, -1, 63, -1, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 54, 32, 51, -1, -1, 49, 34, 47, 35, 48, 61, -1, 3, 50, 61, 60, -1, 61, -1, 61, 58, -1, 61, -1, 61, 58, -1, 58, 44, 29, 28, 30, 45, 53, 64, 64, 64, 64, 64, 5, 64, 64, 52, 33, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 61, -1, 61, 61, -1, 61, -1, -1, -1, -1, 3, 3, 3, 61, 61, -1, 61, 61, -1, 61, 60, 60, -1, -1, 61, 59, 59, 59, 55, 56, 46, 64, 64, 64, 64, 64, 64, 64, -1, -1, -1, -1, -1, -1, 61, -1, -1, -1, -1, -1, -1, 2, 3, -1, -1, 61, 61, 61, 61, 61, 59, 59, 57, 64, 64, 64, 64, 64, 6, 10, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, 64, 64, 7, 64, 11, -1, -1, -1, -1, -1, -1, 64, 64, 64, -1, 64, 64, 8, 4, 64, 64, 9, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
